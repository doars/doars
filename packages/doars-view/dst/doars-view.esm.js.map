{"version":3,"file":"doars-view.esm.js","sources":["../src/symbols.js","../src/factories/directives/view.js","../src/ViewObserver.js","../src/DoarsView.js"],"sourcesContent":["export const VIEW = Symbol('VIEW')\n","// Import symbols.\nimport { VIEW } from '../../symbols.js'\n\n// Declare constants.\nconst EXECUTION_MODIFIERS = {\n  NONE: 0,\n  BUFFER: 1,\n  DEBOUNCE: 2,\n  THROTTLE: 3,\n}\n\nexport default function (observer) {\n  return {\n    name: 'view',\n\n    update: (component, attribute, { executeExpression }) => {\n      // Deconstruct attribute.\n      const element = attribute.getElement()\n      const key = attribute.getKey()\n      const value = attribute.getValue()\n\n      // Check if existing handler exists.\n      if (attribute[VIEW]) {\n        // Exit early if value has not changed.\n        if (attribute[VIEW].value === value) {\n          return\n        }\n\n        // Stop observing the element.\n        observer.remove(element, attribute[VIEW].handler)\n        // Clear any ongoing timeouts.\n        if (attribute[VIEW].timeout) {\n          clearTimeout(attribute[VIEW].timeout)\n        }\n        // Delete directive data.\n        delete attribute[VIEW]\n      }\n\n      // Deconstruct attribute.\n      const modifiers = attribute.getModifiers()\n\n      // Process execution modifiers.\n      let executionModifier = EXECUTION_MODIFIERS.NONE\n      if (modifiers.buffer) {\n        executionModifier = EXECUTION_MODIFIERS.BUFFER\n        if (modifiers.buffer === true) {\n          modifiers.buffer = 5\n        }\n      } else if (modifiers.debounce) {\n        executionModifier = EXECUTION_MODIFIERS.DEBOUNCE\n        if (modifiers.debounce === true) {\n          modifiers.debounce = 500\n        }\n      } else if (modifiers.throttle) {\n        executionModifier = EXECUTION_MODIFIERS.THROTTLE\n        if (modifiers.throttle === true) {\n          modifiers.throttle = 500\n        }\n      }\n\n      // Create intersection handler.\n      const handler = (event) => {\n        // Check if intersection has changed.\n        const isChanged = attribute[VIEW].isIntersecting !== event.isIntersecting\n        if (!isChanged) {\n          return\n        }\n\n        // Update state in attribute data.\n        attribute[VIEW].isIntersecting = event.isIntersecting\n\n        // Exit early if expression should not be executed.\n        if ((key === 'enter' && !event.isIntersecting) || (key === 'leave' && event.isIntersecting)) {\n          // Clear existing timeout.\n          if (attribute[VIEW].timeout) {\n            clearTimeout(attribute[VIEW].timeout)\n            attribute[VIEW].timeout = null\n          }\n          return\n        }\n\n        const execute = () => {\n          // Execute value using a copy of the attribute since this attribute should not update based on what contexts will be accessed.\n          executeExpression(component, attribute.clone(), value, {\n            $event: event,\n          }, { return: false })\n\n          // Reset the buffer.\n          attribute[VIEW].buffer = []\n        }\n\n        // Store event in buffer.\n        attribute[VIEW].buffer.push(event)\n\n        // Check if we need to apply an execution modifier.\n        if (executionModifier === EXECUTION_MODIFIERS.BUFFER) {\n          // Exit early if buffer is not full.\n          if (attribute[VIEW].buffer.length < modifiers.buffer) {\n            return\n          }\n\n          execute()\n        } else if (executionModifier === EXECUTION_MODIFIERS.BUFFER) {\n          // Clear existing timeout.\n          if (attribute[VIEW].timeout) {\n            clearTimeout(attribute[VIEW].timeout)\n            attribute[VIEW].timeout = null\n          }\n\n          // Setup timeout and execute expression when it finishes.\n          attribute[VIEW].timeout = setTimeout(execute, modifiers.debounce)\n        } else if (executionModifier === EXECUTION_MODIFIERS.THROTTLE) {\n          // Get current time in milliseconds.\n          const now = window.performance.now()\n\n          // Exit early if throttle time has not passed.\n          if (attribute[VIEW].lastExecution && now - attribute[VIEW].lastExecution < modifiers.throttle) {\n            return\n          }\n\n          execute()\n\n          // Store new latest execution time.\n          attribute[VIEW].lastExecution = now\n        } else {\n          // Execute expression.\n          execute()\n        }\n      }\n\n      // Start observing the element.\n      observer.add(element, handler)\n\n      // Store handler.\n      attribute[VIEW] = {\n        buffer: [],\n        handler: handler,\n        isIntersecting: false,\n        timeout: attribute[VIEW] ? attribute[VIEW].timeout : null,\n        value: value,\n      }\n    },\n\n    destroy: (component, attribute) => {\n      // Check if a handler exists.\n      if (!attribute[VIEW]) {\n        return\n      }\n\n      // Deconstruct attribute.\n      const element = attribute.getElement()\n\n      // Stop observing the element.\n      observer.remove(element, attribute[VIEW].handler)\n      // Clear any ongoing timeouts.\n      if (attribute[VIEW].timeout) {\n        clearTimeout(attribute[VIEW].timeout)\n      }\n      // Delete directive data.\n      delete attribute[VIEW]\n    },\n  }\n}\n","class ViewObserver {\n  /**\n   * Create observer instance.\n   * @param {Object} options Intersection observer options.\n   */\n  constructor(options = null) {\n    // Overwrite default options.\n    options = Object.assign({\n      root: null,\n      rootMargin: '0px',\n      threshold: 0,\n    }, options)\n\n    // Store data per element.\n    const items = new WeakMap()\n\n    /**\n     * Intersection observer handler.\n     * @param {Array<IntersectionObserverEntry>} entries Intersection observer entries.\n     */\n    const intersect = function (entries) {\n      // Invoke callbacks of each entry.\n      for (const entry of entries) {\n        for (const callback of items.get(entry.target)) {\n          callback(entry)\n        }\n      }\n    }\n\n    // Create intersection observer.\n    const intersectionObserver = new IntersectionObserver(intersect, options)\n\n    /**\n     * Add element to observe.\n     * @param {HTMLElement} element Element to observer.\n     * @param {Function} callback Callback to call on intersection change.\n     */\n    this.add = function (element, callback) {\n      // Add callback to list.\n      if (!items.has(element)) {\n        items.set(element, [])\n      }\n      items.get(element).push(callback)\n\n      // Start observing element.\n      intersectionObserver.observe(element)\n    }\n\n    /**\n     * Remove element from observing.\n     * @param {HTMLElement} element Element that is observed.\n     * @param {Function} callback Callback that is called on intersection change.\n     */\n    this.remove = function (element, callback) {\n      // Remove callback from list.\n      if (!items.has(element)) {\n        return\n      }\n      const list = items.get(element)\n      const index = list.indexOf(callback)\n      if (index >= 0) {\n        list.splice(index, 1)\n      }\n\n      // Check if there are no more callbacks.\n      if (list.length === 0) {\n        // Remove element from callbacks list.\n        items.delete(element)\n\n        // Stop observing element.\n        intersectionObserver.unobserve(element)\n      }\n    }\n  }\n}\n\nexport default ViewObserver\n","// Import directives.\nimport createDirectiveView from './factories/directives/view.js'\n\n// Import observer.\nimport ViewObserver from './ViewObserver.js'\n\nclass DoarsView {\n  /**\n   * Create plugin instance.\n   * @param {Doars} library Doars instance to add onto.\n   * @param {Object} options The plugin options.\n   */\n  constructor(library, options = null) {\n    // Store options.\n    options = Object.assign({}, options)\n\n    // Set private variables.\n    let directiveView, observer\n\n    // Enable plugin when library is enabling.\n    library.addEventListener('enabling', () => {\n      // Overwrite default options.\n      const _options = Object.assign({}, options)\n      if (!_options.root) {\n        _options.root = library.getOptions().root\n      }\n\n      // Setup observer.\n      observer = new ViewObserver(options)\n\n      // Create and add directive.\n      directiveView = createDirectiveView(observer)\n      library.addDirectives(-1, directiveView)\n    })\n\n    // Disable plugin when library is disabling.\n    library.addEventListener('disabling', () => {\n      // Remove directive.\n      library.removeDirectives(directiveView)\n      directiveView = null\n\n      // Remove observer.\n      observer = null\n    })\n  }\n}\n\nexport default DoarsView\n"],"names":["VIEW","Symbol","EXECUTION_MODIFIERS","NONE","BUFFER","DEBOUNCE","THROTTLE","observer","name","update","component","attribute","executeExpression","element","getElement","key","getKey","value","getValue","remove","handler","timeout","clearTimeout","modifiers","getModifiers","executionModifier","buffer","debounce","throttle","event","isChanged","isIntersecting","execute","clone","$event","push","length","setTimeout","now","window","performance","lastExecution","add","destroy","ViewObserver","options","Object","assign","root","rootMargin","threshold","items","WeakMap","intersect","entries","entry","get","target","callback","intersectionObserver","IntersectionObserver","has","set","observe","list","index","indexOf","splice","unobserve","DoarsView","library","directiveView","addEventListener","_options","getOptions","createDirectiveView","addDirectives","removeDirectives"],"mappings":"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"}