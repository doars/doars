{"version":3,"file":"doars-view.esm.js","sources":["../src/symbols.js","../src/factories/directives/view.js","../src/ViewObserver.js","../src/DoarsView.js"],"sourcesContent":["export const VIEW = Symbol('VIEW')\n","// Import symbols.\nimport { VIEW } from '../../symbols.js'\n\n// Declare constants.\nconst EXECUTION_MODIFIERS = {\n  NONE: 0,\n  BUFFER: 1,\n  DEBOUNCE: 2,\n  THROTTLE: 3,\n}\n\nexport default (observer) => {\n  return {\n    name: 'view',\n\n    update: (component, attribute, { processExpression }) => {\n      // Deconstruct attribute.\n      const element = attribute.getElement()\n      const key = attribute.getKey()\n      const value = attribute.getValue()\n\n      // Check if existing handler exists.\n      if (attribute[VIEW]) {\n        // Exit early if value has not changed.\n        if (attribute[VIEW].value === value) {\n          return\n        }\n\n        // Stop observing the element.\n        observer.remove(element, attribute[VIEW].handler)\n        // Clear any ongoing timeouts.\n        if (attribute[VIEW].timeout) {\n          clearTimeout(attribute[VIEW].timeout)\n        }\n        // Delete directive data.\n        delete attribute[VIEW]\n      }\n\n      // Deconstruct attribute.\n      const modifiers = attribute.getModifiers()\n\n      // Process execution modifiers.\n      let executionModifier = EXECUTION_MODIFIERS.NONE\n      if (modifiers.buffer) {\n        executionModifier = EXECUTION_MODIFIERS.BUFFER\n        if (modifiers.buffer === true) {\n          modifiers.buffer = 5\n        }\n      } else if (modifiers.debounce) {\n        executionModifier = EXECUTION_MODIFIERS.DEBOUNCE\n        if (modifiers.debounce === true) {\n          modifiers.debounce = 500\n        }\n      } else if (modifiers.throttle) {\n        executionModifier = EXECUTION_MODIFIERS.THROTTLE\n        if (modifiers.throttle === true) {\n          modifiers.throttle = 500\n        }\n      }\n\n      // Create intersection handler.\n      const handler = (event) => {\n        // Check if intersection has changed.\n        const isChanged = attribute[VIEW].isIntersecting !== event.isIntersecting\n        if (!isChanged) {\n          return\n        }\n\n        // Update state in attribute data.\n        attribute[VIEW].isIntersecting = event.isIntersecting\n\n        // Exit early if expression should not be executed.\n        if ((key === 'enter' && !event.isIntersecting) || (key === 'leave' && event.isIntersecting)) {\n          // Clear existing timeout.\n          if (attribute[VIEW].timeout) {\n            clearTimeout(attribute[VIEW].timeout)\n            attribute[VIEW].timeout = null\n          }\n          return\n        }\n\n        const execute = () => {\n          // Execute value using a copy of the attribute since this attribute should not update based on what contexts will be accessed.\n          processExpression(component, attribute.clone(), value, {\n            $event: event,\n          }, { return: false })\n\n          // Reset the buffer.\n          attribute[VIEW].buffer = []\n        }\n\n        // Store event in buffer.\n        attribute[VIEW].buffer.push(event)\n\n        // Check if we need to apply an execution modifier.\n        if (executionModifier === EXECUTION_MODIFIERS.BUFFER) {\n          // Exit early if buffer is not full.\n          if (attribute[VIEW].buffer.length < modifiers.buffer) {\n            return\n          }\n\n          execute()\n        } else if (executionModifier === EXECUTION_MODIFIERS.BUFFER) {\n          // Clear existing timeout.\n          if (attribute[VIEW].timeout) {\n            clearTimeout(attribute[VIEW].timeout)\n            attribute[VIEW].timeout = null\n          }\n\n          // Setup timeout and execute expression when it finishes.\n          attribute[VIEW].timeout = setTimeout(execute, modifiers.debounce)\n        } else if (executionModifier === EXECUTION_MODIFIERS.THROTTLE) {\n          // Get current time in milliseconds.\n          const now = window.performance.now()\n\n          // Exit early if throttle time has not passed.\n          if (attribute[VIEW].lastExecution && now - attribute[VIEW].lastExecution < modifiers.throttle) {\n            return\n          }\n\n          execute()\n\n          // Store new latest execution time.\n          attribute[VIEW].lastExecution = now\n        } else {\n          // Execute expression.\n          execute()\n        }\n      }\n\n      // Start observing the element.\n      observer.add(element, handler)\n\n      // Store handler.\n      attribute[VIEW] = {\n        buffer: [],\n        handler: handler,\n        isIntersecting: false,\n        timeout: attribute[VIEW] ? attribute[VIEW].timeout : null,\n        value: value,\n      }\n    },\n\n    destroy: (component, attribute) => {\n      // Check if a handler exists.\n      if (!attribute[VIEW]) {\n        return\n      }\n\n      // Deconstruct attribute.\n      const element = attribute.getElement()\n\n      // Stop observing the element.\n      observer.remove(element, attribute[VIEW].handler)\n      // Clear any ongoing timeouts.\n      if (attribute[VIEW].timeout) {\n        clearTimeout(attribute[VIEW].timeout)\n      }\n      // Delete directive data.\n      delete attribute[VIEW]\n    },\n  }\n}\n","export default class ViewObserver {\n  /**\n   * Create observer instance.\n   * @param {Object} options Intersection observer options.\n   */\n  constructor(options = null) {\n    // Overwrite default options.\n    options = Object.assign({\n      root: null,\n      rootMargin: '0px',\n      threshold: 0,\n    }, options)\n\n    // Store data per element.\n    const items = new WeakMap()\n\n    /**\n     * Intersection observer handler.\n     * @param {Array<IntersectionObserverEntry>} entries Intersection observer entries.\n     */\n    const intersect = (entries) => {\n      // Invoke callbacks of each entry.\n      for (const entry of entries) {\n        for (const callback of items.get(entry.target)) {\n          callback(entry)\n        }\n      }\n    }\n\n    // Create intersection observer.\n    const intersectionObserver = new IntersectionObserver(intersect, options)\n\n    /**\n     * Add element to observe.\n     * @param {HTMLElement} element Element to observer.\n     * @param {Function} callback Callback to call on intersection change.\n     */\n    this.add = (element, callback) => {\n      // Add callback to list.\n      if (!items.has(element)) {\n        items.set(element, [])\n      }\n      items.get(element).push(callback)\n\n      // Start observing element.\n      intersectionObserver.observe(element)\n    }\n\n    /**\n     * Remove element from observing.\n     * @param {HTMLElement} element Element that is observed.\n     * @param {Function} callback Callback that is called on intersection change.\n     */\n    this.remove = (element, callback) => {\n      // Remove callback from list.\n      if (!items.has(element)) {\n        return\n      }\n      const list = items.get(element)\n      const index = list.indexOf(callback)\n      if (index >= 0) {\n        list.splice(index, 1)\n      }\n\n      // Check if there are no more callbacks.\n      if (list.length === 0) {\n        // Remove element from callbacks list.\n        items.delete(element)\n\n        // Stop observing element.\n        intersectionObserver.unobserve(element)\n      }\n    }\n  }\n}\n","// Import directives.\nimport createDirectiveView from './factories/directives/view.js'\n\n// Import observer.\nimport ViewObserver from './ViewObserver.js'\n\nexport default class DoarsView {\n  /**\n   * Create plugin instance.\n   * @param {Doars} library Doars instance to add onto.\n   * @param {Object} options The plugin options.\n   */\n  constructor(library, options = null) {\n    // Store options.\n    options = Object.assign({}, options)\n\n    // Set private variables.\n    let directiveView, observer\n\n    // Enable plugin when library is enabling.\n    library.addEventListener('enabling', () => {\n      // Overwrite default options.\n      const _options = Object.assign({}, options)\n      if (!_options.root) {\n        _options.root = library.getOptions().root\n      }\n\n      // Setup observer.\n      observer = new ViewObserver(options)\n\n      // Create and add directive.\n      directiveView = createDirectiveView(observer)\n      library.addDirectives(-1, directiveView)\n    })\n\n    // Disable plugin when library is disabling.\n    library.addEventListener('disabling', () => {\n      // Remove directive.\n      library.removeDirectives(directiveView)\n      directiveView = null\n\n      // Remove observer.\n      observer = null\n    })\n  }\n}\n"],"names":["VIEW","Symbol","EXECUTION_MODIFIERS","NONE","BUFFER","DEBOUNCE","THROTTLE","observer","name","update","component","attribute","processExpression","element","getElement","key","getKey","value","getValue","remove","handler","timeout","clearTimeout","modifiers","getModifiers","executionModifier","buffer","debounce","throttle","event","isChanged","isIntersecting","execute","clone","$event","return","push","length","setTimeout","now","window","performance","lastExecution","add","destroy","ViewObserver","options","Object","assign","root","rootMargin","threshold","items","WeakMap","intersect","entries","entry","get","target","callback","intersectionObserver","IntersectionObserver","has","set","observe","list","index","indexOf","splice","delete","unobserve","DoarsView","library","directiveView","addEventListener","_options","getOptions","createDirectiveView","addDirectives","removeDirectives"],"mappings":"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"}