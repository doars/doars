{"version":3,"file":"doars-router.umd.js","sources":["../../utils/src/polyfills/RevocableProxy.js","../src/symbols.js","../src/utils.js","../src/contexts/router.js","../../../node_modules/path-to-regexp/dist.es2015/index.js","../../utils/src/events/EventDispatcher.js","../src/Router.js","../src/factories/directives/router.js","../../utils/src/ElementUtils.js","../src/directives/route.js","../src/directives/routeTo.js","../../utils/src/ObjectUtils.js","../src/DoarsRouter.js"],"sourcesContent":["// List of methods to revoke access to.\nconst REFLECTION_METHODS = [\n  'apply',\n  'construct',\n  'defineProperty',\n  'deleteProperty',\n  'get',\n  'getOwnPropertyDescriptor',\n  'getPrototypeOf',\n  'isExtensible',\n  'ownKeys',\n  'preventExtensions',\n  'set',\n  'setPrototypeOf',\n]\n\n/**\n * Revocable proxy made using regular a proxy and a simple boolean.\n */\nexport default (target, handler) => {\n  // Keep track of status.\n  let revoked = false\n\n  // Add revocable handlers for each given handlers.\n  const revocableHandler = {}\n  for (const key of REFLECTION_METHODS) {\n    revocableHandler[key] = (...parameters) => {\n      if (revoked) {\n        console.error('illegal operation attempted on a revoked proxy')\n        return\n      }\n\n      if (key in handler) {\n        return handler[key](...parameters)\n      }\n      return Reflect[key](...parameters)\n    }\n  }\n\n  // Return proxy and revoke method.\n  return {\n    proxy: new Proxy(target, revocableHandler),\n    revoke: () => {\n      revoked = true\n    },\n  }\n}\n","export const ROUTE_TO = Symbol('ROUTE_TO')\n\nexport const ROUTER = Symbol('ROUTER')\n\nexport const ROUTE = Symbol('ROUTE')\n","// Import symbols.\nimport { ROUTER } from './symbols.js'\n\n/**\n * Get closest router in hierarchy.\n * @param {HTMLElement} element Element to start searching from.\n * @returns {Router} Closest router.\n */\nexport const closestRouter = (element) => {\n  if (!element.parentElement) {\n    return\n  }\n  element = element.parentElement\n\n  if (element[ROUTER]) {\n    return element[ROUTER]\n  }\n\n  return closestRouter(element)\n}\n\nexport default {\n  closestRouter: closestRouter,\n}\n","// Import polyfill.\nimport RevocableProxy from '@doars/utils/src/polyfills/RevocableProxy.js'\n\n// Import symbol.\nimport { ROUTER } from '../symbols'\n\n// Import utils.\nimport { closestRouter } from '../utils.js'\n\nexport default {\n  name: '$router',\n\n  create: (component, attribute) => {\n    // Deconstruct attribute.\n    const element = attribute.getElement()\n\n    let router = null\n    const revocable = RevocableProxy({}, {\n      get: (target, propertyKey, receiver) => {\n        // Get closest router from hierarchy.\n        if (router === null) {\n          if (element[ROUTER]) {\n            router = element[ROUTER]\n          } else {\n            router = closestRouter(element)\n          }\n\n          // Set router to false so we don't look twice.\n          if (!router) {\n            router = false\n          }\n        }\n\n        // Mark as router accessed.\n        attribute.accessed(router.getId(), '')\n\n        if (!router) {\n          return\n        }\n\n        // Return router property.\n        return Reflect.get(router, propertyKey, receiver)\n      },\n    })\n\n    return {\n      value: revocable.proxy,\n\n      destroy: () => {\n        revocable.revoke()\n      },\n    }\n  },\n}\n","/**\n * Tokenize input string.\n */\nfunction lexer(str) {\n    var tokens = [];\n    var i = 0;\n    while (i < str.length) {\n        var char = str[i];\n        if (char === \"*\" || char === \"+\" || char === \"?\") {\n            tokens.push({ type: \"MODIFIER\", index: i, value: str[i++] });\n            continue;\n        }\n        if (char === \"\\\\\") {\n            tokens.push({ type: \"ESCAPED_CHAR\", index: i++, value: str[i++] });\n            continue;\n        }\n        if (char === \"{\") {\n            tokens.push({ type: \"OPEN\", index: i, value: str[i++] });\n            continue;\n        }\n        if (char === \"}\") {\n            tokens.push({ type: \"CLOSE\", index: i, value: str[i++] });\n            continue;\n        }\n        if (char === \":\") {\n            var name = \"\";\n            var j = i + 1;\n            while (j < str.length) {\n                var code = str.charCodeAt(j);\n                if (\n                // `0-9`\n                (code >= 48 && code <= 57) ||\n                    // `A-Z`\n                    (code >= 65 && code <= 90) ||\n                    // `a-z`\n                    (code >= 97 && code <= 122) ||\n                    // `_`\n                    code === 95) {\n                    name += str[j++];\n                    continue;\n                }\n                break;\n            }\n            if (!name)\n                throw new TypeError(\"Missing parameter name at \".concat(i));\n            tokens.push({ type: \"NAME\", index: i, value: name });\n            i = j;\n            continue;\n        }\n        if (char === \"(\") {\n            var count = 1;\n            var pattern = \"\";\n            var j = i + 1;\n            if (str[j] === \"?\") {\n                throw new TypeError(\"Pattern cannot start with \\\"?\\\" at \".concat(j));\n            }\n            while (j < str.length) {\n                if (str[j] === \"\\\\\") {\n                    pattern += str[j++] + str[j++];\n                    continue;\n                }\n                if (str[j] === \")\") {\n                    count--;\n                    if (count === 0) {\n                        j++;\n                        break;\n                    }\n                }\n                else if (str[j] === \"(\") {\n                    count++;\n                    if (str[j + 1] !== \"?\") {\n                        throw new TypeError(\"Capturing groups are not allowed at \".concat(j));\n                    }\n                }\n                pattern += str[j++];\n            }\n            if (count)\n                throw new TypeError(\"Unbalanced pattern at \".concat(i));\n            if (!pattern)\n                throw new TypeError(\"Missing pattern at \".concat(i));\n            tokens.push({ type: \"PATTERN\", index: i, value: pattern });\n            i = j;\n            continue;\n        }\n        tokens.push({ type: \"CHAR\", index: i, value: str[i++] });\n    }\n    tokens.push({ type: \"END\", index: i, value: \"\" });\n    return tokens;\n}\n/**\n * Parse a string for the raw tokens.\n */\nexport function parse(str, options) {\n    if (options === void 0) { options = {}; }\n    var tokens = lexer(str);\n    var _a = options.prefixes, prefixes = _a === void 0 ? \"./\" : _a;\n    var defaultPattern = \"[^\".concat(escapeString(options.delimiter || \"/#?\"), \"]+?\");\n    var result = [];\n    var key = 0;\n    var i = 0;\n    var path = \"\";\n    var tryConsume = function (type) {\n        if (i < tokens.length && tokens[i].type === type)\n            return tokens[i++].value;\n    };\n    var mustConsume = function (type) {\n        var value = tryConsume(type);\n        if (value !== undefined)\n            return value;\n        var _a = tokens[i], nextType = _a.type, index = _a.index;\n        throw new TypeError(\"Unexpected \".concat(nextType, \" at \").concat(index, \", expected \").concat(type));\n    };\n    var consumeText = function () {\n        var result = \"\";\n        var value;\n        while ((value = tryConsume(\"CHAR\") || tryConsume(\"ESCAPED_CHAR\"))) {\n            result += value;\n        }\n        return result;\n    };\n    while (i < tokens.length) {\n        var char = tryConsume(\"CHAR\");\n        var name = tryConsume(\"NAME\");\n        var pattern = tryConsume(\"PATTERN\");\n        if (name || pattern) {\n            var prefix = char || \"\";\n            if (prefixes.indexOf(prefix) === -1) {\n                path += prefix;\n                prefix = \"\";\n            }\n            if (path) {\n                result.push(path);\n                path = \"\";\n            }\n            result.push({\n                name: name || key++,\n                prefix: prefix,\n                suffix: \"\",\n                pattern: pattern || defaultPattern,\n                modifier: tryConsume(\"MODIFIER\") || \"\",\n            });\n            continue;\n        }\n        var value = char || tryConsume(\"ESCAPED_CHAR\");\n        if (value) {\n            path += value;\n            continue;\n        }\n        if (path) {\n            result.push(path);\n            path = \"\";\n        }\n        var open = tryConsume(\"OPEN\");\n        if (open) {\n            var prefix = consumeText();\n            var name_1 = tryConsume(\"NAME\") || \"\";\n            var pattern_1 = tryConsume(\"PATTERN\") || \"\";\n            var suffix = consumeText();\n            mustConsume(\"CLOSE\");\n            result.push({\n                name: name_1 || (pattern_1 ? key++ : \"\"),\n                pattern: name_1 && !pattern_1 ? defaultPattern : pattern_1,\n                prefix: prefix,\n                suffix: suffix,\n                modifier: tryConsume(\"MODIFIER\") || \"\",\n            });\n            continue;\n        }\n        mustConsume(\"END\");\n    }\n    return result;\n}\n/**\n * Compile a string to a template function for the path.\n */\nexport function compile(str, options) {\n    return tokensToFunction(parse(str, options), options);\n}\n/**\n * Expose a method for transforming tokens into the path function.\n */\nexport function tokensToFunction(tokens, options) {\n    if (options === void 0) { options = {}; }\n    var reFlags = flags(options);\n    var _a = options.encode, encode = _a === void 0 ? function (x) { return x; } : _a, _b = options.validate, validate = _b === void 0 ? true : _b;\n    // Compile all the tokens into regexps.\n    var matches = tokens.map(function (token) {\n        if (typeof token === \"object\") {\n            return new RegExp(\"^(?:\".concat(token.pattern, \")$\"), reFlags);\n        }\n    });\n    return function (data) {\n        var path = \"\";\n        for (var i = 0; i < tokens.length; i++) {\n            var token = tokens[i];\n            if (typeof token === \"string\") {\n                path += token;\n                continue;\n            }\n            var value = data ? data[token.name] : undefined;\n            var optional = token.modifier === \"?\" || token.modifier === \"*\";\n            var repeat = token.modifier === \"*\" || token.modifier === \"+\";\n            if (Array.isArray(value)) {\n                if (!repeat) {\n                    throw new TypeError(\"Expected \\\"\".concat(token.name, \"\\\" to not repeat, but got an array\"));\n                }\n                if (value.length === 0) {\n                    if (optional)\n                        continue;\n                    throw new TypeError(\"Expected \\\"\".concat(token.name, \"\\\" to not be empty\"));\n                }\n                for (var j = 0; j < value.length; j++) {\n                    var segment = encode(value[j], token);\n                    if (validate && !matches[i].test(segment)) {\n                        throw new TypeError(\"Expected all \\\"\".concat(token.name, \"\\\" to match \\\"\").concat(token.pattern, \"\\\", but got \\\"\").concat(segment, \"\\\"\"));\n                    }\n                    path += token.prefix + segment + token.suffix;\n                }\n                continue;\n            }\n            if (typeof value === \"string\" || typeof value === \"number\") {\n                var segment = encode(String(value), token);\n                if (validate && !matches[i].test(segment)) {\n                    throw new TypeError(\"Expected \\\"\".concat(token.name, \"\\\" to match \\\"\").concat(token.pattern, \"\\\", but got \\\"\").concat(segment, \"\\\"\"));\n                }\n                path += token.prefix + segment + token.suffix;\n                continue;\n            }\n            if (optional)\n                continue;\n            var typeOfMessage = repeat ? \"an array\" : \"a string\";\n            throw new TypeError(\"Expected \\\"\".concat(token.name, \"\\\" to be \").concat(typeOfMessage));\n        }\n        return path;\n    };\n}\n/**\n * Create path match function from `path-to-regexp` spec.\n */\nexport function match(str, options) {\n    var keys = [];\n    var re = pathToRegexp(str, keys, options);\n    return regexpToFunction(re, keys, options);\n}\n/**\n * Create a path match function from `path-to-regexp` output.\n */\nexport function regexpToFunction(re, keys, options) {\n    if (options === void 0) { options = {}; }\n    var _a = options.decode, decode = _a === void 0 ? function (x) { return x; } : _a;\n    return function (pathname) {\n        var m = re.exec(pathname);\n        if (!m)\n            return false;\n        var path = m[0], index = m.index;\n        var params = Object.create(null);\n        var _loop_1 = function (i) {\n            if (m[i] === undefined)\n                return \"continue\";\n            var key = keys[i - 1];\n            if (key.modifier === \"*\" || key.modifier === \"+\") {\n                params[key.name] = m[i].split(key.prefix + key.suffix).map(function (value) {\n                    return decode(value, key);\n                });\n            }\n            else {\n                params[key.name] = decode(m[i], key);\n            }\n        };\n        for (var i = 1; i < m.length; i++) {\n            _loop_1(i);\n        }\n        return { path: path, index: index, params: params };\n    };\n}\n/**\n * Escape a regular expression string.\n */\nfunction escapeString(str) {\n    return str.replace(/([.+*?=^!:${}()[\\]|/\\\\])/g, \"\\\\$1\");\n}\n/**\n * Get the flags for a regexp from the options.\n */\nfunction flags(options) {\n    return options && options.sensitive ? \"\" : \"i\";\n}\n/**\n * Pull out keys from a regexp.\n */\nfunction regexpToRegexp(path, keys) {\n    if (!keys)\n        return path;\n    var groupsRegex = /\\((?:\\?<(.*?)>)?(?!\\?)/g;\n    var index = 0;\n    var execResult = groupsRegex.exec(path.source);\n    while (execResult) {\n        keys.push({\n            // Use parenthesized substring match if available, index otherwise\n            name: execResult[1] || index++,\n            prefix: \"\",\n            suffix: \"\",\n            modifier: \"\",\n            pattern: \"\",\n        });\n        execResult = groupsRegex.exec(path.source);\n    }\n    return path;\n}\n/**\n * Transform an array into a regexp.\n */\nfunction arrayToRegexp(paths, keys, options) {\n    var parts = paths.map(function (path) { return pathToRegexp(path, keys, options).source; });\n    return new RegExp(\"(?:\".concat(parts.join(\"|\"), \")\"), flags(options));\n}\n/**\n * Create a path regexp from string input.\n */\nfunction stringToRegexp(path, keys, options) {\n    return tokensToRegexp(parse(path, options), keys, options);\n}\n/**\n * Expose a function for taking tokens and returning a RegExp.\n */\nexport function tokensToRegexp(tokens, keys, options) {\n    if (options === void 0) { options = {}; }\n    var _a = options.strict, strict = _a === void 0 ? false : _a, _b = options.start, start = _b === void 0 ? true : _b, _c = options.end, end = _c === void 0 ? true : _c, _d = options.encode, encode = _d === void 0 ? function (x) { return x; } : _d, _e = options.delimiter, delimiter = _e === void 0 ? \"/#?\" : _e, _f = options.endsWith, endsWith = _f === void 0 ? \"\" : _f;\n    var endsWithRe = \"[\".concat(escapeString(endsWith), \"]|$\");\n    var delimiterRe = \"[\".concat(escapeString(delimiter), \"]\");\n    var route = start ? \"^\" : \"\";\n    // Iterate over the tokens and create our regexp string.\n    for (var _i = 0, tokens_1 = tokens; _i < tokens_1.length; _i++) {\n        var token = tokens_1[_i];\n        if (typeof token === \"string\") {\n            route += escapeString(encode(token));\n        }\n        else {\n            var prefix = escapeString(encode(token.prefix));\n            var suffix = escapeString(encode(token.suffix));\n            if (token.pattern) {\n                if (keys)\n                    keys.push(token);\n                if (prefix || suffix) {\n                    if (token.modifier === \"+\" || token.modifier === \"*\") {\n                        var mod = token.modifier === \"*\" ? \"?\" : \"\";\n                        route += \"(?:\".concat(prefix, \"((?:\").concat(token.pattern, \")(?:\").concat(suffix).concat(prefix, \"(?:\").concat(token.pattern, \"))*)\").concat(suffix, \")\").concat(mod);\n                    }\n                    else {\n                        route += \"(?:\".concat(prefix, \"(\").concat(token.pattern, \")\").concat(suffix, \")\").concat(token.modifier);\n                    }\n                }\n                else {\n                    if (token.modifier === \"+\" || token.modifier === \"*\") {\n                        route += \"((?:\".concat(token.pattern, \")\").concat(token.modifier, \")\");\n                    }\n                    else {\n                        route += \"(\".concat(token.pattern, \")\").concat(token.modifier);\n                    }\n                }\n            }\n            else {\n                route += \"(?:\".concat(prefix).concat(suffix, \")\").concat(token.modifier);\n            }\n        }\n    }\n    if (end) {\n        if (!strict)\n            route += \"\".concat(delimiterRe, \"?\");\n        route += !options.endsWith ? \"$\" : \"(?=\".concat(endsWithRe, \")\");\n    }\n    else {\n        var endToken = tokens[tokens.length - 1];\n        var isEndDelimited = typeof endToken === \"string\"\n            ? delimiterRe.indexOf(endToken[endToken.length - 1]) > -1\n            : endToken === undefined;\n        if (!strict) {\n            route += \"(?:\".concat(delimiterRe, \"(?=\").concat(endsWithRe, \"))?\");\n        }\n        if (!isEndDelimited) {\n            route += \"(?=\".concat(delimiterRe, \"|\").concat(endsWithRe, \")\");\n        }\n    }\n    return new RegExp(route, flags(options));\n}\n/**\n * Normalize the given path string, returning a regular expression.\n *\n * An empty array can be passed in for the keys, which will hold the\n * placeholder key descriptions. For example, using `/user/:id`, `keys` will\n * contain `[{ name: 'id', delimiter: '/', optional: false, repeat: false }]`.\n */\nexport function pathToRegexp(path, keys, options) {\n    if (path instanceof RegExp)\n        return regexpToRegexp(path, keys);\n    if (Array.isArray(path))\n        return arrayToRegexp(path, keys, options);\n    return stringToRegexp(path, keys, options);\n}\n//# sourceMappingURL=index.js.map","class EventDispatcher {\n  /**\n   * Create instance.\n   */\n  constructor() {\n    let events = {}\n\n    /**\n     * Add callback to event.\n     * @param {String} name Event name.\n     * @param {Function} callback Function to call on dispatch.\n     * @param {Object} options Callback options.\n     */\n    this.addEventListener = (name, callback, options = null) => {\n      // Check if event name exits and callback is not already present.\n      if (!(name in events)) {\n        events[name] = []\n      }\n\n      // Add to events.\n      events[name].push({\n        callback: callback,\n        options: options,\n      })\n    }\n\n    /**\n     * Remove callback from event.\n     * @param {String} name Event name.\n     * @param {Function} callback Function that would be called.\n     */\n    this.removeEventListener = (name, callback) => {\n      // Check if event exists.\n      if (!Object.keys(events).includes(name)) {\n        return\n      }\n      const eventData = events[name]\n\n      // Get index of callback in events.\n      let index = -1\n      for (let i = 0; i < eventData.length; i++) {\n        if (eventData[i].callback === callback) {\n          index = i\n          break\n        }\n      }\n      if (index < 0) {\n        return\n      }\n\n      // Remove item from events.\n      eventData.splice(index, 1)\n\n      // Remove event if list is empty.\n      if (Object.keys(eventData).length === 0) {\n        delete events[name]\n      }\n    }\n\n    /**\n     * Remove listeners to an event.\n     * @param {String} name Event name.\n     */\n    this.removeEventListeners = (name) => {\n      if (!name) {\n        return\n      }\n\n      // Remove all handlers with the event name.\n      delete events[name]\n    }\n\n    /**\n     * Remove all listeners.\n     * @param {String} name Event name.\n     */\n    this.removeAllEventListeners = () => {\n      // Remove all listeners.\n      events = {}\n    }\n\n    /**\n     * Trigger event and dispatch data to listeners.\n     * @param {String} name Event name.\n     * @param {Array<Any>} parameters Event parameters to pass through.\n     * @param {Object} options Dispatch options.\n     */\n    this.dispatchEvent = (name, parameters, options = null) => {\n      // Check if event exists.\n      if (!events[name]) {\n        return\n      }\n      // Get events by trigger name.\n      const eventData = events[name]\n\n      // Dispatch a call to each event.\n      for (let i = 0; i < eventData.length; i++) {\n        const event = (options && options.reverse) ? eventData[eventData.length - (i + 1)] : eventData[i]\n\n        // If once is truthy then remove the callback.\n        if (event.options && event.options.once) {\n          eventData.splice(i, 1)\n        }\n\n        // Execute callback.\n        event.callback(...parameters)\n      }\n    }\n  }\n}\n\nexport default EventDispatcher\n","// Import external modules.\nimport { pathToRegexp } from 'path-to-regexp'\n\n// Import event dispatcher.\nimport EventDispatcher from '@doars/utils/src/events/EventDispatcher.js'\n\nclass Router extends EventDispatcher {\n  constructor(options = {}) {\n    super()\n\n    // Create id.\n    const id = Symbol('ID_ROUTER')\n\n    // Overwrite default with given options.\n    options = Object.assign({\n      basePath: '',\n      path: null,\n      pathToRegexp: {},\n      updateHistory: false,\n    }, options)\n\n    let path = options.path\n    let route = null\n    let routes = {}\n\n    // Listen for history state changes.\n    const handleHistory = () => {\n      this.setPath(window.location.pathname)\n    }\n    if (options.updateHistory) {\n      window.addEventListener('popstate', handleHistory)\n    }\n\n    /**\n     * Update route.\n     * @param {String} url URL.\n     * @param {String} _path Path.\n     * @param {String} _route Route.\n     */\n    const updateRoute = (url, newPath, newRoute) => {\n      // Update stored data.\n      path = newPath\n      route = newRoute\n\n      // Update page history if the option is set.\n      if (options.updateHistory) {\n        // Construct url.\n        const _url = url.includes(options.basePath) ? url : options.basePath + url\n        // Check if url is not current url.\n        if (_url !== window.location.pathname) {\n          // Add path to history.\n          window.history.pushState(null, window.document.title, _url)\n        }\n      }\n\n      // Dispatch event on router.\n      this.dispatchEvent('changed', [this, route, path])\n    }\n\n    /**\n     * Get router id.\n     * @returns {Symbol} Unique identifier.\n     */\n    this.getId = () => {\n      return id\n    }\n\n    /**\n     * Get current path.\n     * @returns {String} path.\n     */\n    this.getPath = () => {\n      return path\n    }\n\n    /**\n     * Get current route.\n     * @returns {String} Route.\n     */\n    this.getRoute = () => {\n      return route\n    }\n\n    /**\n     * Get observed routes.\n     * @returns {Array<String>} List of routers.\n     */\n    this.getRoutes = () => {\n      return Object.keys(routes)\n    }\n\n    /**\n     * Destroy router instance.\n     */\n    this.destroy = () => {\n      // Stop listening to state changes.\n      if (options.updateHistory) {\n        window.removeEventListener('popstate', handleHistory)\n      }\n\n      options = null\n      path = null\n      route = null\n      routes = null\n\n      // Dispatch add event.\n      this.dispatchEvent('destroyed', [this])\n\n      // Remove all listeners.\n      this.removeAllEventListeners()\n    }\n\n    /**\n     * Add route.\n     * @param {String} _route Route pattern.\n     */\n    this.addRoute = (_route) => {\n      // Convert path to regexp and store it in routes.\n      routes[_route] = pathToRegexp(_route, [], options.pathToRegexp)\n\n      // Dispatch add event.\n      this.dispatchEvent('added', [this, _route])\n\n      if (path) {\n        // Remove base url, if present.\n        const _path = path.replace(options.basePath, '')\n        // Check if current route is.\n        if (routes[_route].test(_path)) {\n          updateRoute(path, _path, _route)\n        }\n      }\n    }\n\n    /**\n     * Remove route.\n     * @param {String} _route Route pattern.\n     */\n    this.removeRoute = (_route) => {\n      // Delete route.\n      delete routes[_route]\n\n      // Dispatch removed event.\n      this.dispatchEvent('removed', [this, _route])\n\n      if (route === _route) {\n        // Set current route as none.\n        path = null\n        route = null\n\n        // Dispatch changed event.\n        this.dispatchEvent('changed', [this, route, path])\n      }\n    }\n\n    /**\n     * Set current route.\n     * @param {String} url URL path.\n     */\n    this.setPath = (url) => {\n      // Remove base url, if present.\n      const newPath = url.replace(options.basePath, '')\n      if (path === newPath) {\n        return\n      }\n\n      // Find matching routes.\n      let newRoute = null\n      for (const _route in routes) {\n        // Test route.\n        if (routes[_route].test(newPath)) {\n          newRoute = _route\n          break\n        }\n      }\n\n      // Update route.\n      updateRoute(url, newPath, newRoute)\n    }\n  }\n}\n\nexport default Router\n","// Import router.\nimport Router from '../../Router.js'\n\n// Import symbols.\nimport { ROUTER } from '../../symbols.js'\n\nexport default (routerOptions) => {\n  return {\n    name: 'router',\n\n    update: (component, attribute, { processExpression }) => {\n      // Deconstruct attribute.\n      const element = attribute.getElement()\n\n      // Get router.\n      let router = element[ROUTER]\n      if (!router) {\n        // Construct options.\n        const options = Object.assign({}, routerOptions, processExpression(component, attribute.clone(), attribute.getValue()))\n        // Create router\n        router = element[ROUTER] = new Router(options)\n      }\n    },\n\n    destroy: (component, attribute) => {\n      // Deconstruct attribute.\n      const element = attribute.getElement()\n\n      // Get router.\n      const router = element[ROUTER]\n      if (!router) {\n        return\n      }\n\n      // Remove router reference.\n      delete element[ROUTER]\n\n      // Deconstruct router.\n      const id = router.getId()\n\n      // Destroy router.\n      router.destroy()\n\n      // Deconstruct component.\n      const library = component.getLibrary()\n\n      // Trigger update due to changed router.\n      library.update([{ id: id, path: '' }])\n    },\n  }\n}\n","/**\n * Convert string to HTML element.\n * @param {String} string Element contents.\n * @returns {HTMLElement} HTML element part of a document fragment.\n */\nexport const fromString = (string) => {\n  const template = document.createElement('template')\n  template.innerHTML = string\n  return template.content.childNodes[0]\n}\n\n/**\n * Inserts an element after the reference element opposite of insertBefore and more reliable then ChildNode.after()\n * @param {HTMLElement} reference Node to insert after.\n * @param {Node} node Node to insert.\n */\nexport const insertAfter = (reference, node) => {\n  if (reference.nextSibling) {\n    reference.parentNode.insertBefore(node, reference.nextSibling)\n  } else {\n    reference.parentNode.appendChild(node)\n  }\n}\n\n/**\n * Check whether two nodes are the same.\n * @param {HTMElement} a A node.\n * @param {HTMElement} b Another node.\n * @returns {Boolean} Whether the nodes are the same.\n */\nexport const isSame = (a, b) => {\n  if (a.isSameNode) {\n    return a.isSameNode(b)\n  }\n\n  if (a.tagName !== b.tagName) {\n    return false\n  }\n\n  if (a.type === 3) { // Text node.\n    return a.nodeValue === b.nodeValue\n  }\n\n  return false\n}\n\n/**\n * Iterate over all descendants of a given node.\n * @param {HTMLElement} element Element to walk over.\n * @param {Function} filter Filter function, return false to skip element.\n * @returns {Function} Iterator function. Call until a non-truthy value is returned.\n */\nexport const walk = (element, filter) => {\n  let index = -1\n  let iterator = null\n  return () => {\n    // First go over iterator.\n    if (index >= 0 && iterator) {\n      const child = iterator()\n      if (child) {\n        return child\n      }\n    }\n\n    // Get next child that passes the filter.\n    let child = null\n    do {\n      index++\n      if (index >= element.childElementCount) {\n        return null\n      }\n\n      child = element.children[index]\n    } while (!filter(child))\n\n    // Setup iterator for child.\n    if (child.childElementCount) {\n      iterator = walk(child, filter)\n    }\n\n    // Return the child.\n    return child\n  }\n}\n\nexport default {\n  fromString: fromString,\n  insertAfter: insertAfter,\n  isSame: isSame,\n  walk: walk,\n}\n","// Import symbols.\nimport { ROUTE } from '../symbols.js'\n\n// Import utils.\nimport { closestRouter } from '../utils.js'\nimport { insertAfter } from '@doars/utils/src/ElementUtils.js'\n\nexport default {\n  name: 'route',\n\n  update: (component, attribute, { transitionIn, transitionOut }) => {\n    // Deconstruct attribute.\n    const element = attribute.getElement()\n\n    let router\n    const setup = () => {\n      // Stop listening to router and remove it.\n      if (router && attribute[ROUTE]) {\n        router.removeEventListener('changed', attribute[ROUTE].handler)\n        router.removeEventListener('destroyed', attribute[ROUTE].setup)\n\n        delete attribute[ROUTE]\n      }\n\n      // Get closest router in parent nodes.\n      router = closestRouter(element)\n      if (!router) {\n        console.warn('DoarsRouter: Router not found for route.')\n        return\n      }\n\n      // Setup route data.\n      attribute[ROUTE] = {\n        setup: setup,\n      }\n\n      // Deconstruct attribute.\n      const value = attribute.getValue()\n\n      // Add route to router.\n      router.addRoute(value)\n\n      // Handle router changes.\n      const handleChange = (router, route) => {\n        if (route !== value) {\n          if (element.tagName === 'TEMPLATE') {\n            if (attribute[ROUTE] && attribute[ROUTE].element) {\n              // Transition out.\n              const routeElement = attribute[ROUTE].element\n              transitionOut(component, routeElement, () => {\n                // Remove node.\n                routeElement.remove()\n                attribute[ROUTE].element = undefined\n              })\n            }\n          } else {\n            // Transition out and set display none.\n            transitionOut(component, element, () => {\n              element.style.display = 'none'\n            })\n          }\n        } else if (element.tagName === 'TEMPLATE') {\n          // Create new element from template.\n          const templateInstance = document.importNode(element.content, true)\n          // Add element after the template element.\n          insertAfter(element, templateInstance)\n          // Get HTMLElement reference instead of DocumentFragment.\n          attribute[ROUTE].element = element.nextSibling\n\n          // Transition in.\n          transitionIn(component, attribute[ROUTE].element)\n        } else {\n          // Remove display none.\n          element.style.display = null\n\n          // Transition in.\n          transitionIn(component, element)\n        }\n      }\n      attribute[ROUTE].handler = handleChange\n\n      // Listen to router changes and perform initial run.\n      router.addEventListener('changed', handleChange)\n      handleChange(router, router.getRoute())\n\n      // If the router is destroyed look for another\n      router.addEventListener('destroyed', setup)\n    }\n\n    // Perform initial setup.\n    setup()\n  },\n\n  destroy: (component, attribute, { transitionOut }) => {\n    // Deconstruct attribute.\n    const element = attribute.getElement()\n    if (element.tagName === 'TEMPLATE') {\n      if (attribute[ROUTE] && attribute[ROUTE].element) {\n        // Transition out.\n        const routeElement = attribute[ROUTE].element\n        transitionOut(component, routeElement, () => {\n          // Remove node.\n          routeElement.remove()\n          attribute[ROUTE].element = undefined\n        })\n      }\n    } else {\n      // Transition out and set display none.\n      transitionOut(component, element, () => {\n        element.style.display = 'none'\n      })\n    }\n\n    // Get closest router in parent nodes.\n    const router = closestRouter(element)\n    if (!router) {\n      return\n    }\n\n    // Remove router listeners.\n    if (attribute[ROUTE]) {\n      router.removeEventListener('destroyed', attribute[ROUTE].setup)\n      if (attribute[ROUTE].handler) {\n        router.removeEventListener('change', attribute[ROUTE].handler)\n      }\n    }\n  },\n}\n","// Import symbols.\nimport { ROUTE_TO } from '../symbols.js'\n\n// Import utils.\nimport { closestRouter } from '../utils.js'\n\nexport default {\n  name: 'route-to',\n\n  update: (component, attribute) => {\n    const element = attribute.getElement()\n    const modifiers = attribute.getModifiers()\n    const value = attribute.getValue()\n\n    // Check for existing data.\n    if (attribute[ROUTE_TO]) {\n      // Exit early if listener has not changed.\n      if (attribute[ROUTE_TO].value === value) {\n        return\n      }\n\n      // Remove existing listeners so we don't listen twice.\n      attribute[ROUTE_TO].target.removeEventListener('click', attribute[ROUTE_TO].handler)\n    }\n\n    const handler = (event) => {\n      if (modifiers.self && event.target !== element) {\n        return\n      }\n\n      if (modifiers.prevent) {\n        event.preventDefault()\n      }\n      if (modifiers.stop) {\n        event.stopPropagation()\n      }\n\n      const router = closestRouter(element)\n      if (!router) {\n        return\n      }\n\n      router.setPath(value)\n    }\n\n    // Listen to click and keyboard events.\n    element.addEventListener('click', handler)\n\n    // Store listener data on the component.\n    attribute[ROUTE_TO] = {\n      handler: handler,\n      value: value,\n    }\n  },\n\n  destroy: (component, attribute) => {\n    if (!attribute[ROUTE_TO]) {\n      return\n    }\n\n    const element = attribute.getElement()\n\n    element.removeEventListener('click', attribute[ROUTE_TO].handler)\n\n    delete attribute[ROUTE_TO]\n  },\n}\n","/**\n * Deeply assign a series of objects properties together.\n * @param {Object} target Target object to merge to.\n * @param  {...Object} sources Objects to merge into the target.\n */\nexport const deepAssign = (target, ...sources) => {\n  if (!sources.length) {\n    return target\n  }\n  const source = sources.shift()\n\n  if (isObject(target) && isObject(source)) {\n    for (const key in source) {\n      if (isObject(source[key])) {\n        if (!target[key]) {\n          Object.assign(target, {\n            [key]: {},\n          })\n        }\n        deepAssign(target[key], source[key])\n      } else if (Array.isArray(source[key])) {\n        target[key] = source[key].map((value) => {\n          if (isObject(value)) {\n            return deepAssign({}, value)\n          }\n          return value\n        })\n      } else {\n        Object.assign(target, {\n          [key]: source[key],\n        })\n      }\n    }\n  }\n\n  return deepAssign(target, ...sources)\n}\n\n/**\n * Get value at path on object.\n * @param {Object} object Object to get from.\n * @param  {Array<String>} path Path to value.\n * @returns {Any} value at path.\n */\nexport const get = (object, path) => {\n  let objectTemp = object\n  let i = 0\n  for (; i < path.length - 1; i++) {\n    objectTemp = objectTemp[path[i]]\n  }\n  return objectTemp[path[i]]\n}\n\n/**\n * Check whether the value is an object.\n * @param {Any} value Value of unknown type.\n * @returns Whether the value is an object.\n */\nexport const isObject = (value) => {\n  return (value && typeof value === 'object' && !Array.isArray(value))\n}\n\n/**\n * Set value on path at object.\n * @param {Object} object Object to set on.\n * @param {Array<String>} path Path to value.\n * @param {Any} value Value to set.\n */\nexport const set = (object, path, value) => {\n  // Exit early if not an object.\n  if (typeof (object) !== 'object') {\n    return\n  }\n\n  let i = 0\n  for (; i < path.length - 1; i++) {\n    object = object[path[i]]\n\n    // Exit early if not an object.\n    if (typeof (object) !== 'object') {\n      return\n    }\n  }\n  object[path[i]] = value\n}\n\nexport default {\n  deepAssign: deepAssign,\n  get: get,\n  isObject: isObject,\n  set: set,\n}\n","// Import contexts.\nimport contextRouter from './contexts/router.js'\n\n// Import directives.\nimport createDirectiveRouter from './factories/directives/router.js'\nimport directiveRoute from './directives/route.js'\nimport directiveRouteTo from './directives/routeTo.js'\n\n// Import utils.\nimport { deepAssign } from '@doars/utils/src/ObjectUtils.js'\n\nexport default class DoarsRouter {\n  /**\n   * Create plugin instance.\n   * @param {Doars} library Doars instance to add onto.\n   * @param {Object} options The plugin options.\n   */\n  constructor(library, options = null) {\n    // Clone options.\n    options = deepAssign({}, options)\n\n    // Set private variables.\n    let directiveRouter\n\n    // Enable plugin when library is enabling.\n    library.addEventListener('enabling', () => {\n      // Add contexts and directives.\n      library.addContexts(0, contextRouter)\n      directiveRouter = createDirectiveRouter(options)\n      library.addDirectives(-1, directiveRouter, directiveRoute, directiveRouteTo)\n    })\n\n    // Disable plugin when library is disabling.\n    library.addEventListener('disabling', () => {\n      // Remove contexts and directives.\n      library.removeContexts(contextRouter)\n      library.removeDirectives(directiveRouter, directiveRoute, directiveRouteTo)\n\n      // Remove router.\n      directiveRouter = null\n    })\n  }\n}\n"],"names":["REFLECTION_METHODS","target","handler","revoked","revocableHandler","key","console","error","Reflect","proxy","Proxy","revoke","ROUTE_TO","Symbol","ROUTER","ROUTE","closestRouter","element","parentElement","name","create","component","attribute","getElement","router","revocable","RevocableProxy","get","propertyKey","receiver","accessed","getId","value","destroy","lexer","str","tokens","i","length","char","push","type","index","j","code","charCodeAt","TypeError","count","pattern","parse","options","_a","defaultPattern","escapeString","delimiter","result","path","tryConsume","mustConsume","undefined","nextType","concat","consumeText","prefix","prefixes","indexOf","suffix","modifier","open","name_1","pattern_1","replace","flags","sensitive","regexpToRegexp","keys","groupsRegex","execResult","exec","source","arrayToRegexp","paths","parts","map","RegExp","join","stringToRegexp","tokensToRegexp","_b","start","_c","end","_d","encode","x","_e","_f","endsWith","endsWithRe","delimiterRe","route","_i","token","mod","strict","endToken","isEndDelimited","pathToRegexp","Array","isArray","EventDispatcher","events","addEventListener","callback","removeEventListener","Object","includes","eventData","splice","removeEventListeners","removeAllEventListeners","dispatchEvent","parameters","event","reverse","once","Router","id","assign","basePath","updateHistory","routes","handleHistory","setPath","window","location","pathname","updateRoute","url","newPath","newRoute","_url","history","pushState","document","title","getPath","getRoute","getRoutes","addRoute","_route","_path","test","removeRoute","routerOptions","update","processExpression","clone","getValue","library","getLibrary","insertAfter","reference","node","nextSibling","parentNode","insertBefore","appendChild","transitionIn","transitionOut","setup","warn","handleChange","tagName","routeElement","remove","style","display","templateInstance","importNode","content","modifiers","getModifiers","self","prevent","preventDefault","stop","stopPropagation","deepAssign","sources","shift","isObject","DoarsRouter","directiveRouter","addContexts","contextRouter","createDirectiveRouter","addDirectives","directiveRoute","directiveRouteTo","removeContexts","removeDirectives"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;EAAA;EACA,IAAMA,kBAAkB,GAAG,CACzB,OADyB,EAEzB,WAFyB,EAGzB,gBAHyB,EAIzB,gBAJyB,EAKzB,KALyB,EAMzB,0BANyB,EAOzB,gBAPyB,EAQzB,cARyB,EASzB,SATyB,EAUzB,mBAVyB,EAWzB,KAXyB,EAYzB,gBAZyB,CAA3B,CAAA;EAeA;EACA;EACA;;AACA,uBAAA,CAAe,UAACC,MAAD,EAASC,OAAT,EAAqB;EAClC;EACA,EAAA,IAAIC,OAAO,GAAG,KAAd,CAFkC;;EAKlC,EAAMC,IAAAA,gBAAgB,GAAG,EAAzB,CAAA;;EALkC,EAAA,IAAA,SAAA,GAAA,0BAAA,CAMhBJ,kBANgB,CAAA;EAAA,MAAA,KAAA,CAAA;;EAAA,EAAA,IAAA;EAAA,IAAA,IAAA,KAAA,GAAA,SAAA,KAAA,GAAA;EAAA,MAAA,IAMvBK,GANuB,GAAA,KAAA,CAAA,KAAA,CAAA;;EAOhCD,MAAAA,gBAAgB,CAACC,GAAD,CAAhB,GAAwB,YAAmB;EACzC,QAAA,IAAIF,OAAJ,EAAa;EACXG,UAAAA,OAAO,CAACC,KAAR,CAAc,gDAAd,CAAA,CAAA;EACA,UAAA,OAAA;EACD,SAAA;;EAED,QAAIF,IAAAA,GAAG,IAAIH,OAAX,EAAoB;EAClB,UAAA,OAAOA,OAAO,CAACG,GAAD,CAAP,CAAA,KAAA,CAAAH,OAAO,EAAd,SAAA,CAAA,CAAA;EACD,SAAA;;EACD,QAAA,OAAOM,OAAO,CAACH,GAAD,CAAP,CAAA,KAAA,CAAAG,OAAO,EAAd,SAAA,CAAA,CAAA;EACD,OAVD,CAAA;EAPgC,KAAA,CAAA;;EAMlC,IAAsC,KAAA,SAAA,CAAA,CAAA,EAAA,EAAA,CAAA,CAAA,KAAA,GAAA,SAAA,CAAA,CAAA,EAAA,EAAA,IAAA,GAAA;EAAA,MAAA,KAAA,EAAA,CAAA;EAYrC,KAlBiC;;EAAA,GAAA,CAAA,OAAA,GAAA,EAAA;EAAA,IAAA,SAAA,CAAA,CAAA,CAAA,GAAA,CAAA,CAAA;EAAA,GAAA,SAAA;EAAA,IAAA,SAAA,CAAA,CAAA,EAAA,CAAA;EAAA,GAAA;;EAqBlC,EAAO,OAAA;EACLC,IAAAA,KAAK,EAAE,IAAIC,KAAJ,CAAUT,MAAV,EAAkBG,gBAAlB,CADF;EAELO,IAAAA,MAAM,EAAE,SAAM,MAAA,GAAA;EACZR,MAAAA,OAAO,GAAG,IAAV,CAAA;EACD,KAAA;EAJI,GAAP,CAAA;EAMD,CA3BD;;ECnBO,IAAMS,QAAQ,GAAGC,MAAM,CAAC,UAAD,CAAvB,CAAA;EAEA,IAAMC,MAAM,GAAGD,MAAM,CAAC,QAAD,CAArB,CAAA;EAEA,IAAME,KAAK,GAAGF,MAAM,CAAC,OAAD,CAApB;;ECJP;EAGA;EACA;EACA;EACA;EACA;;EACO,IAAMG,aAAa,GAAG,SAAhBA,aAAgB,CAACC,OAAD,EAAa;EACxC,EAAA,IAAI,CAACA,OAAO,CAACC,aAAb,EAA4B;EAC1B,IAAA,OAAA;EACD,GAAA;;EACDD,EAAAA,OAAO,GAAGA,OAAO,CAACC,aAAlB,CAAA;;EAEA,EAAA,IAAID,OAAO,CAACH,MAAD,CAAX,EAAqB;EACnB,IAAOG,OAAAA,OAAO,CAACH,MAAD,CAAd,CAAA;EACD,GAAA;;EAED,EAAOE,OAAAA,aAAa,CAACC,OAAD,CAApB,CAAA;EACD,CAXM;;ECRP;AASA,sBAAe;EACbE,EAAAA,IAAI,EAAE,SADO;EAGbC,EAAAA,MAAM,EAAE,SAAA,MAAA,CAACC,SAAD,EAAYC,SAAZ,EAA0B;EAChC;EACA,IAAA,IAAML,OAAO,GAAGK,SAAS,CAACC,UAAV,EAAhB,CAAA;EAEA,IAAIC,IAAAA,MAAM,GAAG,IAAb,CAAA;EACA,IAAA,IAAMC,SAAS,GAAGC,cAAc,CAAC,EAAD,EAAK;EACnCC,MAAAA,GAAG,EAAE,SAAC1B,GAAAA,CAAAA,MAAD,EAAS2B,WAAT,EAAsBC,QAAtB,EAAmC;EACtC;EACA,QAAIL,IAAAA,MAAM,KAAK,IAAf,EAAqB;EACnB,UAAA,IAAIP,OAAO,CAACH,MAAD,CAAX,EAAqB;EACnBU,YAAAA,MAAM,GAAGP,OAAO,CAACH,MAAD,CAAhB,CAAA;EACD,WAFD,MAEO;EACLU,YAAAA,MAAM,GAAGR,aAAa,CAACC,OAAD,CAAtB,CAAA;EACD,WALkB;;;EAQnB,UAAI,IAAA,CAACO,MAAL,EAAa;EACXA,YAAAA,MAAM,GAAG,KAAT,CAAA;EACD,WAAA;EACF,SAbqC;;;EAgBtCF,QAAAA,SAAS,CAACQ,QAAV,CAAmBN,MAAM,CAACO,KAAP,EAAnB,EAAmC,EAAnC,CAAA,CAAA;;EAEA,QAAI,IAAA,CAACP,MAAL,EAAa;EACX,UAAA,OAAA;EACD,SApBqC;;;EAuBtC,QAAOhB,OAAAA,OAAO,CAACmB,GAAR,CAAYH,MAAZ,EAAoBI,WAApB,EAAiCC,QAAjC,CAAP,CAAA;EACD,OAAA;EAzBkC,KAAL,CAAhC,CAAA;EA4BA,IAAO,OAAA;EACLG,MAAAA,KAAK,EAAEP,SAAS,CAAChB,KADZ;EAGLwB,MAAAA,OAAO,EAAE,SAAM,OAAA,GAAA;EACbR,QAAAA,SAAS,CAACd,MAAV,EAAA,CAAA;EACD,OAAA;EALI,KAAP,CAAA;EAOD,GAAA;EA3CY,CAAf;;ECQA;;;EAGA,SAASuB,KAAT,CAAeC,GAAf,EAA0B;EACxB,EAAMC,IAAAA,MAAM,GAAe,EAA3B,CAAA;EACA,EAAIC,IAAAA,CAAC,GAAG,CAAR,CAAA;;EAEA,EAAA,OAAOA,CAAC,GAAGF,GAAG,CAACG,MAAf,EAAuB;EACrB,IAAA,IAAMC,IAAI,GAAGJ,GAAG,CAACE,CAAD,CAAhB,CAAA;;EAEA,IAAIE,IAAAA,IAAI,KAAK,GAAT,IAAgBA,IAAI,KAAK,GAAzB,IAAgCA,IAAI,KAAK,GAA7C,EAAkD;EAChDH,MAAM,MAAA,CAACI,IAAP,CAAY;EAAEC,QAAAA,IAAI,EAAE,UAAR;EAAoBC,QAAAA,KAAK,EAAEL,CAA3B;EAA8BL,QAAAA,KAAK,EAAEG,GAAG,CAACE,CAAC,EAAF,CAAA;EAAxC,OAAZ,CAAA,CAAA;EACA,MAAA,SAAA;EACD,KAAA;;EAED,IAAIE,IAAAA,IAAI,KAAK,IAAb,EAAmB;EACjBH,MAAM,MAAA,CAACI,IAAP,CAAY;EAAEC,QAAAA,IAAI,EAAE,cAAR;EAAwBC,QAAK,KAAA,EAAEL,CAAC,EAAhC;EAAoCL,QAAAA,KAAK,EAAEG,GAAG,CAACE,CAAC,EAAF,CAAA;EAA9C,OAAZ,CAAA,CAAA;EACA,MAAA,SAAA;EACD,KAAA;;EAED,IAAIE,IAAAA,IAAI,KAAK,GAAb,EAAkB;EAChBH,MAAM,MAAA,CAACI,IAAP,CAAY;EAAEC,QAAAA,IAAI,EAAE,MAAR;EAAgBC,QAAAA,KAAK,EAAEL,CAAvB;EAA0BL,QAAAA,KAAK,EAAEG,GAAG,CAACE,CAAC,EAAF,CAAA;EAApC,OAAZ,CAAA,CAAA;EACA,MAAA,SAAA;EACD,KAAA;;EAED,IAAIE,IAAAA,IAAI,KAAK,GAAb,EAAkB;EAChBH,MAAM,MAAA,CAACI,IAAP,CAAY;EAAEC,QAAAA,IAAI,EAAE,OAAR;EAAiBC,QAAAA,KAAK,EAAEL,CAAxB;EAA2BL,QAAAA,KAAK,EAAEG,GAAG,CAACE,CAAC,EAAF,CAAA;EAArC,OAAZ,CAAA,CAAA;EACA,MAAA,SAAA;EACD,KAAA;;EAED,IAAIE,IAAAA,IAAI,KAAK,GAAb,EAAkB;EAChB,MAAIpB,IAAAA,IAAI,GAAG,EAAX,CAAA;EACA,MAAA,IAAIwB,CAAC,GAAGN,CAAC,GAAG,CAAZ,CAAA;;EAEA,MAAA,OAAOM,CAAC,GAAGR,GAAG,CAACG,MAAf,EAAuB;EACrB,QAAA,IAAMM,IAAI,GAAGT,GAAG,CAACU,UAAJ,CAAeF,CAAf,CAAb,CAAA;;EAEA,QACE;EACCC,QAAAA,IAAI,IAAI,EAAR,IAAcA,IAAI,IAAI,EAAvB;EAECA,QAAAA,IAAI,IAAI,EAAR,IAAcA,IAAI,IAAI,EAFvB;EAICA,QAAAA,IAAI,IAAI,EAAR,IAAcA,IAAI,IAAI,GAJvB;EAMAA,QAAI,IAAA,KAAK,EARX,EASE;EACAzB,UAAAA,IAAI,IAAIgB,GAAG,CAACQ,CAAC,EAAF,CAAX,CAAA;EACA,UAAA,SAAA;EACD,SAAA;;EAED,QAAA,MAAA;EACD,OAAA;;EAED,MAAI,IAAA,CAACxB,IAAL,EAAW,MAAM,IAAI2B,SAAJ,CAAc,4BAAA,CAAA,MAAA,CAA6BT,CAA7B,CAAd,CAAN,CAAA;EAEXD,MAAM,MAAA,CAACI,IAAP,CAAY;EAAEC,QAAAA,IAAI,EAAE,MAAR;EAAgBC,QAAAA,KAAK,EAAEL,CAAvB;EAA0BL,QAAAA,KAAK,EAAEb,IAAAA;EAAjC,OAAZ,CAAA,CAAA;EACAkB,MAAAA,CAAC,GAAGM,CAAJ,CAAA;EACA,MAAA,SAAA;EACD,KAAA;;EAED,IAAIJ,IAAAA,IAAI,KAAK,GAAb,EAAkB;EAChB,MAAIQ,IAAAA,KAAK,GAAG,CAAZ,CAAA;EACA,MAAIC,IAAAA,OAAO,GAAG,EAAd,CAAA;EACA,MAAA,IAAIL,CAAC,GAAGN,CAAC,GAAG,CAAZ,CAAA;;EAEA,MAAA,IAAIF,GAAG,CAACQ,CAAD,CAAH,KAAW,GAAf,EAAoB;EAClB,QAAA,MAAM,IAAIG,SAAJ,CAAc,qCAAoCH,CAAAA,MAAAA,CAAAA,CAApC,CAAd,CAAN,CAAA;EACD,OAAA;;EAED,MAAA,OAAOA,CAAC,GAAGR,GAAG,CAACG,MAAf,EAAuB;EACrB,QAAA,IAAIH,GAAG,CAACQ,CAAD,CAAH,KAAW,IAAf,EAAqB;EACnBK,UAAO,OAAA,IAAIb,GAAG,CAACQ,CAAC,EAAF,CAAH,GAAWR,GAAG,CAACQ,CAAC,EAAF,CAAzB,CAAA;EACA,UAAA,SAAA;EACD,SAAA;;EAED,QAAA,IAAIR,GAAG,CAACQ,CAAD,CAAH,KAAW,GAAf,EAAoB;EAClBI,UAAK,KAAA,EAAA,CAAA;;EACL,UAAIA,IAAAA,KAAK,KAAK,CAAd,EAAiB;EACfJ,YAAC,CAAA,EAAA,CAAA;EACD,YAAA,MAAA;EACD,WAAA;EACF,SAND,MAMO,IAAIR,GAAG,CAACQ,CAAD,CAAH,KAAW,GAAf,EAAoB;EACzBI,UAAK,KAAA,EAAA,CAAA;;EACL,UAAIZ,IAAAA,GAAG,CAACQ,CAAC,GAAG,CAAL,CAAH,KAAe,GAAnB,EAAwB;EACtB,YAAA,MAAM,IAAIG,SAAJ,CAAc,sCAAuCH,CAAAA,MAAAA,CAAAA,CAAvC,CAAd,CAAN,CAAA;EACD,WAAA;EACF,SAAA;;EAEDK,QAAAA,OAAO,IAAIb,GAAG,CAACQ,CAAC,EAAF,CAAd,CAAA;EACD,OAAA;;EAED,MAAII,IAAAA,KAAJ,EAAW,MAAM,IAAID,SAAJ,CAAc,wBAAA,CAAA,MAAA,CAAyBT,CAAzB,CAAd,CAAN,CAAA;EACX,MAAI,IAAA,CAACW,OAAL,EAAc,MAAM,IAAIF,SAAJ,CAAc,qBAAA,CAAA,MAAA,CAAsBT,CAAtB,CAAd,CAAN,CAAA;EAEdD,MAAM,MAAA,CAACI,IAAP,CAAY;EAAEC,QAAAA,IAAI,EAAE,SAAR;EAAmBC,QAAAA,KAAK,EAAEL,CAA1B;EAA6BL,QAAAA,KAAK,EAAEgB,OAAAA;EAApC,OAAZ,CAAA,CAAA;EACAX,MAAAA,CAAC,GAAGM,CAAJ,CAAA;EACA,MAAA,SAAA;EACD,KAAA;;EAEDP,IAAM,MAAA,CAACI,IAAP,CAAY;EAAEC,MAAAA,IAAI,EAAE,MAAR;EAAgBC,MAAAA,KAAK,EAAEL,CAAvB;EAA0BL,MAAAA,KAAK,EAAEG,GAAG,CAACE,CAAC,EAAF,CAAA;EAApC,KAAZ,CAAA,CAAA;EACD,GAAA;;EAEDD,EAAM,MAAA,CAACI,IAAP,CAAY;EAAEC,IAAAA,IAAI,EAAE,KAAR;EAAeC,IAAAA,KAAK,EAAEL,CAAtB;EAAyBL,IAAAA,KAAK,EAAE,EAAA;EAAhC,GAAZ,CAAA,CAAA;EAEA,EAAA,OAAOI,MAAP,CAAA;EACD,CAAA;EAaD;;;;;EAGM,SAAUa,KAAV,CAAgBd,GAAhB,EAA6Be,OAA7B,EAAuD;EAA1B,EAAA,IAAA,OAAA,KAAA,KAAA,CAAA,EAAA;EAAAA,IAAAA,OAAAA,GAAAA,EAAAA,CAAAA;EAA0B,GAAA;;EAC3D,EAAA,IAAMd,MAAM,GAAGF,KAAK,CAACC,GAAD,CAApB,CAAA;EACQ,EAAA,IAAA,EAAA,GAAoBe,OAAO,CAA3B,QAAA;EAAA,MAAQ,QAAA,GAAA,EAAA,KAAA,KAAA,CAAA,GAAG,IAAH,GAAOC,EAAf,CAAA;EACR,EAAA,IAAMC,cAAc,GAAG,IAAKC,CAAAA,MAAAA,CAAAA,YAAY,CAACH,OAAO,CAACI,SAAR,IAAqB,KAAtB,CAAjB,EAA6C,KAA7C,CAAvB,CAAA;EACA,EAAMC,IAAAA,MAAM,GAAY,EAAxB,CAAA;EACA,EAAIlD,IAAAA,GAAG,GAAG,CAAV,CAAA;EACA,EAAIgC,IAAAA,CAAC,GAAG,CAAR,CAAA;EACA,EAAImB,IAAAA,IAAI,GAAG,EAAX,CAAA;;EAEA,EAAA,IAAMC,UAAU,GAAG,SAAbA,UAAa,CAAChB,IAAD,EAAuB;EACxC,IAAIJ,IAAAA,CAAC,GAAGD,MAAM,CAACE,MAAX,IAAqBF,MAAM,CAACC,CAAD,CAAN,CAAUI,IAAV,KAAmBA,IAA5C,EAAkD,OAAOL,MAAM,CAACC,CAAC,EAAF,CAAN,CAAYL,KAAnB,CAAA;EACnD,GAFD,CAAA;;EAIA,EAAA,IAAM0B,WAAW,GAAG,SAAdA,WAAc,CAACjB,IAAD,EAAuB;EACzC,IAAA,IAAMT,KAAK,GAAGyB,UAAU,CAAChB,IAAD,CAAxB,CAAA;EACA,IAAA,IAAIT,KAAK,KAAK2B,SAAd,EAAyB,OAAO3B,KAAP,CAAA;EACnB,IAA4BI,IAAAA,EAAAA,GAAAA,MAAM,CAACC,CAAD,CAAlC;EAAA,QAAQuB,QAAQ,GAAhB,EAAA,CAAA,IAAA;EAAA,QAAkBlB,KAAK,GAAvB,EAAA,CAAA,KAAA,CAAA;EACN,IAAA,MAAM,IAAII,SAAJ,CAAc,qBAAcc,QAAd,EAAsB,MAAtB,CAAsBC,CAAAA,MAAtB,CAA6BnB,KAA7B,EAAkC,aAAlC,CAAA,CAAkCmB,MAAlC,CAAgDpB,IAAhD,CAAd,CAAN,CAAA;EACD,GALD,CAAA;;EAOA,EAAMqB,IAAAA,WAAW,GAAG,SAAdA,WAAc,GAAA;EAClB,IAAIP,IAAAA,MAAM,GAAG,EAAb,CAAA;EACA,IAAA,IAAIvB,KAAJ,CAAA;;EACA,IAAQA,OAAAA,KAAK,GAAGyB,UAAU,CAAC,MAAD,CAAV,IAAsBA,UAAU,CAAC,cAAD,CAAhD,EAAmE;EACjEF,MAAAA,MAAM,IAAIvB,KAAV,CAAA;EACD,KAAA;;EACD,IAAA,OAAOuB,MAAP,CAAA;EACD,GAPD,CAAA;;EASA,EAAA,OAAOlB,CAAC,GAAGD,MAAM,CAACE,MAAlB,EAA0B;EACxB,IAAA,IAAMC,IAAI,GAAGkB,UAAU,CAAC,MAAD,CAAvB,CAAA;EACA,IAAA,IAAMtC,IAAI,GAAGsC,UAAU,CAAC,MAAD,CAAvB,CAAA;EACA,IAAA,IAAMT,OAAO,GAAGS,UAAU,CAAC,SAAD,CAA1B,CAAA;;EAEA,IAAItC,IAAAA,IAAI,IAAI6B,OAAZ,EAAqB;EACnB,MAAA,IAAIe,MAAM,GAAGxB,IAAI,IAAI,EAArB,CAAA;;EAEA,MAAIyB,IAAAA,QAAQ,CAACC,OAAT,CAAiBF,MAAjB,CAA6B,KAAA,CAAC,CAAlC,EAAqC;EACnCP,QAAAA,IAAI,IAAIO,MAAR,CAAA;EACAA,QAAAA,MAAM,GAAG,EAAT,CAAA;EACD,OAAA;;EAED,MAAA,IAAIP,IAAJ,EAAU;EACRD,QAAM,MAAA,CAACf,IAAP,CAAYgB,IAAZ,CAAA,CAAA;EACAA,QAAAA,IAAI,GAAG,EAAP,CAAA;EACD,OAAA;;EAEDD,MAAM,MAAA,CAACf,IAAP,CAAY;EACVrB,QAAAA,IAAI,EAAEA,IAAI,IAAId,GAAG,EADP;EAEV0D,QAAAA,MAAM,EAFI,MAAA;EAGVG,QAAAA,MAAM,EAAE,EAHE;EAIVlB,QAAO,OAAA,EAAEA,OAAO,IAAII,cAJV;EAKVe,QAAAA,QAAQ,EAAEV,UAAU,CAAC,UAAD,CAAV,IAA0B,EAAA;EAL1B,OAAZ,CAAA,CAAA;EAOA,MAAA,SAAA;EACD,KAAA;;EAED,IAAA,IAAMzB,KAAK,GAAGO,IAAI,IAAIkB,UAAU,CAAC,cAAD,CAAhC,CAAA;;EACA,IAAA,IAAIzB,KAAJ,EAAW;EACTwB,MAAAA,IAAI,IAAIxB,KAAR,CAAA;EACA,MAAA,SAAA;EACD,KAAA;;EAED,IAAA,IAAIwB,IAAJ,EAAU;EACRD,MAAM,MAAA,CAACf,IAAP,CAAYgB,IAAZ,CAAA,CAAA;EACAA,MAAAA,IAAI,GAAG,EAAP,CAAA;EACD,KAAA;;EAED,IAAA,IAAMY,IAAI,GAAGX,UAAU,CAAC,MAAD,CAAvB,CAAA;;EACA,IAAA,IAAIW,IAAJ,EAAU;EACR,MAAML,IAAAA,MAAM,GAAGD,WAAW,EAA1B,CAAA;EACA,MAAA,IAAMO,MAAI,GAAGZ,UAAU,CAAC,MAAD,CAAV,IAAsB,EAAnC,CAAA;EACA,MAAA,IAAMa,SAAO,GAAGb,UAAU,CAAC,SAAD,CAAV,IAAyB,EAAzC,CAAA;EACA,MAAMS,IAAAA,MAAM,GAAGJ,WAAW,EAA1B,CAAA;EAEAJ,MAAW,WAAA,CAAC,OAAD,CAAX,CAAA;EAEAH,MAAM,MAAA,CAACf,IAAP,CAAY;EACVrB,QAAI,IAAA,EAAEkD,MAAI,KAAKC,SAAO,GAAGjE,GAAG,EAAN,GAAW,EAAvB,CADA;EAEV2C,QAAO,OAAA,EAAEqB,MAAI,IAAI,CAACC,SAAT,GAAmBlB,cAAnB,GAAoCkB,SAFnC;EAGVP,QAAAA,MAAM,EAHI,MAAA;EAIVG,QAAAA,MAAM,EAJI,MAAA;EAKVC,QAAAA,QAAQ,EAAEV,UAAU,CAAC,UAAD,CAAV,IAA0B,EAAA;EAL1B,OAAZ,CAAA,CAAA;EAOA,MAAA,SAAA;EACD,KAAA;;EAEDC,IAAW,WAAA,CAAC,KAAD,CAAX,CAAA;EACD,GAAA;;EAED,EAAA,OAAOH,MAAP,CAAA;EACD,CAAA;EA2LD;;;;EAGA,SAASF,YAAT,CAAsBlB,GAAtB,EAAiC;EAC/B,EAAA,OAAOA,GAAG,CAACoC,OAAJ,CAAY,2BAAZ,EAAyC,MAAzC,CAAP,CAAA;EACD,CAAA;EAED;;;;;EAGA,SAASC,KAAT,CAAetB,OAAf,EAAgD;EAC9C,EAAOA,OAAAA,OAAO,IAAIA,OAAO,CAACuB,SAAnB,GAA+B,EAA/B,GAAoC,GAA3C,CAAA;EACD,CAAA;EAkBD;;;;;EAGA,SAASC,cAAT,CAAwBlB,IAAxB,EAAsCmB,IAAtC,EAAkD;EAChD,EAAA,IAAI,CAACA,IAAL,EAAW,OAAOnB,IAAP,CAAA;EAEX,EAAMoB,IAAAA,WAAW,GAAG,yBAApB,CAAA;EAEA,EAAIlC,IAAAA,KAAK,GAAG,CAAZ,CAAA;EACA,EAAImC,IAAAA,UAAU,GAAGD,WAAW,CAACE,IAAZ,CAAiBtB,IAAI,CAACuB,MAAtB,CAAjB,CAAA;;EACA,EAAA,OAAOF,UAAP,EAAmB;EACjBF,IAAI,IAAA,CAACnC,IAAL,CAAU;EACR;EACArB,MAAAA,IAAI,EAAE0D,UAAU,CAAC,CAAD,CAAV,IAAiBnC,KAAK,EAFpB;EAGRqB,MAAAA,MAAM,EAAE,EAHA;EAIRG,MAAAA,MAAM,EAAE,EAJA;EAKRC,MAAAA,QAAQ,EAAE,EALF;EAMRnB,MAAAA,OAAO,EAAE,EAAA;EAND,KAAV,CAAA,CAAA;EAQA6B,IAAU,UAAA,GAAGD,WAAW,CAACE,IAAZ,CAAiBtB,IAAI,CAACuB,MAAtB,CAAb,CAAA;EACD,GAAA;;EAED,EAAA,OAAOvB,IAAP,CAAA;EACD,CAAA;EAED;;;;;EAGA,SAASwB,aAAT,CACEC,KADF,EAEEN,IAFF,EAGEzB,OAHF,EAGgD;EAE9C,EAAMgC,IAAAA,KAAK,GAAGD,KAAK,CAACE,GAAN,CAAU,UAAC3B,IAAD,EAAK;EAAK,IAAY,OAAA,YAAA,CAACA,IAAD,EAAOmB,IAAP,EAAazB,OAAb,CAAZ,CAAkC6B,MAAlC,CAAA;EAAwC,GAA5D,CAAd,CAAA;EACA,EAAA,OAAO,IAAIK,MAAJ,CAAW,aAAMF,KAAK,CAACG,IAAN,CAAW,GAAX,CAAN,EAAqB,GAArB,CAAX,EAAqCb,KAAK,CAACtB,OAAD,CAA1C,CAAP,CAAA;EACD,CAAA;EAED;;;;;EAGA,SAASoC,cAAT,CACE9B,IADF,EAEEmB,IAFF,EAGEzB,OAHF,EAGgD;EAE9C,EAAA,OAAOqC,cAAc,CAACtC,KAAK,CAACO,IAAD,EAAON,OAAP,CAAN,EAAuByB,IAAvB,EAA6BzB,OAA7B,CAArB,CAAA;EACD,CAAA;EAiCD;;;;;EAGM,SAAUqC,cAAV,CACJnD,MADI,EAEJuC,IAFI,EAGJzB,OAHI,EAG+B;EAAnC,EAAA,IAAA,OAAA,KAAA,KAAA,CAAA,EAAA;EAAAA,IAAAA,OAAAA,GAAAA,EAAAA,CAAAA;EAAmC,GAAA;;EAGjC,EAAA,IAAA,EAAA,GAMEA,OAAO,CANT,MAAA;EAAA,MAAM,MAAA,GAAA,EAAA,KAAA,KAAA,CAAA,GAAG,KAAH,GAAQC,EAAd;EAAA,MACAqC,EAAAA,GAKEtC,OAAO,CANT,KAAA;EAAA,MACAuC,KAAK,GAAA,EAAA,KAAA,KAAA,CAAA,GAAG,IAAH,GAAOD,EADZ;EAAA,MAEAE,EAAAA,GAIExC,OAAO,CANT,GAAA;EAAA,MAEAyC,GAAG,GAAA,EAAA,KAAA,KAAA,CAAA,GAAG,IAAH,GAAOD,EAFV;EAAA,MAGAE,EAAAA,GAGE1C,OAAO,CANT,MAAA;EAAA,MAGA2C,MAAM,GAAA,EAAA,KAAA,KAAA,CAAA,GAAG,UAACC,CAAD,EAAU;EAAK,IAAA,OAAA,CAAA,CAAA;EAAC,GAAnB,GAAmBF,EAHzB;EAAA,MAIAG,EAAAA,GAEE7C,OAAO,CANT,SAAA;EAAA,MAIAI,SAAS,GAAA,EAAA,KAAA,KAAA,CAAA,GAAG,KAAH,GAAQyC,EAJjB;EAAA,MAKAC,EAAAA,GACE9C,OAAO,CANT,QAAA;EAAA,MAKA+C,QAAQ,GAAA,EAAA,KAAA,KAAA,CAAA,GAAG,EAAH,GAAKD,EALb,CAAA;EAOF,EAAME,IAAAA,UAAU,GAAG,GAAI7C,CAAAA,MAAAA,CAAAA,YAAY,CAAC4C,QAAD,CAAhB,EAA0B,KAA1B,CAAnB,CAAA;EACA,EAAME,IAAAA,WAAW,GAAG,GAAI9C,CAAAA,MAAAA,CAAAA,YAAY,CAACC,SAAD,CAAhB,EAA2B,GAA3B,CAApB,CAAA;EACA,EAAI8C,IAAAA,KAAK,GAAGX,KAAK,GAAG,GAAH,GAAS,EAA1B,CAZmC;;EAenC,EAAA,KAAoB,IAApB,EAAA,GAAA,CAAA,EAAA,QAAA,GAAA,MAAA,EAAoBY,EAApB,GAAA,QAAA,CAAA,MAAA,EAAoBA,IAApB,EAA4B;EAAvB,IAAA,IAAMC,KAAK,GAAX,QAAA,CAAA,EAAA,CAAA,CAAA;;EACH,IAAA,IAAI,OAAOA,KAAP,KAAiB,QAArB,EAA+B;EAC7BF,MAAAA,KAAK,IAAI/C,YAAY,CAACwC,MAAM,CAACS,KAAD,CAAP,CAArB,CAAA;EACD,KAFD,MAEO;EACL,MAAMvC,IAAAA,MAAM,GAAGV,YAAY,CAACwC,MAAM,CAACS,KAAK,CAACvC,MAAP,CAAP,CAA3B,CAAA;EACA,MAAMG,IAAAA,MAAM,GAAGb,YAAY,CAACwC,MAAM,CAACS,KAAK,CAACpC,MAAP,CAAP,CAA3B,CAAA;;EAEA,MAAIoC,IAAAA,KAAK,CAACtD,OAAV,EAAmB;EACjB,QAAA,IAAI2B,IAAJ,EAAUA,IAAI,CAACnC,IAAL,CAAU8D,KAAV,CAAA,CAAA;;EAEV,QAAIvC,IAAAA,MAAM,IAAIG,MAAd,EAAsB;EACpB,UAAIoC,IAAAA,KAAK,CAACnC,QAAN,KAAmB,GAAnB,IAA0BmC,KAAK,CAACnC,QAAN,KAAmB,GAAjD,EAAsD;EACpD,YAAMoC,IAAAA,GAAG,GAAGD,KAAK,CAACnC,QAAN,KAAmB,GAAnB,GAAyB,GAAzB,GAA+B,EAA3C,CAAA;EACAiC,YAAAA,KAAK,IAAI,KAAMrC,CAAAA,MAAAA,CAAAA,MAAN,EAAY,MAAZ,CAAA,CAAYF,MAAZ,CAAmByC,KAAK,CAACtD,OAAzB,EAAgC,MAAhC,CAAA,CAAgCa,MAAhC,CAAuCK,MAAvC,EAA6CL,MAA7C,CAAgDE,MAAhD,EAAsD,KAAtD,CAAsDF,CAAAA,MAAtD,CAA4DyC,KAAK,CAACtD,OAAlE,EAAyE,MAAzE,EAAyEa,MAAzE,CAAgFK,MAAhF,EAAsF,GAAtF,EAAsFL,MAAtF,CAA0F0C,GAA1F,CAAT,CAAA;EACD,WAHD,MAGO;EACLH,YAAK,KAAA,IAAI,KAAMrC,CAAAA,MAAAA,CAAAA,MAAN,EAAY,GAAZ,EAAYF,MAAZ,CAAgByC,KAAK,CAACtD,OAAtB,EAA6B,GAA7B,CAA6Ba,CAAAA,MAA7B,CAAiCK,MAAjC,EAAuC,GAAvC,CAAuCL,CAAAA,MAAvC,CAA2CyC,KAAK,CAACnC,QAAjD,CAAT,CAAA;EACD,WAAA;EACF,SAPD,MAOO;EACL,UAAImC,IAAAA,KAAK,CAACnC,QAAN,KAAmB,GAAnB,IAA0BmC,KAAK,CAACnC,QAAN,KAAmB,GAAjD,EAAsD;EACpDiC,YAAAA,KAAK,IAAI,MAAA,CAAA,MAAA,CAAOE,KAAK,CAACtD,OAAb,EAAoB,GAApB,CAAoBa,CAAAA,MAApB,CAAwByC,KAAK,CAACnC,QAA9B,EAAsC,GAAtC,CAAT,CAAA;EACD,WAFD,MAEO;EACLiC,YAAAA,KAAK,IAAI,GAAA,CAAA,MAAA,CAAIE,KAAK,CAACtD,OAAV,EAAiB,GAAjB,CAAA,CAAiBa,MAAjB,CAAqByC,KAAK,CAACnC,QAA3B,CAAT,CAAA;EACD,WAAA;EACF,SAAA;EACF,OAjBD,MAiBO;EACLiC,QAAAA,KAAK,IAAI,KAAA,CAAA,MAAA,CAAMrC,MAAN,CAAA,CAAYF,MAAZ,CAAeK,MAAf,EAAqB,GAArB,EAAqBL,MAArB,CAAyByC,KAAK,CAACnC,QAA/B,CAAT,CAAA;EACD,OAAA;EACF,KAAA;EACF,GAAA;;EAED,EAAA,IAAIwB,GAAJ,EAAS;EACP,IAAI,IAAA,CAACa,MAAL,EAAaJ,KAAK,IAAI,EAAGD,CAAAA,MAAAA,CAAAA,WAAH,EAAc,GAAd,CAAT,CAAA;EAEbC,IAAAA,KAAK,IAAI,CAAClD,OAAO,CAAC+C,QAAT,GAAoB,GAApB,GAA0B,KAAMC,CAAAA,MAAAA,CAAAA,UAAN,EAAgB,GAAhB,CAAnC,CAAA;EACD,GAJD,MAIO;EACL,IAAMO,IAAAA,QAAQ,GAAGrE,MAAM,CAACA,MAAM,CAACE,MAAP,GAAgB,CAAjB,CAAvB,CAAA;EACA,IAAMoE,IAAAA,cAAc,GAClB,OAAOD,QAAP,KAAoB,QAApB,GACIN,WAAW,CAAClC,OAAZ,CAAoBwC,QAAQ,CAACA,QAAQ,CAACnE,MAAT,GAAkB,CAAnB,CAA5B,CAAqD,GAAA,CAAC,CAD1D,GAEImE,QAAQ,KAAK9C,SAHnB,CAAA;;EAKA,IAAI,IAAA,CAAC6C,MAAL,EAAa;EACXJ,MAAK,KAAA,IAAI,KAAMD,CAAAA,MAAAA,CAAAA,WAAN,EAAiB,KAAjB,CAAiBtC,CAAAA,MAAjB,CAAuBqC,UAAvB,EAAiC,KAAjC,CAAT,CAAA;EACD,KAAA;;EAED,IAAI,IAAA,CAACQ,cAAL,EAAqB;EACnBN,MAAK,KAAA,IAAI,KAAMD,CAAAA,MAAAA,CAAAA,WAAN,EAAiB,GAAjB,CAAiBtC,CAAAA,MAAjB,CAAqBqC,UAArB,EAA+B,GAA/B,CAAT,CAAA;EACD,KAAA;EACF,GAAA;;EAED,EAAO,OAAA,IAAId,MAAJ,CAAWgB,KAAX,EAAkB5B,KAAK,CAACtB,OAAD,CAAvB,CAAP,CAAA;EACD,CAAA;EAOD;;;;;;;;EAOM,SAAUyD,YAAV,CACJnD,IADI,EAEJmB,IAFI,EAGJzB,OAHI,EAG0C;EAE9C,EAAIM,IAAAA,IAAI,YAAY4B,MAApB,EAA4B,OAAOV,cAAc,CAAClB,IAAD,EAAOmB,IAAP,CAArB,CAAA;EAC5B,EAAA,IAAIiC,KAAK,CAACC,OAAN,CAAcrD,IAAd,CAAJ,EAAyB,OAAOwB,aAAa,CAACxB,IAAD,EAAOmB,IAAP,EAAazB,OAAb,CAApB,CAAA;EACzB,EAAA,OAAOoC,cAAc,CAAC9B,IAAD,EAAOmB,IAAP,EAAazB,OAAb,CAArB,CAAA;EACD;;MC5mBK4D;EACJ;EACF;EACA;EACE,SAAc,eAAA,GAAA;EAAA,EAAA,eAAA,CAAA,IAAA,EAAA,eAAA,CAAA,CAAA;;EACZ,EAAIC,IAAAA,MAAM,GAAG,EAAb,CAAA;EAEA;EACJ;EACA;EACA;EACA;EACA;;EACI,EAAA,IAAA,CAAKC,gBAAL,GAAwB,UAAC7F,IAAD,EAAO8F,QAAP,EAAoC;EAAA,IAAnB/D,IAAAA,OAAmB,uEAAT,IAAS,CAAA;;EAC1D;EACA,IAAA,IAAI,EAAE/B,IAAI,IAAI4F,MAAV,CAAJ,EAAuB;EACrBA,MAAAA,MAAM,CAAC5F,IAAD,CAAN,GAAe,EAAf,CAAA;EACD,KAJyD;;;EAO1D4F,IAAAA,MAAM,CAAC5F,IAAD,CAAN,CAAaqB,IAAb,CAAkB;EAChByE,MAAAA,QAAQ,EAAEA,QADM;EAEhB/D,MAAAA,OAAO,EAAEA,OAAAA;EAFO,KAAlB,CAAA,CAAA;EAID,GAXD,CAAA;EAaA;EACJ;EACA;EACA;EACA;;;EACI,EAAA,IAAA,CAAKgE,mBAAL,GAA2B,UAAC/F,IAAD,EAAO8F,QAAP,EAAoB;EAC7C;EACA,IAAI,IAAA,CAACE,MAAM,CAACxC,IAAP,CAAYoC,MAAZ,CAAA,CAAoBK,QAApB,CAA6BjG,IAA7B,CAAL,EAAyC;EACvC,MAAA,OAAA;EACD,KAAA;;EACD,IAAA,IAAMkG,SAAS,GAAGN,MAAM,CAAC5F,IAAD,CAAxB,CAL6C;;EAQ7C,IAAIuB,IAAAA,KAAK,GAAG,CAAC,CAAb,CAAA;;EACA,IAAA,KAAK,IAAIL,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGgF,SAAS,CAAC/E,MAA9B,EAAsCD,CAAC,EAAvC,EAA2C;EACzC,MAAIgF,IAAAA,SAAS,CAAChF,CAAD,CAAT,CAAa4E,QAAb,KAA0BA,QAA9B,EAAwC;EACtCvE,QAAAA,KAAK,GAAGL,CAAR,CAAA;EACA,QAAA,MAAA;EACD,OAAA;EACF,KAAA;;EACD,IAAIK,IAAAA,KAAK,GAAG,CAAZ,EAAe;EACb,MAAA,OAAA;EACD,KAjB4C;;;EAoB7C2E,IAAAA,SAAS,CAACC,MAAV,CAAiB5E,KAAjB,EAAwB,CAAxB,EApB6C;;EAuB7C,IAAIyE,IAAAA,MAAM,CAACxC,IAAP,CAAY0C,SAAZ,CAAuB/E,CAAAA,MAAvB,KAAkC,CAAtC,EAAyC;EACvC,MAAOyE,OAAAA,MAAM,CAAC5F,IAAD,CAAb,CAAA;EACD,KAAA;EACF,GA1BD,CAAA;EA4BA;EACJ;EACA;EACA;;;EACI,EAAA,IAAA,CAAKoG,oBAAL,GAA4B,UAACpG,IAAD,EAAU;EACpC,IAAI,IAAA,CAACA,IAAL,EAAW;EACT,MAAA,OAAA;EACD,KAHmC;;;EAMpC,IAAO4F,OAAAA,MAAM,CAAC5F,IAAD,CAAb,CAAA;EACD,GAPD,CAAA;EASA;EACJ;EACA;EACA;;;EACI,EAAKqG,IAAAA,CAAAA,uBAAL,GAA+B,YAAM;EACnC;EACAT,IAAAA,MAAM,GAAG,EAAT,CAAA;EACD,GAHD,CAAA;EAKA;EACJ;EACA;EACA;EACA;EACA;;;EACI,EAAA,IAAA,CAAKU,aAAL,GAAqB,UAACtG,IAAD,EAAOuG,UAAP,EAAsC;EAAA,IAAnBxE,IAAAA,OAAmB,uEAAT,IAAS,CAAA;;EACzD;EACA,IAAA,IAAI,CAAC6D,MAAM,CAAC5F,IAAD,CAAX,EAAmB;EACjB,MAAA,OAAA;EACD,KAJwD;;;EAMzD,IAAA,IAAMkG,SAAS,GAAGN,MAAM,CAAC5F,IAAD,CAAxB,CANyD;;EASzD,IAAA,KAAK,IAAIkB,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGgF,SAAS,CAAC/E,MAA9B,EAAsCD,CAAC,EAAvC,EAA2C;EACzC,MAAMsF,IAAAA,KAAK,GAAIzE,OAAO,IAAIA,OAAO,CAAC0E,OAApB,GAA+BP,SAAS,CAACA,SAAS,CAAC/E,MAAV,IAAoBD,CAAC,GAAG,CAAxB,CAAD,CAAxC,GAAuEgF,SAAS,CAAChF,CAAD,CAA9F,CADyC;;EAIzC,MAAIsF,IAAAA,KAAK,CAACzE,OAAN,IAAiByE,KAAK,CAACzE,OAAN,CAAc2E,IAAnC,EAAyC;EACvCR,QAAAA,SAAS,CAACC,MAAV,CAAiBjF,CAAjB,EAAoB,CAApB,CAAA,CAAA;EACD,OANwC;;;EASzCsF,MAAAA,KAAK,CAACV,QAAN,OAAAU,KAAK,EAAA,kBAAA,CAAaD,UAAb,CAAL,CAAA,CAAA;EACD,KAAA;EACF,GApBD,CAAA;EAqBD;;MCtGGI;;;;;EACJ,EAA0B,SAAA,MAAA,GAAA;EAAA,IAAA,IAAA,KAAA,CAAA;;EAAA,IAAd5E,IAAAA,OAAc,uEAAJ,EAAI,CAAA;;EAAA,IAAA,eAAA,CAAA,IAAA,EAAA,MAAA,CAAA,CAAA;;EACxB,IAAA,KAAA,GAAA,MAAA,CAAA,IAAA,CAAA,IAAA,CAAA,CADwB;;EAIxB,IAAA,IAAM6E,EAAE,GAAGlH,MAAM,CAAC,WAAD,CAAjB,CAJwB;;EAOxBqC,IAAAA,OAAO,GAAGiE,MAAM,CAACa,MAAP,CAAc;EACtBC,MAAAA,QAAQ,EAAE,EADY;EAEtBzE,MAAAA,IAAI,EAAE,IAFgB;EAGtBmD,MAAAA,YAAY,EAAE,EAHQ;EAItBuB,MAAAA,aAAa,EAAE,KAAA;EAJO,KAAd,EAKPhF,OALO,CAAV,CAAA;EAOA,IAAA,IAAIM,IAAI,GAAGN,OAAO,CAACM,IAAnB,CAAA;EACA,IAAI4C,IAAAA,KAAK,GAAG,IAAZ,CAAA;EACA,IAAA,IAAI+B,MAAM,GAAG,EAAb,CAhBwB;;EAmBxB,IAAA,IAAMC,aAAa,GAAG,SAAhBA,aAAgB,GAAM;EAC1B,MAAA,KAAA,CAAKC,OAAL,CAAaC,MAAM,CAACC,QAAP,CAAgBC,QAA7B,CAAA,CAAA;EACD,KAFD,CAAA;;EAGA,IAAItF,IAAAA,OAAO,CAACgF,aAAZ,EAA2B;EACzBI,MAAAA,MAAM,CAACtB,gBAAP,CAAwB,UAAxB,EAAoCoB,aAApC,CAAA,CAAA;EACD,KAAA;EAED;EACJ;EACA;EACA;EACA;EACA;;;EACI,IAAMK,IAAAA,WAAW,GAAG,SAAdA,WAAc,CAACC,GAAD,EAAMC,OAAN,EAAeC,QAAf,EAA4B;EAC9C;EACApF,MAAAA,IAAI,GAAGmF,OAAP,CAAA;EACAvC,MAAAA,KAAK,GAAGwC,QAAR,CAH8C;;EAM9C,MAAI1F,IAAAA,OAAO,CAACgF,aAAZ,EAA2B;EACzB;EACA,QAAA,IAAMW,IAAI,GAAGH,GAAG,CAACtB,QAAJ,CAAalE,OAAO,CAAC+E,QAArB,CAAiCS,GAAAA,GAAjC,GAAuCxF,OAAO,CAAC+E,QAAR,GAAmBS,GAAvE,CAFyB;;;EAIzB,QAAA,IAAIG,IAAI,KAAKP,MAAM,CAACC,QAAP,CAAgBC,QAA7B,EAAuC;EACrC;EACAF,UAAAA,MAAM,CAACQ,OAAP,CAAeC,SAAf,CAAyB,IAAzB,EAA+BT,MAAM,CAACU,QAAP,CAAgBC,KAA/C,EAAsDJ,IAAtD,CAAA,CAAA;EACD,SAAA;EACF,OAd6C;;;EAiB9C,MAAKpB,KAAAA,CAAAA,aAAL,CAAmB,SAAnB,EAA8B,gCAAOrB,KAAP,EAAc5C,IAAd,CAA9B,CAAA,CAAA;EACD,KAlBD,CAAA;EAoBA;EACJ;EACA;EACA;;;EACI,IAAKzB,KAAAA,CAAAA,KAAL,GAAa,YAAM;EACjB,MAAA,OAAOgG,EAAP,CAAA;EACD,KAFD,CAAA;EAIA;EACJ;EACA;EACA;;;EACI,IAAKmB,KAAAA,CAAAA,OAAL,GAAe,YAAM;EACnB,MAAA,OAAO1F,IAAP,CAAA;EACD,KAFD,CAAA;EAIA;EACJ;EACA;EACA;;;EACI,IAAK2F,KAAAA,CAAAA,QAAL,GAAgB,YAAM;EACpB,MAAA,OAAO/C,KAAP,CAAA;EACD,KAFD,CAAA;EAIA;EACJ;EACA;EACA;;;EACI,IAAKgD,KAAAA,CAAAA,SAAL,GAAiB,YAAM;EACrB,MAAA,OAAOjC,MAAM,CAACxC,IAAP,CAAYwD,MAAZ,CAAP,CAAA;EACD,KAFD,CAAA;EAIA;EACJ;EACA;;;EACI,IAAKlG,KAAAA,CAAAA,OAAL,GAAe,YAAM;EACnB;EACA,MAAIiB,IAAAA,OAAO,CAACgF,aAAZ,EAA2B;EACzBI,QAAAA,MAAM,CAACpB,mBAAP,CAA2B,UAA3B,EAAuCkB,aAAvC,CAAA,CAAA;EACD,OAAA;;EAEDlF,MAAAA,OAAO,GAAG,IAAV,CAAA;EACAM,MAAAA,IAAI,GAAG,IAAP,CAAA;EACA4C,MAAAA,KAAK,GAAG,IAAR,CAAA;EACA+B,MAAAA,MAAM,GAAG,IAAT,CATmB;;EAYnB,MAAA,KAAA,CAAKV,aAAL,CAAmB,WAAnB,EAAgC,CAAA,sBAAA,CAAA,KAAA,CAAA,CAAhC,EAZmB;;;EAenB,MAAA,KAAA,CAAKD,uBAAL,EAAA,CAAA;EACD,KAhBD,CAAA;EAkBA;EACJ;EACA;EACA;;;EACI,IAAA,KAAA,CAAK6B,QAAL,GAAgB,UAACC,MAAD,EAAY;EAC1B;EACAnB,MAAAA,MAAM,CAACmB,MAAD,CAAN,GAAiB3C,YAAY,CAAC2C,MAAD,EAAS,EAAT,EAAapG,OAAO,CAACyD,YAArB,CAA7B,CAF0B;;EAK1B,MAAA,KAAA,CAAKc,aAAL,CAAmB,OAAnB,EAA4B,CAAA,sBAAA,CAAA,KAAA,CAAA,EAAO6B,MAAP,CAA5B,CAAA,CAAA;;EAEA,MAAA,IAAI9F,IAAJ,EAAU;EACR;EACA,QAAA,IAAM+F,KAAK,GAAG/F,IAAI,CAACe,OAAL,CAAarB,OAAO,CAAC+E,QAArB,EAA+B,EAA/B,CAAd,CAFQ;;;EAIR,QAAIE,IAAAA,MAAM,CAACmB,MAAD,CAAN,CAAeE,IAAf,CAAoBD,KAApB,CAAJ,EAAgC;EAC9Bd,UAAAA,WAAW,CAACjF,IAAD,EAAO+F,KAAP,EAAcD,MAAd,CAAX,CAAA;EACD,SAAA;EACF,OAAA;EACF,KAfD,CAAA;EAiBA;EACJ;EACA;EACA;;;EACI,IAAA,KAAA,CAAKG,WAAL,GAAmB,UAACH,MAAD,EAAY;EAC7B;EACA,MAAA,OAAOnB,MAAM,CAACmB,MAAD,CAAb,CAF6B;;EAK7B,MAAA,KAAA,CAAK7B,aAAL,CAAmB,SAAnB,EAA8B,CAAA,sBAAA,CAAA,KAAA,CAAA,EAAO6B,MAAP,CAA9B,CAAA,CAAA;;EAEA,MAAIlD,IAAAA,KAAK,KAAKkD,MAAd,EAAsB;EACpB;EACA9F,QAAAA,IAAI,GAAG,IAAP,CAAA;EACA4C,QAAAA,KAAK,GAAG,IAAR,CAHoB;;EAMpB,QAAKqB,KAAAA,CAAAA,aAAL,CAAmB,SAAnB,EAA8B,gCAAOrB,KAAP,EAAc5C,IAAd,CAA9B,CAAA,CAAA;EACD,OAAA;EACF,KAfD,CAAA;EAiBA;EACJ;EACA;EACA;;;EACI,IAAA,KAAA,CAAK6E,OAAL,GAAe,UAACK,GAAD,EAAS;EACtB;EACA,MAAMC,IAAAA,OAAO,GAAGD,GAAG,CAACnE,OAAJ,CAAYrB,OAAO,CAAC+E,QAApB,EAA8B,EAA9B,CAAhB,CAAA;;EACA,MAAIzE,IAAAA,IAAI,KAAKmF,OAAb,EAAsB;EACpB,QAAA,OAAA;EACD,OALqB;;;EAQtB,MAAIC,IAAAA,QAAQ,GAAG,IAAf,CAAA;;EACA,MAAA,KAAK,IAAMU,MAAX,IAAqBnB,MAArB,EAA6B;EAC3B;EACA,QAAIA,IAAAA,MAAM,CAACmB,MAAD,CAAN,CAAeE,IAAf,CAAoBb,OAApB,CAAJ,EAAkC;EAChCC,UAAAA,QAAQ,GAAGU,MAAX,CAAA;EACA,UAAA,MAAA;EACD,SAAA;EACF,OAfqB;;;EAkBtBb,MAAAA,WAAW,CAACC,GAAD,EAAMC,OAAN,EAAeC,QAAf,CAAX,CAAA;EACD,KAnBD,CAAA;;EAvJwB,IAAA,OAAA,KAAA,CAAA;EA2KzB,GAAA;;;IA5KkB9B;;ECNrB;AAMA,8BAAe,CAAA,UAAC4C,aAAD,EAAmB;EAChC,EAAO,OAAA;EACLvI,IAAAA,IAAI,EAAE,QADD;EAGLwI,IAAAA,MAAM,EAAE,SAAA,MAAA,CAACtI,SAAD,EAAYC,SAAZ,EAAiD,IAAA,EAAA;EAAA,MAAxBsI,IAAAA,iBAAwB,QAAxBA,iBAAwB,CAAA;EACvD;EACA,MAAA,IAAM3I,OAAO,GAAGK,SAAS,CAACC,UAAV,EAAhB,CAFuD;;EAKvD,MAAA,IAAIC,MAAM,GAAGP,OAAO,CAACH,MAAD,CAApB,CAAA;;EACA,MAAI,IAAA,CAACU,MAAL,EAAa;EACX;EACA,QAAM0B,IAAAA,OAAO,GAAGiE,MAAM,CAACa,MAAP,CAAc,EAAd,EAAkB0B,aAAlB,EAAiCE,iBAAiB,CAACvI,SAAD,EAAYC,SAAS,CAACuI,KAAV,EAAZ,EAA+BvI,SAAS,CAACwI,QAAV,EAA/B,CAAlD,CAAhB,CAFW;;EAIXtI,QAAAA,MAAM,GAAGP,OAAO,CAACH,MAAD,CAAP,GAAkB,IAAIgH,MAAJ,CAAW5E,OAAX,CAA3B,CAAA;EACD,OAAA;EACF,KAfI;EAiBLjB,IAAAA,OAAO,EAAE,SAAA,OAAA,CAACZ,SAAD,EAAYC,SAAZ,EAA0B;EACjC;EACA,MAAA,IAAML,OAAO,GAAGK,SAAS,CAACC,UAAV,EAAhB,CAFiC;;EAKjC,MAAA,IAAMC,MAAM,GAAGP,OAAO,CAACH,MAAD,CAAtB,CAAA;;EACA,MAAI,IAAA,CAACU,MAAL,EAAa;EACX,QAAA,OAAA;EACD,OARgC;;;EAWjC,MAAA,OAAOP,OAAO,CAACH,MAAD,CAAd,CAXiC;;EAcjC,MAAA,IAAMiH,EAAE,GAAGvG,MAAM,CAACO,KAAP,EAAX,CAdiC;;EAiBjCP,MAAAA,MAAM,CAACS,OAAP,EAAA,CAjBiC;;EAoBjC,MAAA,IAAM8H,OAAO,GAAG1I,SAAS,CAAC2I,UAAV,EAAhB,CApBiC;;EAuBjCD,MAAAA,OAAO,CAACJ,MAAR,CAAe,CAAC;EAAE5B,QAAAA,EAAE,EAAEA,EAAN;EAAUvE,QAAAA,IAAI,EAAE,EAAA;EAAhB,OAAD,CAAf,CAAA,CAAA;EACD,KAAA;EAzCI,GAAP,CAAA;EA2CD,CA5CD;;ECNA;EACA;EACA;EACA;EACA;EAOA;EACA;EACA;EACA;EACA;;EACO,IAAMyG,WAAW,GAAG,SAAdA,WAAc,CAACC,SAAD,EAAYC,IAAZ,EAAqB;EAC9C,EAAID,IAAAA,SAAS,CAACE,WAAd,EAA2B;EACzBF,IAAAA,SAAS,CAACG,UAAV,CAAqBC,YAArB,CAAkCH,IAAlC,EAAwCD,SAAS,CAACE,WAAlD,CAAA,CAAA;EACD,GAFD,MAEO;EACLF,IAAAA,SAAS,CAACG,UAAV,CAAqBE,WAArB,CAAiCJ,IAAjC,CAAA,CAAA;EACD,GAAA;EACF,CANM;;EChBP;AAOA,uBAAe;EACbhJ,EAAAA,IAAI,EAAE,OADO;EAGbwI,EAAAA,MAAM,EAAE,SAAA,MAAA,CAACtI,SAAD,EAAYC,SAAZ,EAA2D,IAAA,EAAA;EAAA,IAAlCkJ,IAAAA,YAAkC,QAAlCA,YAAkC;EAAA,QAApBC,aAAoB,QAApBA,aAAoB,CAAA;EACjE;EACA,IAAA,IAAMxJ,OAAO,GAAGK,SAAS,CAACC,UAAV,EAAhB,CAAA;EAEA,IAAA,IAAIC,MAAJ,CAAA;;EACA,IAAA,IAAMkJ,KAAK,GAAG,SAARA,KAAQ,GAAM;EAClB;EACA,MAAA,IAAIlJ,MAAM,IAAIF,SAAS,CAACP,KAAD,CAAvB,EAAgC;EAC9BS,QAAAA,MAAM,CAAC0F,mBAAP,CAA2B,SAA3B,EAAsC5F,SAAS,CAACP,KAAD,CAAT,CAAiBb,OAAvD,CAAA,CAAA;EACAsB,QAAAA,MAAM,CAAC0F,mBAAP,CAA2B,WAA3B,EAAwC5F,SAAS,CAACP,KAAD,CAAT,CAAiB2J,KAAzD,CAAA,CAAA;EAEA,QAAOpJ,OAAAA,SAAS,CAACP,KAAD,CAAhB,CAAA;EACD,OAPiB;;;EAUlBS,MAAAA,MAAM,GAAGR,aAAa,CAACC,OAAD,CAAtB,CAAA;;EACA,MAAI,IAAA,CAACO,MAAL,EAAa;EACXlB,QAAAA,OAAO,CAACqK,IAAR,CAAa,0CAAb,CAAA,CAAA;EACA,QAAA,OAAA;EACD,OAdiB;;;EAiBlBrJ,MAAAA,SAAS,CAACP,KAAD,CAAT,GAAmB;EACjB2J,QAAAA,KAAK,EAAEA,KAAAA;EADU,OAAnB,CAjBkB;;EAsBlB,MAAA,IAAM1I,KAAK,GAAGV,SAAS,CAACwI,QAAV,EAAd,CAtBkB;;EAyBlBtI,MAAAA,MAAM,CAAC6H,QAAP,CAAgBrH,KAAhB,EAzBkB;;EA4BlB,MAAM4I,IAAAA,YAAY,GAAG,SAAfA,YAAe,CAACpJ,MAAD,EAAS4E,KAAT,EAAmB;EACtC,QAAIA,IAAAA,KAAK,KAAKpE,KAAd,EAAqB;EACnB,UAAA,IAAIf,OAAO,CAAC4J,OAAR,KAAoB,UAAxB,EAAoC;EAClC,YAAIvJ,IAAAA,SAAS,CAACP,KAAD,CAAT,IAAoBO,SAAS,CAACP,KAAD,CAAT,CAAiBE,OAAzC,EAAkD;EAChD;EACA,cAAA,IAAM6J,YAAY,GAAGxJ,SAAS,CAACP,KAAD,CAAT,CAAiBE,OAAtC,CAAA;EACAwJ,cAAAA,aAAa,CAACpJ,SAAD,EAAYyJ,YAAZ,EAA0B,YAAM;EAC3C;EACAA,gBAAAA,YAAY,CAACC,MAAb,EAAA,CAAA;EACAzJ,gBAAAA,SAAS,CAACP,KAAD,CAAT,CAAiBE,OAAjB,GAA2B0C,SAA3B,CAAA;EACD,eAJY,CAAb,CAAA;EAKD,aAAA;EACF,WAVD,MAUO;EACL;EACA8G,YAAAA,aAAa,CAACpJ,SAAD,EAAYJ,OAAZ,EAAqB,YAAM;EACtCA,cAAAA,OAAO,CAAC+J,KAAR,CAAcC,OAAd,GAAwB,MAAxB,CAAA;EACD,aAFY,CAAb,CAAA;EAGD,WAAA;EACF,SAjBD,MAiBO,IAAIhK,OAAO,CAAC4J,OAAR,KAAoB,UAAxB,EAAoC;EACzC;EACA,UAAA,IAAMK,gBAAgB,GAAGlC,QAAQ,CAACmC,UAAT,CAAoBlK,OAAO,CAACmK,OAA5B,EAAqC,IAArC,CAAzB,CAFyC;;EAIzCnB,UAAAA,WAAW,CAAChJ,OAAD,EAAUiK,gBAAV,CAAX,CAJyC;;EAMzC5J,UAAAA,SAAS,CAACP,KAAD,CAAT,CAAiBE,OAAjB,GAA2BA,OAAO,CAACmJ,WAAnC,CANyC;;EASzCI,UAAAA,YAAY,CAACnJ,SAAD,EAAYC,SAAS,CAACP,KAAD,CAAT,CAAiBE,OAA7B,CAAZ,CAAA;EACD,SAVM,MAUA;EACL;EACAA,UAAAA,OAAO,CAAC+J,KAAR,CAAcC,OAAd,GAAwB,IAAxB,CAFK;;EAKLT,UAAAA,YAAY,CAACnJ,SAAD,EAAYJ,OAAZ,CAAZ,CAAA;EACD,SAAA;EACF,OAnCD,CAAA;;EAoCAK,MAAAA,SAAS,CAACP,KAAD,CAAT,CAAiBb,OAAjB,GAA2B0K,YAA3B,CAhEkB;;EAmElBpJ,MAAAA,MAAM,CAACwF,gBAAP,CAAwB,SAAxB,EAAmC4D,YAAnC,CAAA,CAAA;EACAA,MAAAA,YAAY,CAACpJ,MAAD,EAASA,MAAM,CAAC2H,QAAP,EAAT,CAAZ,CApEkB;;EAuElB3H,MAAAA,MAAM,CAACwF,gBAAP,CAAwB,WAAxB,EAAqC0D,KAArC,CAAA,CAAA;EACD,KAxED,CALiE;;;EAgFjEA,IAAAA,KAAK,EAAA,CAAA;EACN,GApFY;EAsFbzI,EAAAA,OAAO,EAAE,SAAA,OAAA,CAACZ,SAAD,EAAYC,SAAZ,EAA6C,KAAA,EAAA;EAAA,IAApBmJ,IAAAA,aAAoB,SAApBA,aAAoB,CAAA;EACpD;EACA,IAAA,IAAMxJ,OAAO,GAAGK,SAAS,CAACC,UAAV,EAAhB,CAAA;;EACA,IAAA,IAAIN,OAAO,CAAC4J,OAAR,KAAoB,UAAxB,EAAoC;EAClC,MAAIvJ,IAAAA,SAAS,CAACP,KAAD,CAAT,IAAoBO,SAAS,CAACP,KAAD,CAAT,CAAiBE,OAAzC,EAAkD;EAChD;EACA,QAAA,IAAM6J,YAAY,GAAGxJ,SAAS,CAACP,KAAD,CAAT,CAAiBE,OAAtC,CAAA;EACAwJ,QAAAA,aAAa,CAACpJ,SAAD,EAAYyJ,YAAZ,EAA0B,YAAM;EAC3C;EACAA,UAAAA,YAAY,CAACC,MAAb,EAAA,CAAA;EACAzJ,UAAAA,SAAS,CAACP,KAAD,CAAT,CAAiBE,OAAjB,GAA2B0C,SAA3B,CAAA;EACD,SAJY,CAAb,CAAA;EAKD,OAAA;EACF,KAVD,MAUO;EACL;EACA8G,MAAAA,aAAa,CAACpJ,SAAD,EAAYJ,OAAZ,EAAqB,YAAM;EACtCA,QAAAA,OAAO,CAAC+J,KAAR,CAAcC,OAAd,GAAwB,MAAxB,CAAA;EACD,OAFY,CAAb,CAAA;EAGD,KAlBmD;;;EAqBpD,IAAA,IAAMzJ,MAAM,GAAGR,aAAa,CAACC,OAAD,CAA5B,CAAA;;EACA,IAAI,IAAA,CAACO,MAAL,EAAa;EACX,MAAA,OAAA;EACD,KAxBmD;;;EA2BpD,IAAA,IAAIF,SAAS,CAACP,KAAD,CAAb,EAAsB;EACpBS,MAAAA,MAAM,CAAC0F,mBAAP,CAA2B,WAA3B,EAAwC5F,SAAS,CAACP,KAAD,CAAT,CAAiB2J,KAAzD,CAAA,CAAA;;EACA,MAAA,IAAIpJ,SAAS,CAACP,KAAD,CAAT,CAAiBb,OAArB,EAA8B;EAC5BsB,QAAAA,MAAM,CAAC0F,mBAAP,CAA2B,QAA3B,EAAqC5F,SAAS,CAACP,KAAD,CAAT,CAAiBb,OAAtD,CAAA,CAAA;EACD,OAAA;EACF,KAAA;EACF,GAAA;EAvHY,CAAf;;ECPA;AAMA,yBAAe;EACbiB,EAAAA,IAAI,EAAE,UADO;EAGbwI,EAAAA,MAAM,EAAE,SAAA,MAAA,CAACtI,SAAD,EAAYC,SAAZ,EAA0B;EAChC,IAAA,IAAML,OAAO,GAAGK,SAAS,CAACC,UAAV,EAAhB,CAAA;EACA,IAAA,IAAM8J,SAAS,GAAG/J,SAAS,CAACgK,YAAV,EAAlB,CAAA;EACA,IAAA,IAAMtJ,KAAK,GAAGV,SAAS,CAACwI,QAAV,EAAd,CAHgC;;EAMhC,IAAA,IAAIxI,SAAS,CAACV,QAAD,CAAb,EAAyB;EACvB;EACA,MAAIU,IAAAA,SAAS,CAACV,QAAD,CAAT,CAAoBoB,KAApB,KAA8BA,KAAlC,EAAyC;EACvC,QAAA,OAAA;EACD,OAJsB;;;EAOvBV,MAAAA,SAAS,CAACV,QAAD,CAAT,CAAoBX,MAApB,CAA2BiH,mBAA3B,CAA+C,OAA/C,EAAwD5F,SAAS,CAACV,QAAD,CAAT,CAAoBV,OAA5E,CAAA,CAAA;EACD,KAAA;;EAED,IAAA,IAAMA,OAAO,GAAG,SAAVA,OAAU,CAACyH,KAAD,EAAW;EACzB,MAAI0D,IAAAA,SAAS,CAACE,IAAV,IAAkB5D,KAAK,CAAC1H,MAAN,KAAiBgB,OAAvC,EAAgD;EAC9C,QAAA,OAAA;EACD,OAAA;;EAED,MAAIoK,IAAAA,SAAS,CAACG,OAAd,EAAuB;EACrB7D,QAAAA,KAAK,CAAC8D,cAAN,EAAA,CAAA;EACD,OAAA;;EACD,MAAIJ,IAAAA,SAAS,CAACK,IAAd,EAAoB;EAClB/D,QAAAA,KAAK,CAACgE,eAAN,EAAA,CAAA;EACD,OAAA;;EAED,MAAA,IAAMnK,MAAM,GAAGR,aAAa,CAACC,OAAD,CAA5B,CAAA;;EACA,MAAI,IAAA,CAACO,MAAL,EAAa;EACX,QAAA,OAAA;EACD,OAAA;;EAEDA,MAAAA,MAAM,CAAC6G,OAAP,CAAerG,KAAf,CAAA,CAAA;EACD,KAlBD,CAhBgC;;;EAqChCf,IAAAA,OAAO,CAAC+F,gBAAR,CAAyB,OAAzB,EAAkC9G,OAAlC,EArCgC;;EAwChCoB,IAAAA,SAAS,CAACV,QAAD,CAAT,GAAsB;EACpBV,MAAAA,OAAO,EAAEA,OADW;EAEpB8B,MAAAA,KAAK,EAAEA,KAAAA;EAFa,KAAtB,CAAA;EAID,GA/CY;EAiDbC,EAAAA,OAAO,EAAE,SAAA,OAAA,CAACZ,SAAD,EAAYC,SAAZ,EAA0B;EACjC,IAAA,IAAI,CAACA,SAAS,CAACV,QAAD,CAAd,EAA0B;EACxB,MAAA,OAAA;EACD,KAAA;;EAED,IAAA,IAAMK,OAAO,GAAGK,SAAS,CAACC,UAAV,EAAhB,CAAA;EAEAN,IAAAA,OAAO,CAACiG,mBAAR,CAA4B,OAA5B,EAAqC5F,SAAS,CAACV,QAAD,CAAT,CAAoBV,OAAzD,CAAA,CAAA;EAEA,IAAOoB,OAAAA,SAAS,CAACV,QAAD,CAAhB,CAAA;EACD,GAAA;EA3DY,CAAf;;ECNA;EACA;EACA;EACA;EACA;EACO,IAAMgL,UAAU,GAAG,SAAbA,UAAa,CAAC3L,MAAD,EAAwB;EAAA,EAAA,KAAA,IAAA,IAAA,GAAA,SAAA,CAAA,MAAA,EAAZ4L,OAAY,GAAA,IAAA,KAAA,CAAA,IAAA,GAAA,CAAA,GAAA,IAAA,GAAA,CAAA,GAAA,CAAA,CAAA,EAAA,IAAA,GAAA,CAAA,EAAA,IAAA,GAAA,IAAA,EAAA,IAAA,EAAA,EAAA;EAAZA,IAAAA,OAAY,CAAA,IAAA,GAAA,CAAA,CAAA,GAAA,SAAA,CAAA,IAAA,CAAA,CAAA;EAAA,GAAA;;EAChD,EAAA,IAAI,CAACA,OAAO,CAACvJ,MAAb,EAAqB;EACnB,IAAA,OAAOrC,MAAP,CAAA;EACD,GAAA;;EACD,EAAA,IAAM8E,MAAM,GAAG8G,OAAO,CAACC,KAAR,EAAf,CAAA;;EAEA,EAAIC,IAAAA,QAAQ,CAAC9L,MAAD,CAAR,IAAoB8L,QAAQ,CAAChH,MAAD,CAAhC,EAA0C;EACxC,IAAA,KAAK,IAAM1E,GAAX,IAAkB0E,MAAlB,EAA0B;EACxB,MAAA,IAAIgH,QAAQ,CAAChH,MAAM,CAAC1E,GAAD,CAAP,CAAZ,EAA2B;EACzB,QAAA,IAAI,CAACJ,MAAM,CAACI,GAAD,CAAX,EAAkB;EAChB8G,UAAAA,MAAM,CAACa,MAAP,CAAc/H,MAAd,EAAsB;EACpB,YAAA,CAACI,GAAD,GAAO,EAAA;EADa,WAAtB,CAAA,CAAA;EAGD,SAAA;;EACDuL,QAAAA,UAAU,CAAC3L,MAAM,CAACI,GAAD,CAAP,EAAc0E,MAAM,CAAC1E,GAAD,CAApB,CAAV,CAAA;EACD,OAPD,MAOO,IAAIuG,KAAK,CAACC,OAAN,CAAc9B,MAAM,CAAC1E,GAAD,CAApB,CAAJ,EAAgC;EACrCJ,QAAAA,MAAM,CAACI,GAAD,CAAN,GAAc0E,MAAM,CAAC1E,GAAD,CAAN,CAAY8E,GAAZ,CAAgB,UAACnD,KAAD,EAAW;EACvC,UAAA,IAAI+J,QAAQ,CAAC/J,KAAD,CAAZ,EAAqB;EACnB,YAAA,OAAO4J,UAAU,CAAC,EAAD,EAAK5J,KAAL,CAAjB,CAAA;EACD,WAAA;;EACD,UAAA,OAAOA,KAAP,CAAA;EACD,SALa,CAAd,CAAA;EAMD,OAPM,MAOA;EACLmF,QAAAA,MAAM,CAACa,MAAP,CAAc/H,MAAd,EAAsB;EACpB,UAAA,CAACI,GAAD,GAAO0E,MAAM,CAAC1E,GAAD,CAAA;EADO,SAAtB,CAAA,CAAA;EAGD,OAAA;EACF,KAAA;EACF,GAAA;;EAED,EAAA,OAAOuL,UAAU,CAAV,KAAA,CAAA,KAAA,CAAA,EAAA,CAAW3L,MAAX,CAAA,CAAA,MAAA,CAAsB4L,OAAtB,CAAP,CAAA,CAAA;EACD,CA/BM,CAAA;EAgDP;EACA;EACA;EACA;EACA;;EACO,IAAME,QAAQ,GAAG,SAAXA,QAAW,CAAC/J,KAAD,EAAW;EACjC,EAAA,OAAQA,KAAK,IAAI,OAAOA,KAAP,KAAiB,QAA1B,IAAsC,CAAC4E,KAAK,CAACC,OAAN,CAAc7E,KAAd,CAA/C,CAAA;EACD,CAFM;;MC/CcgK;EACnB;EACF;EACA;EACA;EACA;EACE,SAAA,WAAA,CAAYjC,OAAZ,EAAqC;EAAA,EAAhB7G,IAAAA,OAAgB,uEAAN,IAAM,CAAA;;EAAA,EAAA,eAAA,CAAA,IAAA,EAAA,WAAA,CAAA,CAAA;;EACnC;EACAA,EAAAA,OAAO,GAAG0I,UAAU,CAAC,EAAD,EAAK1I,OAAL,CAApB,CAFmC;;EAKnC,EAAI+I,IAAAA,eAAJ,CALmC;;EAQnClC,EAAAA,OAAO,CAAC/C,gBAAR,CAAyB,UAAzB,EAAqC,YAAM;EACzC;EACA+C,IAAAA,OAAO,CAACmC,WAAR,CAAoB,CAApB,EAAuBC,aAAvB,CAAA,CAAA;EACAF,IAAAA,eAAe,GAAGG,qBAAqB,CAAClJ,OAAD,CAAvC,CAAA;EACA6G,IAAAA,OAAO,CAACsC,aAAR,CAAsB,CAAC,CAAvB,EAA0BJ,eAA1B,EAA2CK,cAA3C,EAA2DC,gBAA3D,CAAA,CAAA;EACD,GALD,EARmC;;EAgBnCxC,EAAAA,OAAO,CAAC/C,gBAAR,CAAyB,WAAzB,EAAsC,YAAM;EAC1C;EACA+C,IAAAA,OAAO,CAACyC,cAAR,CAAuBL,aAAvB,CAAA,CAAA;EACApC,IAAAA,OAAO,CAAC0C,gBAAR,CAAyBR,eAAzB,EAA0CK,cAA1C,EAA0DC,gBAA1D,CAAA,CAH0C;;EAM1CN,IAAAA,eAAe,GAAG,IAAlB,CAAA;EACD,GAPD,CAAA,CAAA;EAQD;;;;;;;;"}