{
  "version": 3,
  "sources": ["../../common/src/polyfills/RevocableProxy.js", "../src/symbols.js", "../src/utilities/closestRouter.js", "../src/contexts/router.js", "../../../node_modules/path-to-regexp/dist.es2015/index.js", "../../common/src/events/EventDispatcher.js", "../src/Router.js", "../src/factories/directives/router.js", "../../common/src/utilities/Element.js", "../src/directives/route.js", "../src/directives/routeTo.js", "../../common/src/utilities/Object.js", "../src/DoarsRouter.js"],
  "sourcesContent": ["// List of methods to revoke access to.\nconst REFLECTION_METHODS = ['apply', 'construct', 'defineProperty', 'deleteProperty', 'get', 'getOwnPropertyDescriptor', 'getPrototypeOf', 'isExtensible', 'ownKeys', 'preventExtensions', 'set', 'setPrototypeOf'];\n/**\n * Revocable proxy made using regular a proxy and a simple boolean.\n */\n\nexport default ((target, handler) => {\n  // Keep track of status.\n  let revoked = false; // Add revocable handlers for each given handlers.\n\n  const revocableHandler = {};\n\n  for (const key of REFLECTION_METHODS) {\n    revocableHandler[key] = (...parameters) => {\n      if (revoked) {\n        console.error('illegal operation attempted on a revoked proxy');\n        return;\n      }\n\n      if (key in handler) {\n        return handler[key](...parameters);\n      }\n\n      return Reflect[key](...parameters);\n    };\n  } // Return proxy and revoke method.\n\n\n  return {\n    proxy: new Proxy(target, revocableHandler),\n    revoke: () => {\n      revoked = true;\n    }\n  };\n});", "export const ROUTE_TO = Symbol('ROUTE_TO');\nexport const ROUTER = Symbol('ROUTER');\nexport const ROUTE = Symbol('ROUTE');", "// Import symbols.\nimport { ROUTER } from '../symbols.js';\n/**\n * Get closest router in hierarchy.\n * @param {HTMLElement} element Element to start searching from.\n * @returns {Router} Closest router.\n */\n\nconst closestRouter = element => {\n  if (!element.parentElement) {\n    return;\n  }\n\n  element = element.parentElement;\n\n  if (element[ROUTER]) {\n    return element[ROUTER];\n  }\n\n  return closestRouter(element);\n};\n\nexport default closestRouter;", "// Import polyfill.\nimport RevocableProxy from '@doars/common/src/polyfills/RevocableProxy.js'; // Import symbol.\n\nimport { ROUTER } from '../symbols'; // Import utilities.\n\nimport closestRouter from '../utilities/closestRouter.js';\nexport default {\n  name: '$router',\n  create: (component, attribute) => {\n    // Deconstruct attribute.\n    const element = attribute.getElement();\n    let router = null;\n    const revocable = RevocableProxy({}, {\n      get: (target, propertyKey, receiver) => {\n        // Get closest router from hierarchy.\n        if (router === null) {\n          if (element[ROUTER]) {\n            router = element[ROUTER];\n          } else {\n            router = closestRouter(element);\n          } // Set router to false so we don't look twice.\n\n\n          if (!router) {\n            router = false;\n          }\n        } // Mark as router accessed.\n\n\n        attribute.accessed(router.getId(), '');\n\n        if (!router) {\n          return;\n        } // Return router property.\n\n\n        return Reflect.get(router, propertyKey, receiver);\n      }\n    });\n    return {\n      value: revocable.proxy,\n      destroy: () => {\n        revocable.revoke();\n      }\n    };\n  }\n};", "/**\n * Tokenize input string.\n */\nfunction lexer(str) {\n  var tokens = [];\n  var i = 0;\n\n  while (i < str.length) {\n    var char = str[i];\n\n    if (char === \"*\" || char === \"+\" || char === \"?\") {\n      tokens.push({\n        type: \"MODIFIER\",\n        index: i,\n        value: str[i++]\n      });\n      continue;\n    }\n\n    if (char === \"\\\\\") {\n      tokens.push({\n        type: \"ESCAPED_CHAR\",\n        index: i++,\n        value: str[i++]\n      });\n      continue;\n    }\n\n    if (char === \"{\") {\n      tokens.push({\n        type: \"OPEN\",\n        index: i,\n        value: str[i++]\n      });\n      continue;\n    }\n\n    if (char === \"}\") {\n      tokens.push({\n        type: \"CLOSE\",\n        index: i,\n        value: str[i++]\n      });\n      continue;\n    }\n\n    if (char === \":\") {\n      var name = \"\";\n      var j = i + 1;\n\n      while (j < str.length) {\n        var code = str.charCodeAt(j);\n\n        if ( // `0-9`\n        code >= 48 && code <= 57 || // `A-Z`\n        code >= 65 && code <= 90 || // `a-z`\n        code >= 97 && code <= 122 || // `_`\n        code === 95) {\n          name += str[j++];\n          continue;\n        }\n\n        break;\n      }\n\n      if (!name) throw new TypeError(\"Missing parameter name at \".concat(i));\n      tokens.push({\n        type: \"NAME\",\n        index: i,\n        value: name\n      });\n      i = j;\n      continue;\n    }\n\n    if (char === \"(\") {\n      var count = 1;\n      var pattern = \"\";\n      var j = i + 1;\n\n      if (str[j] === \"?\") {\n        throw new TypeError(\"Pattern cannot start with \\\"?\\\" at \".concat(j));\n      }\n\n      while (j < str.length) {\n        if (str[j] === \"\\\\\") {\n          pattern += str[j++] + str[j++];\n          continue;\n        }\n\n        if (str[j] === \")\") {\n          count--;\n\n          if (count === 0) {\n            j++;\n            break;\n          }\n        } else if (str[j] === \"(\") {\n          count++;\n\n          if (str[j + 1] !== \"?\") {\n            throw new TypeError(\"Capturing groups are not allowed at \".concat(j));\n          }\n        }\n\n        pattern += str[j++];\n      }\n\n      if (count) throw new TypeError(\"Unbalanced pattern at \".concat(i));\n      if (!pattern) throw new TypeError(\"Missing pattern at \".concat(i));\n      tokens.push({\n        type: \"PATTERN\",\n        index: i,\n        value: pattern\n      });\n      i = j;\n      continue;\n    }\n\n    tokens.push({\n      type: \"CHAR\",\n      index: i,\n      value: str[i++]\n    });\n  }\n\n  tokens.push({\n    type: \"END\",\n    index: i,\n    value: \"\"\n  });\n  return tokens;\n}\n/**\n * Parse a string for the raw tokens.\n */\n\n\nexport function parse(str, options) {\n  if (options === void 0) {\n    options = {};\n  }\n\n  var tokens = lexer(str);\n  var _a = options.prefixes,\n      prefixes = _a === void 0 ? \"./\" : _a;\n  var defaultPattern = \"[^\".concat(escapeString(options.delimiter || \"/#?\"), \"]+?\");\n  var result = [];\n  var key = 0;\n  var i = 0;\n  var path = \"\";\n\n  var tryConsume = function (type) {\n    if (i < tokens.length && tokens[i].type === type) return tokens[i++].value;\n  };\n\n  var mustConsume = function (type) {\n    var value = tryConsume(type);\n    if (value !== undefined) return value;\n    var _a = tokens[i],\n        nextType = _a.type,\n        index = _a.index;\n    throw new TypeError(\"Unexpected \".concat(nextType, \" at \").concat(index, \", expected \").concat(type));\n  };\n\n  var consumeText = function () {\n    var result = \"\";\n    var value;\n\n    while (value = tryConsume(\"CHAR\") || tryConsume(\"ESCAPED_CHAR\")) {\n      result += value;\n    }\n\n    return result;\n  };\n\n  while (i < tokens.length) {\n    var char = tryConsume(\"CHAR\");\n    var name = tryConsume(\"NAME\");\n    var pattern = tryConsume(\"PATTERN\");\n\n    if (name || pattern) {\n      var prefix = char || \"\";\n\n      if (prefixes.indexOf(prefix) === -1) {\n        path += prefix;\n        prefix = \"\";\n      }\n\n      if (path) {\n        result.push(path);\n        path = \"\";\n      }\n\n      result.push({\n        name: name || key++,\n        prefix: prefix,\n        suffix: \"\",\n        pattern: pattern || defaultPattern,\n        modifier: tryConsume(\"MODIFIER\") || \"\"\n      });\n      continue;\n    }\n\n    var value = char || tryConsume(\"ESCAPED_CHAR\");\n\n    if (value) {\n      path += value;\n      continue;\n    }\n\n    if (path) {\n      result.push(path);\n      path = \"\";\n    }\n\n    var open = tryConsume(\"OPEN\");\n\n    if (open) {\n      var prefix = consumeText();\n      var name_1 = tryConsume(\"NAME\") || \"\";\n      var pattern_1 = tryConsume(\"PATTERN\") || \"\";\n      var suffix = consumeText();\n      mustConsume(\"CLOSE\");\n      result.push({\n        name: name_1 || (pattern_1 ? key++ : \"\"),\n        pattern: name_1 && !pattern_1 ? defaultPattern : pattern_1,\n        prefix: prefix,\n        suffix: suffix,\n        modifier: tryConsume(\"MODIFIER\") || \"\"\n      });\n      continue;\n    }\n\n    mustConsume(\"END\");\n  }\n\n  return result;\n}\n/**\n * Compile a string to a template function for the path.\n */\n\nexport function compile(str, options) {\n  return tokensToFunction(parse(str, options), options);\n}\n/**\n * Expose a method for transforming tokens into the path function.\n */\n\nexport function tokensToFunction(tokens, options) {\n  if (options === void 0) {\n    options = {};\n  }\n\n  var reFlags = flags(options);\n  var _a = options.encode,\n      encode = _a === void 0 ? function (x) {\n    return x;\n  } : _a,\n      _b = options.validate,\n      validate = _b === void 0 ? true : _b; // Compile all the tokens into regexps.\n\n  var matches = tokens.map(function (token) {\n    if (typeof token === \"object\") {\n      return new RegExp(\"^(?:\".concat(token.pattern, \")$\"), reFlags);\n    }\n  });\n  return function (data) {\n    var path = \"\";\n\n    for (var i = 0; i < tokens.length; i++) {\n      var token = tokens[i];\n\n      if (typeof token === \"string\") {\n        path += token;\n        continue;\n      }\n\n      var value = data ? data[token.name] : undefined;\n      var optional = token.modifier === \"?\" || token.modifier === \"*\";\n      var repeat = token.modifier === \"*\" || token.modifier === \"+\";\n\n      if (Array.isArray(value)) {\n        if (!repeat) {\n          throw new TypeError(\"Expected \\\"\".concat(token.name, \"\\\" to not repeat, but got an array\"));\n        }\n\n        if (value.length === 0) {\n          if (optional) continue;\n          throw new TypeError(\"Expected \\\"\".concat(token.name, \"\\\" to not be empty\"));\n        }\n\n        for (var j = 0; j < value.length; j++) {\n          var segment = encode(value[j], token);\n\n          if (validate && !matches[i].test(segment)) {\n            throw new TypeError(\"Expected all \\\"\".concat(token.name, \"\\\" to match \\\"\").concat(token.pattern, \"\\\", but got \\\"\").concat(segment, \"\\\"\"));\n          }\n\n          path += token.prefix + segment + token.suffix;\n        }\n\n        continue;\n      }\n\n      if (typeof value === \"string\" || typeof value === \"number\") {\n        var segment = encode(String(value), token);\n\n        if (validate && !matches[i].test(segment)) {\n          throw new TypeError(\"Expected \\\"\".concat(token.name, \"\\\" to match \\\"\").concat(token.pattern, \"\\\", but got \\\"\").concat(segment, \"\\\"\"));\n        }\n\n        path += token.prefix + segment + token.suffix;\n        continue;\n      }\n\n      if (optional) continue;\n      var typeOfMessage = repeat ? \"an array\" : \"a string\";\n      throw new TypeError(\"Expected \\\"\".concat(token.name, \"\\\" to be \").concat(typeOfMessage));\n    }\n\n    return path;\n  };\n}\n/**\n * Create path match function from `path-to-regexp` spec.\n */\n\nexport function match(str, options) {\n  var keys = [];\n  var re = pathToRegexp(str, keys, options);\n  return regexpToFunction(re, keys, options);\n}\n/**\n * Create a path match function from `path-to-regexp` output.\n */\n\nexport function regexpToFunction(re, keys, options) {\n  if (options === void 0) {\n    options = {};\n  }\n\n  var _a = options.decode,\n      decode = _a === void 0 ? function (x) {\n    return x;\n  } : _a;\n  return function (pathname) {\n    var m = re.exec(pathname);\n    if (!m) return false;\n    var path = m[0],\n        index = m.index;\n    var params = Object.create(null);\n\n    var _loop_1 = function (i) {\n      if (m[i] === undefined) return \"continue\";\n      var key = keys[i - 1];\n\n      if (key.modifier === \"*\" || key.modifier === \"+\") {\n        params[key.name] = m[i].split(key.prefix + key.suffix).map(function (value) {\n          return decode(value, key);\n        });\n      } else {\n        params[key.name] = decode(m[i], key);\n      }\n    };\n\n    for (var i = 1; i < m.length; i++) {\n      _loop_1(i);\n    }\n\n    return {\n      path: path,\n      index: index,\n      params: params\n    };\n  };\n}\n/**\n * Escape a regular expression string.\n */\n\nfunction escapeString(str) {\n  return str.replace(/([.+*?=^!:${}()[\\]|/\\\\])/g, \"\\\\$1\");\n}\n/**\n * Get the flags for a regexp from the options.\n */\n\n\nfunction flags(options) {\n  return options && options.sensitive ? \"\" : \"i\";\n}\n/**\n * Pull out keys from a regexp.\n */\n\n\nfunction regexpToRegexp(path, keys) {\n  if (!keys) return path;\n  var groupsRegex = /\\((?:\\?<(.*?)>)?(?!\\?)/g;\n  var index = 0;\n  var execResult = groupsRegex.exec(path.source);\n\n  while (execResult) {\n    keys.push({\n      // Use parenthesized substring match if available, index otherwise\n      name: execResult[1] || index++,\n      prefix: \"\",\n      suffix: \"\",\n      modifier: \"\",\n      pattern: \"\"\n    });\n    execResult = groupsRegex.exec(path.source);\n  }\n\n  return path;\n}\n/**\n * Transform an array into a regexp.\n */\n\n\nfunction arrayToRegexp(paths, keys, options) {\n  var parts = paths.map(function (path) {\n    return pathToRegexp(path, keys, options).source;\n  });\n  return new RegExp(\"(?:\".concat(parts.join(\"|\"), \")\"), flags(options));\n}\n/**\n * Create a path regexp from string input.\n */\n\n\nfunction stringToRegexp(path, keys, options) {\n  return tokensToRegexp(parse(path, options), keys, options);\n}\n/**\n * Expose a function for taking tokens and returning a RegExp.\n */\n\n\nexport function tokensToRegexp(tokens, keys, options) {\n  if (options === void 0) {\n    options = {};\n  }\n\n  var _a = options.strict,\n      strict = _a === void 0 ? false : _a,\n      _b = options.start,\n      start = _b === void 0 ? true : _b,\n      _c = options.end,\n      end = _c === void 0 ? true : _c,\n      _d = options.encode,\n      encode = _d === void 0 ? function (x) {\n    return x;\n  } : _d,\n      _e = options.delimiter,\n      delimiter = _e === void 0 ? \"/#?\" : _e,\n      _f = options.endsWith,\n      endsWith = _f === void 0 ? \"\" : _f;\n  var endsWithRe = \"[\".concat(escapeString(endsWith), \"]|$\");\n  var delimiterRe = \"[\".concat(escapeString(delimiter), \"]\");\n  var route = start ? \"^\" : \"\"; // Iterate over the tokens and create our regexp string.\n\n  for (var _i = 0, tokens_1 = tokens; _i < tokens_1.length; _i++) {\n    var token = tokens_1[_i];\n\n    if (typeof token === \"string\") {\n      route += escapeString(encode(token));\n    } else {\n      var prefix = escapeString(encode(token.prefix));\n      var suffix = escapeString(encode(token.suffix));\n\n      if (token.pattern) {\n        if (keys) keys.push(token);\n\n        if (prefix || suffix) {\n          if (token.modifier === \"+\" || token.modifier === \"*\") {\n            var mod = token.modifier === \"*\" ? \"?\" : \"\";\n            route += \"(?:\".concat(prefix, \"((?:\").concat(token.pattern, \")(?:\").concat(suffix).concat(prefix, \"(?:\").concat(token.pattern, \"))*)\").concat(suffix, \")\").concat(mod);\n          } else {\n            route += \"(?:\".concat(prefix, \"(\").concat(token.pattern, \")\").concat(suffix, \")\").concat(token.modifier);\n          }\n        } else {\n          if (token.modifier === \"+\" || token.modifier === \"*\") {\n            route += \"((?:\".concat(token.pattern, \")\").concat(token.modifier, \")\");\n          } else {\n            route += \"(\".concat(token.pattern, \")\").concat(token.modifier);\n          }\n        }\n      } else {\n        route += \"(?:\".concat(prefix).concat(suffix, \")\").concat(token.modifier);\n      }\n    }\n  }\n\n  if (end) {\n    if (!strict) route += \"\".concat(delimiterRe, \"?\");\n    route += !options.endsWith ? \"$\" : \"(?=\".concat(endsWithRe, \")\");\n  } else {\n    var endToken = tokens[tokens.length - 1];\n    var isEndDelimited = typeof endToken === \"string\" ? delimiterRe.indexOf(endToken[endToken.length - 1]) > -1 : endToken === undefined;\n\n    if (!strict) {\n      route += \"(?:\".concat(delimiterRe, \"(?=\").concat(endsWithRe, \"))?\");\n    }\n\n    if (!isEndDelimited) {\n      route += \"(?=\".concat(delimiterRe, \"|\").concat(endsWithRe, \")\");\n    }\n  }\n\n  return new RegExp(route, flags(options));\n}\n/**\n * Normalize the given path string, returning a regular expression.\n *\n * An empty array can be passed in for the keys, which will hold the\n * placeholder key descriptions. For example, using `/user/:id`, `keys` will\n * contain `[{ name: 'id', delimiter: '/', optional: false, repeat: false }]`.\n */\n\nexport function pathToRegexp(path, keys, options) {\n  if (path instanceof RegExp) return regexpToRegexp(path, keys);\n  if (Array.isArray(path)) return arrayToRegexp(path, keys, options);\n  return stringToRegexp(path, keys, options);\n}", "class EventDispatcher {\n  /**\n   * Create instance.\n   */\n  constructor() {\n    let events = {};\n    /**\n     * Add callback to event.\n     * @param {String} name Event name.\n     * @param {Function} callback Function to call on dispatch.\n     * @param {Object} options Callback options.\n     */\n\n    this.addEventListener = (name, callback, options = null) => {\n      // Check if event name exits and callback is not already present.\n      if (!(name in events)) {\n        events[name] = [];\n      } // Add to events.\n\n\n      events[name].push({\n        callback,\n        options\n      });\n    };\n    /**\n     * Remove callback from event.\n     * @param {String} name Event name.\n     * @param {Function} callback Function that would be called.\n     */\n\n\n    this.removeEventListener = (name, callback) => {\n      // Check if event exists.\n      if (!Object.keys(events).includes(name)) {\n        return;\n      }\n\n      const eventData = events[name]; // Get index of callback in events.\n\n      let index = -1;\n\n      for (let i = 0; i < eventData.length; i++) {\n        if (eventData[i].callback === callback) {\n          index = i;\n          break;\n        }\n      }\n\n      if (index < 0) {\n        return;\n      } // Remove item from events.\n\n\n      eventData.splice(index, 1); // Remove event if list is empty.\n\n      if (Object.keys(eventData).length === 0) {\n        delete events[name];\n      }\n    };\n    /**\n     * Remove listeners to an event.\n     * @param {String} name Event name.\n     */\n\n\n    this.removeEventListeners = name => {\n      if (!name) {\n        return;\n      } // Remove all handlers with the event name.\n\n\n      delete events[name];\n    };\n    /**\n     * Remove all listeners.\n     * @param {String} name Event name.\n     */\n\n\n    this.removeAllEventListeners = () => {\n      // Remove all listeners.\n      events = {};\n    };\n    /**\n     * Trigger event and dispatch data to listeners.\n     * @param {String} name Event name.\n     * @param {Array<Any>} parameters Event parameters to pass through.\n     * @param {Object} options Dispatch options.\n     */\n\n\n    this.dispatchEvent = (name, parameters, options = null) => {\n      // Check if event exists.\n      if (!events[name]) {\n        return;\n      } // Get events by trigger name.\n\n\n      const eventData = events[name]; // Dispatch a call to each event.\n\n      for (let i = 0; i < eventData.length; i++) {\n        const event = options && options.reverse ? eventData[eventData.length - (i + 1)] : eventData[i]; // If once is truthy then remove the callback.\n\n        if (event.options && event.options.once) {\n          eventData.splice(i, 1);\n        } // Execute callback.\n\n\n        event.callback(...parameters);\n      }\n    };\n  }\n\n}\n\nexport default EventDispatcher;", "// Import external modules.\nimport { pathToRegexp } from 'path-to-regexp'; // Import event dispatcher.\n\nimport EventDispatcher from '@doars/common/src/events/EventDispatcher.js';\n\nclass Router extends EventDispatcher {\n  constructor(options = {}) {\n    super(); // Create id.\n\n    const id = Symbol('ID_ROUTER'); // Overwrite default with given options.\n\n    options = Object.assign({\n      basePath: '',\n      path: null,\n      pathToRegexp: {},\n      updateHistory: false\n    }, options);\n    let path = options.path;\n    let route = null;\n    let routes = {}; // Listen for history state changes.\n\n    const handleHistory = () => {\n      this.setPath(window.location.pathname);\n    };\n\n    if (options.updateHistory) {\n      window.addEventListener('popstate', handleHistory);\n    }\n    /**\n     * Update route.\n     * @param {String} url URL.\n     * @param {String} _path Path.\n     * @param {String} _route Route.\n     */\n\n\n    const updateRoute = (url, newPath, newRoute) => {\n      // Update stored data.\n      path = newPath;\n      route = newRoute; // Update page history if the option is set.\n\n      if (options.updateHistory) {\n        // Construct url.\n        const _url = url.includes(options.basePath) ? url : options.basePath + url; // Check if url is not current url.\n\n\n        if (_url !== window.location.pathname) {\n          // Add path to history.\n          window.history.pushState(null, window.document.title, _url);\n        }\n      } // Dispatch event on router.\n\n\n      this.dispatchEvent('changed', [this, route, path]);\n    };\n    /**\n     * Get router id.\n     * @returns {Symbol} Unique identifier.\n     */\n\n\n    this.getId = () => {\n      return id;\n    };\n    /**\n     * Get current path.\n     * @returns {String} path.\n     */\n\n\n    this.getPath = () => {\n      return path;\n    };\n    /**\n     * Get current route.\n     * @returns {String} Route.\n     */\n\n\n    this.getRoute = () => {\n      return route;\n    };\n    /**\n     * Get observed routes.\n     * @returns {Array<String>} List of routers.\n     */\n\n\n    this.getRoutes = () => {\n      return Object.keys(routes);\n    };\n    /**\n     * Destroy router instance.\n     */\n\n\n    this.destroy = () => {\n      // Stop listening to state changes.\n      if (options.updateHistory) {\n        window.removeEventListener('popstate', handleHistory);\n      }\n\n      options = null;\n      path = null;\n      route = null;\n      routes = null; // Dispatch add event.\n\n      this.dispatchEvent('destroyed', [this]); // Remove all listeners.\n\n      this.removeAllEventListeners();\n    };\n    /**\n     * Add route.\n     * @param {String} _route Route pattern.\n     */\n\n\n    this.addRoute = _route => {\n      // Convert path to regexp and store it in routes.\n      routes[_route] = pathToRegexp(_route, [], options.pathToRegexp); // Dispatch add event.\n\n      this.dispatchEvent('added', [this, _route]);\n\n      if (path) {\n        // Remove base url, if present.\n        const _path = path.replace(options.basePath, ''); // Check if current route is.\n\n\n        if (routes[_route].test(_path)) {\n          updateRoute(path, _path, _route);\n        }\n      }\n    };\n    /**\n     * Remove route.\n     * @param {String} _route Route pattern.\n     */\n\n\n    this.removeRoute = _route => {\n      // Delete route.\n      delete routes[_route]; // Dispatch removed event.\n\n      this.dispatchEvent('removed', [this, _route]);\n\n      if (route === _route) {\n        // Set current route as none.\n        path = null;\n        route = null; // Dispatch changed event.\n\n        this.dispatchEvent('changed', [this, route, path]);\n      }\n    };\n    /**\n     * Set current route.\n     * @param {String} url URL path.\n     */\n\n\n    this.setPath = url => {\n      // Remove base url, if present.\n      const newPath = url.replace(options.basePath, '');\n\n      if (path === newPath) {\n        return;\n      } // Find matching routes.\n\n\n      let newRoute = null;\n\n      for (const _route in routes) {\n        // Test route.\n        if (routes[_route].test(newPath)) {\n          newRoute = _route;\n          break;\n        }\n      } // Update route.\n\n\n      updateRoute(url, newPath, newRoute);\n    };\n  }\n\n}\n\nexport default Router;", "// Import router.\nimport Router from '../../Router.js'; // Import symbols.\n\nimport { ROUTER } from '../../symbols.js';\nexport default (routerOptions => {\n  return {\n    name: 'router',\n    update: (component, attribute, {\n      processExpression\n    }) => {\n      // Deconstruct attribute.\n      const element = attribute.getElement(); // Get router.\n\n      let router = element[ROUTER];\n\n      if (!router) {\n        // Construct options.\n        const options = Object.assign({}, routerOptions, processExpression(component, attribute.clone(), attribute.getValue())); // Create router\n\n        router = element[ROUTER] = new Router(options);\n      }\n    },\n    destroy: (component, attribute) => {\n      // Deconstruct attribute.\n      const element = attribute.getElement(); // Get router.\n\n      const router = element[ROUTER];\n\n      if (!router) {\n        return;\n      } // Remove router reference.\n\n\n      delete element[ROUTER]; // Deconstruct router.\n\n      const id = router.getId(); // Destroy router.\n\n      router.destroy(); // Deconstruct component.\n\n      const library = component.getLibrary(); // Trigger update due to changed router.\n\n      library.update([{\n        id,\n        path: ''\n      }]);\n    }\n  };\n});", "/**\n * Convert string to HTML element.\n * @param {String} string Element contents.\n * @returns {HTMLElement} HTML element part of a document fragment.\n */\nexport const fromString = string => {\n  const template = document.createElement('template');\n  template.innerHTML = string;\n  return template.content.childNodes[0];\n};\n/**\n * Inserts an element after the reference element opposite of insertBefore and more reliable then ChildNode.after()\n * @param {HTMLElement} reference Node to insert after.\n * @param {Node} node Node to insert.\n */\n\nexport const insertAfter = (reference, node) => {\n  if (reference.nextSibling) {\n    reference.parentNode.insertBefore(node, reference.nextSibling);\n  } else {\n    reference.parentNode.appendChild(node);\n  }\n};\n/**\n * Check whether two nodes are the same.\n * @param {HTMElement} a A node.\n * @param {HTMElement} b Another node.\n * @returns {Boolean} Whether the nodes are the same.\n */\n\nexport const isSame = (a, b) => {\n  if (a.isSameNode) {\n    return a.isSameNode(b);\n  }\n\n  if (a.tagName !== b.tagName) {\n    return false;\n  }\n\n  if (a.type === 3) {\n    // Text node.\n    return a.nodeValue === b.nodeValue;\n  }\n\n  return false;\n};\n/**\n * Iterate over all descendants of a given node.\n * @param {HTMLElement} element Element to walk over.\n * @param {Function} filter Filter function, return false to skip element.\n * @returns {Function} Iterator function. Call until a non-truthy value is returned.\n */\n\nexport const walk = (element, filter) => {\n  let index = -1;\n  let iterator = null;\n  return () => {\n    // First go over iterator.\n    if (index >= 0 && iterator) {\n      const child = iterator();\n\n      if (child) {\n        return child;\n      }\n    } // Get next child that passes the filter.\n\n\n    let child = null;\n\n    do {\n      index++;\n\n      if (index >= element.childElementCount) {\n        return null;\n      }\n\n      child = element.children[index];\n    } while (!filter(child)); // Setup iterator for child.\n\n\n    if (child.childElementCount) {\n      iterator = walk(child, filter);\n    } // Return the child.\n\n\n    return child;\n  };\n};\nexport default {\n  fromString,\n  insertAfter,\n  isSame,\n  walk\n};", "// Import symbols.\nimport { ROUTE } from '../symbols.js'; // Import utilities.\n\nimport closestRouter from '../utilities/closestRouter.js';\nimport { insertAfter } from '@doars/common/src/utilities/Element.js';\nexport default {\n  name: 'route',\n  update: (component, attribute, {\n    transitionIn,\n    transitionOut\n  }) => {\n    // Deconstruct attribute.\n    const element = attribute.getElement();\n    let router;\n\n    const setup = () => {\n      // Stop listening to router and remove it.\n      if (router && attribute[ROUTE]) {\n        router.removeEventListener('changed', attribute[ROUTE].handler);\n        router.removeEventListener('destroyed', attribute[ROUTE].setup);\n        delete attribute[ROUTE];\n      } // Get closest router in parent nodes.\n\n\n      router = closestRouter(element);\n\n      if (!router) {\n        console.warn('DoarsRouter: Router not found for route.');\n        return;\n      } // Setup route data.\n\n\n      attribute[ROUTE] = {\n        setup\n      }; // Deconstruct attribute.\n\n      const value = attribute.getValue(); // Add route to router.\n\n      router.addRoute(value); // Handle router changes.\n\n      const handleChange = (router, route) => {\n        if (route !== value) {\n          if (element.tagName === 'TEMPLATE') {\n            if (attribute[ROUTE] && attribute[ROUTE].element) {\n              // Transition out.\n              const routeElement = attribute[ROUTE].element;\n              transitionOut(component, routeElement, () => {\n                // Remove node.\n                routeElement.remove();\n                attribute[ROUTE].element = undefined;\n              });\n            }\n          } else {\n            // Transition out and set display none.\n            transitionOut(component, element, () => {\n              element.style.display = 'none';\n            });\n          }\n        } else if (element.tagName === 'TEMPLATE') {\n          // Create new element from template.\n          const templateInstance = document.importNode(element.content, true); // Add element after the template element.\n\n          insertAfter(element, templateInstance); // Get HTMLElement reference instead of DocumentFragment.\n\n          attribute[ROUTE].element = element.nextSibling; // Transition in.\n\n          transitionIn(component, attribute[ROUTE].element);\n        } else {\n          // Remove display none.\n          element.style.display = null; // Transition in.\n\n          transitionIn(component, element);\n        }\n      };\n\n      attribute[ROUTE].handler = handleChange; // Listen to router changes and perform initial run.\n\n      router.addEventListener('changed', handleChange);\n      handleChange(router, router.getRoute()); // If the router is destroyed look for another\n\n      router.addEventListener('destroyed', setup);\n    }; // Perform initial setup.\n\n\n    setup();\n  },\n  destroy: (component, attribute, {\n    transitionOut\n  }) => {\n    // Deconstruct attribute.\n    const element = attribute.getElement();\n\n    if (element.tagName === 'TEMPLATE') {\n      if (attribute[ROUTE] && attribute[ROUTE].element) {\n        // Transition out.\n        const routeElement = attribute[ROUTE].element;\n        transitionOut(component, routeElement, () => {\n          // Remove node.\n          routeElement.remove();\n          attribute[ROUTE].element = undefined;\n        });\n      }\n    } else {\n      // Transition out and set display none.\n      transitionOut(component, element, () => {\n        element.style.display = 'none';\n      });\n    } // Get closest router in parent nodes.\n\n\n    const router = closestRouter(element);\n\n    if (!router) {\n      return;\n    } // Remove router listeners.\n\n\n    if (attribute[ROUTE]) {\n      router.removeEventListener('destroyed', attribute[ROUTE].setup);\n\n      if (attribute[ROUTE].handler) {\n        router.removeEventListener('change', attribute[ROUTE].handler);\n      }\n    }\n  }\n};", "// Import symbols.\nimport { ROUTE_TO } from '../symbols.js'; // Import utilities.\n\nimport closestRouter from '../utilities/closestRouter.js';\nconst CLICK = 'click';\nexport default {\n  name: 'route-to',\n  update: (component, attribute) => {\n    const element = attribute.getElement();\n    const modifiers = attribute.getModifiers();\n    const value = attribute.getValue(); // Check for existing data.\n\n    if (attribute[ROUTE_TO]) {\n      // Exit early if listener has not changed.\n      if (attribute[ROUTE_TO].value === value) {\n        return;\n      } // Remove existing listeners so we don't listen twice.\n\n\n      attribute[ROUTE_TO].target.removeEventListener(CLICK, attribute[ROUTE_TO].handler);\n    }\n\n    const handler = event => {\n      if (modifiers.self && event.target !== element) {\n        return;\n      }\n\n      if (modifiers.prevent) {\n        event.preventDefault();\n      }\n\n      if (modifiers.stop) {\n        event.stopPropagation();\n      }\n\n      const router = closestRouter(element);\n\n      if (!router) {\n        return;\n      }\n\n      router.setPath(value);\n    }; // Listen to click and keyboard events.\n\n\n    element.addEventListener(CLICK, handler); // Store listener data on the component.\n\n    attribute[ROUTE_TO] = {\n      handler,\n      value\n    };\n  },\n  destroy: (component, attribute) => {\n    if (!attribute[ROUTE_TO]) {\n      return;\n    }\n\n    const element = attribute.getElement();\n    element.removeEventListener(CLICK, attribute[ROUTE_TO].handler);\n    delete attribute[ROUTE_TO];\n  }\n};", "/**\n * Deeply assign a series of objects properties together.\n * @param {Object} target Target object to merge to.\n * @param  {...Object} sources Objects to merge into the target.\n */\nexport const deepAssign = (target, ...sources) => {\n  if (!sources.length) {\n    return target;\n  }\n\n  const source = sources.shift();\n\n  if (isObject(target) && isObject(source)) {\n    for (const key in source) {\n      if (isObject(source[key])) {\n        if (!target[key]) {\n          Object.assign(target, {\n            [key]: {}\n          });\n        }\n\n        deepAssign(target[key], source[key]);\n      } else if (Array.isArray(source[key])) {\n        target[key] = source[key].map(value => {\n          if (isObject(value)) {\n            return deepAssign({}, value);\n          }\n\n          return value;\n        });\n      } else {\n        Object.assign(target, {\n          [key]: source[key]\n        });\n      }\n    }\n  }\n\n  return deepAssign(target, ...sources);\n};\n/**\n * Get value at path on object.\n * @param {Object} object Object to get from.\n * @param  {Array<String>} path Path to value.\n * @returns {Any} value at path.\n */\n\nexport const getDeeply = (object, path) => {\n  let objectTemp = object;\n  let i = 0;\n\n  for (; i < path.length - 1; i++) {\n    objectTemp = objectTemp[path[i]];\n  }\n\n  return objectTemp[path[i]];\n};\n/**\n * Check whether the value is an object.\n * @param {Any} value Value of unknown type.\n * @returns Whether the value is an object.\n */\n\nexport const isObject = value => {\n  return value && typeof value === 'object' && !Array.isArray(value);\n};\n/**\n * Set value on path at object.\n * @param {Object} object Object to set on.\n * @param {Array<String>} path Path to value.\n * @param {Any} value Value to set.\n */\n\nexport const setDeeply = (object, path, value) => {\n  // Exit early if not an object.\n  if (typeof object !== 'object') {\n    return;\n  }\n\n  let i = 0;\n\n  for (; i < path.length - 1; i++) {\n    object = object[path[i]]; // Exit early if not an object.\n\n    if (typeof object !== 'object') {\n      return;\n    }\n  }\n\n  object[path[i]] = value;\n};\nexport default {\n  deepAssign,\n  getDeeply,\n  isObject,\n  setDeeply\n};", "// Import contexts.\nimport contextRouter from './contexts/router.js'; // Import directives.\n\nimport createDirectiveRouter from './factories/directives/router.js';\nimport directiveRoute from './directives/route.js';\nimport directiveRouteTo from './directives/routeTo.js'; // Import utilities.\n\nimport { deepAssign } from '@doars/common/src/utilities/Object.js';\n/**\n * Create plugin instance.\n * @param {Doars} library Doars instance to add onto.\n * @param {Object} options The plugin options.\n */\n\nexport default function (library, options = null) {\n  // Clone options.\n  options = deepAssign({}, options); // Set private variables.\n\n  let isEnabled = false;\n  let directiveRouter;\n\n  const onEnable = function () {\n    // Add contexts and directives.\n    library.addContexts(0, contextRouter);\n    directiveRouter = createDirectiveRouter(options);\n    library.addDirectives(-1, directiveRouter, directiveRoute, directiveRouteTo);\n  };\n\n  const onDisable = function () {\n    // Remove contexts and directives.\n    library.removeContexts(contextRouter);\n    library.removeDirectives(directiveRouter, directiveRoute, directiveRouteTo);\n    directiveRouter = null;\n  };\n\n  this.disable = function () {\n    // Check if library is disabled.\n    if (!library.getEnabled() && isEnabled) {\n      isEnabled = false; // Stop listening to enable state of the library.\n\n      library.removeEventListener('enabling', onEnable);\n      library.removeEventListener('disabling', onDisable);\n    }\n  };\n\n  this.enable = function () {\n    if (!isEnabled) {\n      isEnabled = true; // Listen to enable state of the library.\n\n      library.addEventListener('enabling', onEnable);\n      library.addEventListener('disabling', onDisable);\n    }\n  }; // Automatically enable plugin.\n\n\n  this.enable();\n}"],
  "mappings": "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",
  "names": ["value", "_a", "result", "router_default", "router", "router_default"]
}
