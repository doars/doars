{"version":3,"file":"doars-alias.iife.js","sources":["../../doars/src/utils/ObjectUtils.js","../src/DoarsAlias.js"],"sourcesContent":["/**\n * Deeply assign a series of objects properties together.\n * @param {Object} target Target object to merge to.\n * @param  {...Object} sources Objects to merge into the target.\n */\nexport const deepAssign = (target, ...sources) => {\n  if (!sources.length) {\n    return target\n  }\n  const source = sources.shift()\n\n  if (isObject(target) && isObject(source)) {\n    for (const key in source) {\n      if (isObject(source[key])) {\n        if (!target[key]) {\n          Object.assign(target, {\n            [key]: {},\n          })\n        }\n        deepAssign(target[key], source[key])\n      } else if (Array.isArray(source[key])) {\n        target[key] = source[key].map((value) => {\n          if (isObject(value)) {\n            return deepAssign({}, value)\n          }\n          return value\n        })\n      } else {\n        Object.assign(target, {\n          [key]: source[key],\n        })\n      }\n    }\n  }\n\n  return deepAssign(target, ...sources)\n}\n\n/**\n * Get value at path on object.\n * @param {Object} object Object to get from.\n * @param  {Array<String>} path Path to value.\n * @returns {Any} value at path.\n */\nexport const get = (object, path) => {\n  let objectTemp = object\n  let i = 0\n  for (; i < path.length - 1; i++) {\n    objectTemp = objectTemp[path[i]]\n  }\n  return objectTemp[path[i]]\n}\n\n/**\n * Check whether the value is an object.\n * @param {Any} value Value of unknown type.\n * @returns Whether the value is an object.\n */\nexport const isObject = (value) => {\n  return (value && typeof value === 'object' && !Array.isArray(value))\n}\n\n/**\n * Set value on path at object.\n * @param {Object} object Object to set on.\n * @param {Array<String>} path Path to value.\n * @param {Any} value Value to set.\n */\nexport const set = (object, path, value) => {\n  // Exit early if not an object.\n  if (typeof (object) !== 'object') {\n    return\n  }\n\n  let i = 0\n  for (; i < path.length - 1; i++) {\n    object = object[path[i]]\n\n    // Exit early if not an object.\n    if (typeof (object) !== 'object') {\n      return\n    }\n  }\n  object[path[i]] = value\n}\n\nexport default {\n  deepAssign: deepAssign,\n  get: get,\n  isObject: isObject,\n  set: set,\n}\n","// Import utils.\nimport { deepAssign } from '@doars/doars/src/utils/ObjectUtils.js'\n\nexport default class DoarsAlias {\n  /**\n   * Create plugin instance.\n   * @param {Doars} library Doars instance to add onto.\n   * @param {Object} options The plugin options.\n   */\n  constructor(library, options = null) {\n    // Clone options.\n    options = deepAssign({}, options)\n\n    // Store changes made to contexts and directives.\n    let contextAliases, contextsRenamed, directiveAliases, directivesRenamed\n\n    // Enable plugin when library is enabling.\n    library.addEventListener('enabling', () => {\n      if (options.aliasContexts || options.renameContexts) {\n        // Store insert offset so aliases are added directly after the original.\n        let insertOffset = 1\n\n        // Iterate over all contexts.\n        const contexts = library.getContexts()\n        for (let i = contexts.length - 1; i >= 0; i--) {\n          const context = contexts[i]\n\n          if (options.renameContexts) {\n            const rename = options.renameContexts[context.name]\n            if (rename) {\n              if (!/^[_$a-z]{1}[_$a-z0-9]{0,}$/i.test(rename)) {\n                console.error('Invalid rename name for context.')\n              } else {\n                if (!contextsRenamed) {\n                  contextsRenamed = {}\n                }\n\n                // Store previous name.\n                contextsRenamed[rename] = context.name\n                // Set new name.\n                context.name = rename\n              }\n            }\n          }\n\n          if (options.aliasContexts) {\n            const aliases = options.aliasContexts[context.name]\n            if (aliases) {\n              if (!contextAliases) {\n                contextAliases = []\n              }\n\n              if (Array.isArray(aliases)) {\n                let inertCount = 0\n                for (const alias of aliases) {\n                  if (!/^[_$a-z]{1}[_$a-z0-9]{0,}$/i.test(alias)) {\n                    console.error('Invalid aliases name for context.')\n                    continue\n                  }\n\n                  // Create context alias.\n                  const contextAlias = Object.assign({}, context)\n                  contextAlias.name = alias\n                  // Disable deconstruction of aliases.\n                  contextAlias.deconstruct = false\n\n                  // Add context alias to lists.\n                  contextAliases.push(contextAlias)\n                  inertCount++\n                }\n                // Add new aliases to library.\n                library.addContexts(i + insertOffset, ...contextAliases.slice(insertOffset - 1))\n\n                // Increment insertion offset by amount of aliases added.\n                insertOffset += inertCount\n              } else if (!/^[_$a-z]{1}[_$a-z0-9]{0,}$/i.test(aliases)) {\n                console.error('Invalid alias name for context.')\n              } else {\n                // Create context alias.\n                const contextAlias = Object.assign({}, context)\n                contextAlias.name = aliases\n                // Disable deconstruction of aliases.\n                contextAlias.deconstruct = false\n\n                // Add alias to library.\n                library.addContexts(i + insertOffset, contextAlias)\n\n                // Increment insertion offset.\n                insertOffset++\n              }\n            }\n          }\n        }\n      }\n\n      if (options.aliasDirectives || options.renameDirectives) {\n        // Store insert offset so aliases are added directly after the original.\n        let insertOffset = 1\n\n        // Iterate over all directives.\n        const directives = library.getDirectives()\n        for (let i = directives.length - 1; i >= 0; i--) {\n          const directive = directives[i]\n\n          if (options.renameDirectives) {\n            const rename = options.renameDirectives[directive.name]\n            if (rename) {\n              if (!/^[_\\-$a-z]{1}[_\\-$a-z0-9]{0,}$/i.test(rename)) {\n                console.error('Invalid rename name for directive.')\n              } else {\n                if (!directivesRenamed) {\n                  directivesRenamed = {}\n                }\n\n                // Store previous name.\n                directivesRenamed[rename] = directive.name\n                // Set new name.\n                directive.name = rename\n              }\n            }\n          }\n\n          if (options.aliasDirectives) {\n            const aliases = options.aliasDirectives[directive.name]\n            if (aliases) {\n              if (!directiveAliases) {\n                directiveAliases = []\n              }\n\n              if (Array.isArray(aliases)) {\n                let inertCount = 0\n                for (const alias of aliases) {\n                  if (!/^[_\\-$a-z]{1}[_\\-$a-z0-9]{0,}$/i.test(alias)) {\n                    console.error('Invalid aliases name for directive.')\n                    continue\n                  }\n\n                  // Create directive alias.\n                  const directiveAlias = Object.assign({}, directive)\n                  directiveAlias.name = alias\n\n                  // Add directive alias to lists.\n                  directiveAliases.push(directiveAlias)\n                  inertCount++\n                }\n                // Add new aliases to library.\n                library.addDirectives(i + insertOffset, ...directiveAliases.slice(insertOffset - 1))\n\n                // Increment insertion offset by amount of aliases added.\n                insertOffset += inertCount\n              } else if (!/^[_\\-$a-z]{1}[_\\-$a-z0-9]{0,}$/i.test(aliases)) {\n                console.error('Invalid alias name for directive.')\n              } else {\n                // Create directive alias.\n                const directiveAlias = Object.assign({}, directive)\n                directiveAlias.name = aliases\n\n                // Add alias to library.\n                library.addDirectives(i + insertOffset, directiveAlias)\n\n                // Increment insertion offset.\n                insertOffset++\n              }\n            }\n          }\n        }\n      }\n    })\n\n    // Disable plugin when library is disabling.\n    library.addEventListener('disabling', () => {\n      // Remove directive aliases first.\n      if (directiveAliases) {\n        library.removeDirectives(...directiveAliases)\n\n        // Forget aliases.\n        directiveAliases = null\n      }\n\n      // Undo name changes to directives.\n      if (directivesRenamed) {\n        // Iterate over all directives.\n        const directives = library.getDirectives()\n        for (let i = directives.length - 1; i >= 0; i--) {\n          const directive = directives.length[i]\n\n          // Check if directive has been renamed.\n          if (directive.name in directivesRenamed) {\n            // Set old name.\n            directive.name = directivesRenamed[directive.name]\n          }\n        }\n\n        // Forget renames.\n        directivesRenamed = null\n      }\n\n      // Remove context aliases first.\n      if (contextAliases) {\n        library.removeContexts(...contextAliases)\n\n        // Forget aliases.\n        contextAliases = null\n      }\n\n      // Undo name changes to contexts.\n      if (contextsRenamed) {\n        // Iterate over all contexts.\n        const contexts = library.getContexts()\n        for (let i = contexts.length - 1; i >= 0; i--) {\n          const context = contexts.length[i]\n\n          // Check if context has been renamed.\n          if (context.name in contextsRenamed) {\n            // Set old name.\n            context.name = contextsRenamed[context.name]\n          }\n        }\n\n        // Forget renames.\n        contextsRenamed = null\n      }\n    })\n  }\n}\n"],"names":["deepAssign","target","sources","length","source","shift","isObject","key","Object","assign","Array","isArray","map","value","DoarsAlias","library","options","contextAliases","contextsRenamed","directiveAliases","directivesRenamed","addEventListener","aliasContexts","renameContexts","insertOffset","contexts","getContexts","i","context","rename","name","test","console","error","aliases","inertCount","alias","contextAlias","deconstruct","push","addContexts","slice","aliasDirectives","renameDirectives","directives","getDirectives","directive","directiveAlias","addDirectives","removeDirectives","removeContexts"],"mappings":"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"}