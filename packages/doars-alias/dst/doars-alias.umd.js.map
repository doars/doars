{"version":3,"file":"doars-alias.umd.js","sources":["../../utils/src/ObjectUtils.js","../src/DoarsAlias.js"],"sourcesContent":["/**\n * Deeply assign a series of objects properties together.\n * @param {Object} target Target object to merge to.\n * @param  {...Object} sources Objects to merge into the target.\n */\nexport const deepAssign = (target, ...sources) => {\n  if (!sources.length) {\n    return target\n  }\n  const source = sources.shift()\n\n  if (isObject(target) && isObject(source)) {\n    for (const key in source) {\n      if (isObject(source[key])) {\n        if (!target[key]) {\n          Object.assign(target, {\n            [key]: {},\n          })\n        }\n        deepAssign(target[key], source[key])\n      } else if (Array.isArray(source[key])) {\n        target[key] = source[key].map((value) => {\n          if (isObject(value)) {\n            return deepAssign({}, value)\n          }\n          return value\n        })\n      } else {\n        Object.assign(target, {\n          [key]: source[key],\n        })\n      }\n    }\n  }\n\n  return deepAssign(target, ...sources)\n}\n\n/**\n * Get value at path on object.\n * @param {Object} object Object to get from.\n * @param  {Array<String>} path Path to value.\n * @returns {Any} value at path.\n */\nexport const get = (object, path) => {\n  let objectTemp = object\n  let i = 0\n  for (; i < path.length - 1; i++) {\n    objectTemp = objectTemp[path[i]]\n  }\n  return objectTemp[path[i]]\n}\n\n/**\n * Check whether the value is an object.\n * @param {Any} value Value of unknown type.\n * @returns Whether the value is an object.\n */\nexport const isObject = (value) => {\n  return (value && typeof value === 'object' && !Array.isArray(value))\n}\n\n/**\n * Set value on path at object.\n * @param {Object} object Object to set on.\n * @param {Array<String>} path Path to value.\n * @param {Any} value Value to set.\n */\nexport const set = (object, path, value) => {\n  // Exit early if not an object.\n  if (typeof (object) !== 'object') {\n    return\n  }\n\n  let i = 0\n  for (; i < path.length - 1; i++) {\n    object = object[path[i]]\n\n    // Exit early if not an object.\n    if (typeof (object) !== 'object') {\n      return\n    }\n  }\n  object[path[i]] = value\n}\n\nexport default {\n  deepAssign: deepAssign,\n  get: get,\n  isObject: isObject,\n  set: set,\n}\n","// Import utils.\nimport { deepAssign } from '@doars/utils/src/ObjectUtils.js'\n\nexport default class DoarsAlias {\n  /**\n   * Create plugin instance.\n   * @param {Doars} library Doars instance to add onto.\n   * @param {Object} options The plugin options.\n   */\n  constructor(library, options = null) {\n    // Clone options.\n    options = deepAssign({}, options)\n\n    // Store changes made to contexts and directives.\n    let contextAliases, contextsRenamed, directiveAliases, directivesRenamed\n\n    // Enable plugin when library is enabling.\n    library.addEventListener('enabling', () => {\n      if (options.aliasContexts || options.renameContexts) {\n        // Store insert offset so aliases are added directly after the original.\n        let insertOffset = 1\n\n        // Iterate over all contexts.\n        const contexts = library.getContexts()\n        for (let i = contexts.length - 1; i >= 0; i--) {\n          const context = contexts[i]\n\n          if (options.renameContexts) {\n            const rename = options.renameContexts[context.name]\n            if (rename) {\n              if (!/^[_$a-z]{1}[_$a-z0-9]{0,}$/i.test(rename)) {\n                console.error('Invalid rename name for context.')\n              } else {\n                if (!contextsRenamed) {\n                  contextsRenamed = {}\n                }\n\n                // Store previous name.\n                contextsRenamed[rename] = context.name\n                // Set new name.\n                context.name = rename\n              }\n            }\n          }\n\n          if (options.aliasContexts) {\n            const aliases = options.aliasContexts[context.name]\n            if (aliases) {\n              if (!contextAliases) {\n                contextAliases = []\n              }\n\n              if (Array.isArray(aliases)) {\n                let inertCount = 0\n                for (const alias of aliases) {\n                  if (!/^[_$a-z]{1}[_$a-z0-9]{0,}$/i.test(alias)) {\n                    console.error('Invalid aliases name for context.')\n                    continue\n                  }\n\n                  // Create context alias.\n                  const contextAlias = Object.assign({}, context)\n                  contextAlias.name = alias\n                  // Disable deconstruction of aliases.\n                  contextAlias.deconstruct = false\n\n                  // Add context alias to lists.\n                  contextAliases.push(contextAlias)\n                  inertCount++\n                }\n                // Add new aliases to library.\n                library.addContexts(i + insertOffset, ...contextAliases.slice(insertOffset - 1))\n\n                // Increment insertion offset by amount of aliases added.\n                insertOffset += inertCount\n              } else if (!/^[_$a-z]{1}[_$a-z0-9]{0,}$/i.test(aliases)) {\n                console.error('Invalid alias name for context.')\n              } else {\n                // Create context alias.\n                const contextAlias = Object.assign({}, context)\n                contextAlias.name = aliases\n                // Disable deconstruction of aliases.\n                contextAlias.deconstruct = false\n\n                // Add alias to library.\n                library.addContexts(i + insertOffset, contextAlias)\n\n                // Increment insertion offset.\n                insertOffset++\n              }\n            }\n          }\n        }\n      }\n\n      if (options.aliasDirectives || options.renameDirectives) {\n        // Store insert offset so aliases are added directly after the original.\n        let insertOffset = 1\n\n        // Iterate over all directives.\n        const directives = library.getDirectives()\n        for (let i = directives.length - 1; i >= 0; i--) {\n          const directive = directives[i]\n\n          if (options.renameDirectives) {\n            const rename = options.renameDirectives[directive.name]\n            if (rename) {\n              if (!/^[_\\-$a-z]{1}[_\\-$a-z0-9]{0,}$/i.test(rename)) {\n                console.error('Invalid rename name for directive.')\n              } else {\n                if (!directivesRenamed) {\n                  directivesRenamed = {}\n                }\n\n                // Store previous name.\n                directivesRenamed[rename] = directive.name\n                // Set new name.\n                directive.name = rename\n              }\n            }\n          }\n\n          if (options.aliasDirectives) {\n            const aliases = options.aliasDirectives[directive.name]\n            if (aliases) {\n              if (!directiveAliases) {\n                directiveAliases = []\n              }\n\n              if (Array.isArray(aliases)) {\n                let inertCount = 0\n                for (const alias of aliases) {\n                  if (!/^[_\\-$a-z]{1}[_\\-$a-z0-9]{0,}$/i.test(alias)) {\n                    console.error('Invalid aliases name for directive.')\n                    continue\n                  }\n\n                  // Create directive alias.\n                  const directiveAlias = Object.assign({}, directive)\n                  directiveAlias.name = alias\n\n                  // Add directive alias to lists.\n                  directiveAliases.push(directiveAlias)\n                  inertCount++\n                }\n                // Add new aliases to library.\n                library.addDirectives(i + insertOffset, ...directiveAliases.slice(insertOffset - 1))\n\n                // Increment insertion offset by amount of aliases added.\n                insertOffset += inertCount\n              } else if (!/^[_\\-$a-z]{1}[_\\-$a-z0-9]{0,}$/i.test(aliases)) {\n                console.error('Invalid alias name for directive.')\n              } else {\n                // Create directive alias.\n                const directiveAlias = Object.assign({}, directive)\n                directiveAlias.name = aliases\n\n                // Add alias to library.\n                library.addDirectives(i + insertOffset, directiveAlias)\n\n                // Increment insertion offset.\n                insertOffset++\n              }\n            }\n          }\n        }\n      }\n    })\n\n    // Disable plugin when library is disabling.\n    library.addEventListener('disabling', () => {\n      // Remove directive aliases first.\n      if (directiveAliases) {\n        library.removeDirectives(...directiveAliases)\n\n        // Forget aliases.\n        directiveAliases = null\n      }\n\n      // Undo name changes to directives.\n      if (directivesRenamed) {\n        // Iterate over all directives.\n        const directives = library.getDirectives()\n        for (let i = directives.length - 1; i >= 0; i--) {\n          const directive = directives.length[i]\n\n          // Check if directive has been renamed.\n          if (directive.name in directivesRenamed) {\n            // Set old name.\n            directive.name = directivesRenamed[directive.name]\n          }\n        }\n\n        // Forget renames.\n        directivesRenamed = null\n      }\n\n      // Remove context aliases first.\n      if (contextAliases) {\n        library.removeContexts(...contextAliases)\n\n        // Forget aliases.\n        contextAliases = null\n      }\n\n      // Undo name changes to contexts.\n      if (contextsRenamed) {\n        // Iterate over all contexts.\n        const contexts = library.getContexts()\n        for (let i = contexts.length - 1; i >= 0; i--) {\n          const context = contexts.length[i]\n\n          // Check if context has been renamed.\n          if (context.name in contextsRenamed) {\n            // Set old name.\n            context.name = contextsRenamed[context.name]\n          }\n        }\n\n        // Forget renames.\n        contextsRenamed = null\n      }\n    })\n  }\n}\n"],"names":["deepAssign","target","sources","length","source","shift","isObject","key","Object","assign","Array","isArray","map","value","DoarsAlias","library","options","contextAliases","contextsRenamed","directiveAliases","directivesRenamed","addEventListener","aliasContexts","renameContexts","insertOffset","contexts","getContexts","i","context","rename","name","test","console","error","aliases","inertCount","alias","contextAlias","deconstruct","push","addContexts","slice","aliasDirectives","renameDirectives","directives","getDirectives","directive","directiveAlias","addDirectives","removeDirectives","removeContexts"],"mappings":"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"}