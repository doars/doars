(()=>{var g=(r,...a)=>{if(!a.length)return r;let e=a.shift();if(u(r)&&u(e))for(let i in e)u(e[i])?(r[i]||Object.assign(r,{[i]:{}}),g(r[i],e[i])):Array.isArray(e[i])?r[i]=e[i].map(f=>u(f)?g({},f):f):Object.assign(r,{[i]:e[i]});return g(r,...a)};var u=r=>r&&typeof r=="object"&&!Array.isArray(r);var $=class{constructor(a,e=null){e=g({},e);let i,f,m,d;a.addEventListener("enabling",()=>{if(e.aliasContexts||e.renameContexts){let s=1,c=a.getContexts();for(let n=c.length-1;n>=0;n--){let o=c[n];if(e.renameContexts){let t=e.renameContexts[o.name];t&&(/^[_$a-z]{1}[_$a-z0-9]{0,}$/i.test(t)?(f||(f={}),f[t]=o.name,o.name=t):console.error("Invalid rename name for context."))}if(e.aliasContexts){let t=e.aliasContexts[o.name];if(t)if(i||(i=[]),Array.isArray(t)){let l=0;for(let x of t){if(!/^[_$a-z]{1}[_$a-z0-9]{0,}$/i.test(x)){console.error("Invalid aliases name for context.");continue}let v=Object.assign({},o);v.name=x,v.deconstruct=!1,i.push(v),l++}a.addContexts(n+s,...i.slice(s-1)),s+=l}else if(!/^[_$a-z]{1}[_$a-z0-9]{0,}$/i.test(t))console.error("Invalid alias name for context.");else{let l=Object.assign({},o);l.name=t,l.deconstruct=!1,a.addContexts(n+s,l),s++}}}}if(e.aliasDirectives||e.renameDirectives){let s=1,c=a.getDirectives();for(let n=c.length-1;n>=0;n--){let o=c[n];if(e.renameDirectives){let t=e.renameDirectives[o.name];t&&(/^[_\-$a-z]{1}[_\-$a-z0-9]{0,}$/i.test(t)?(d||(d={}),d[t]=o.name,o.name=t):console.error("Invalid rename name for directive."))}if(e.aliasDirectives){let t=e.aliasDirectives[o.name];if(t)if(m||(m=[]),Array.isArray(t)){let l=0;for(let x of t){if(!/^[_\-$a-z]{1}[_\-$a-z0-9]{0,}$/i.test(x)){console.error("Invalid aliases name for directive.");continue}let v=Object.assign({},o);v.name=x,m.push(v),l++}a.addDirectives(n+s,...m.slice(s-1)),s+=l}else if(!/^[_\-$a-z]{1}[_\-$a-z0-9]{0,}$/i.test(t))console.error("Invalid alias name for directive.");else{let l=Object.assign({},o);l.name=t,a.addDirectives(n+s,l),s++}}}}}),a.addEventListener("disabling",()=>{if(m&&(a.removeDirectives(...m),m=null),d){let s=a.getDirectives();for(let c=s.length-1;c>=0;c--){let n=s.length[c];n.name in d&&(n.name=d[n.name])}d=null}if(i&&(a.removeContexts(...i),i=null),f){let s=a.getContexts();for(let c=s.length-1;c>=0;c--){let n=s.length[c];n.name in f&&(n.name=f[n.name])}f=null}})}};})();
//# sourceMappingURL=doars-alias.iife.min.js.map
