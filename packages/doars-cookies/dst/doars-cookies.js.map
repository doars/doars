{
  "version": 3,
  "sources": ["../../common/src/factories/createStateContext.js", "../src/factories/contexts/cookies.js", "../../common/src/polyfills/RevocableProxy.js", "../../common/src/events/EventDispatcher.js", "../../common/src/events/ProxyDispatcher.js", "../src/utilities/cookies.js", "../src/DoarsCookies.js"],
  "sourcesContent": ["export default (\n  name,\n  id,\n  state,\n  proxy,\n  deconstruct,\n) => ({\n  deconstruct,\n\n  name,\n\n  create: (\n    component,\n    attribute,\n    update, {\n      RevocableProxy,\n    },\n  ) => {\n    // Create event handlers.\n    const onDelete = (\n      target,\n      path,\n    ) => update(id, name + '.' + path.join('.'))\n    const onGet = (\n      target,\n      path,\n    ) => attribute.accessed(id, name + '.' + path.join('.'))\n    const onSet = (\n      target,\n      path,\n    ) => update(id, name + '.' + path.join('.'))\n\n    // Add event listeners.\n    proxy.addEventListener('delete', onDelete)\n    proxy.addEventListener('get', onGet)\n    proxy.addEventListener('set', onSet)\n\n    // Wrap in a revocable proxy.\n    const revocable = RevocableProxy(state, {})\n\n    return {\n      value: revocable.proxy,\n\n      // Remove event listeners.\n      destroy: (\n      ) => {\n        proxy.removeEventListener('delete', onDelete)\n        proxy.removeEventListener('get', onGet)\n        proxy.removeEventListener('set', onSet)\n\n        // Revoke access to state.\n        revocable.revoke()\n      },\n    }\n  },\n})\n", "import createStateContext from '@doars/common/src/factories/createStateContext.js'\n\nexport default (\n  id,\n  state,\n  proxy,\n  deconstruct,\n) => createStateContext(\n  '$cookies',\n  id,\n  state,\n  proxy,\n  deconstruct,\n)\n", "// List of methods to revoke access to.\nconst REFLECTION_METHODS = [\n  'apply',\n  'construct',\n  'defineProperty',\n  'deleteProperty',\n  'get',\n  'getOwnPropertyDescriptor',\n  'getPrototypeOf',\n  'isExtensible',\n  'ownKeys',\n  'preventExtensions',\n  'set',\n  'setPrototypeOf',\n]\n\n/**\n * Revocable proxy made using regular a proxy and a simple boolean.\n */\nexport default (\n  target,\n  handler,\n) => {\n  // Keep track of status.\n  let revoked = false\n\n  // Add revocable handlers for each given handlers.\n  const revocableHandler = {}\n  for (const key of REFLECTION_METHODS) {\n    revocableHandler[key] = (...parameters) => {\n      if (revoked) {\n        console.error('proxy revoked')\n        return\n      }\n\n      if (key in handler) {\n        return handler[key](...parameters)\n      }\n      return Reflect[key](...parameters)\n    }\n  }\n\n  // Return proxy and revoke method.\n  return {\n    proxy: new Proxy(target, revocableHandler),\n    revoke: () => {\n      revoked = true\n    },\n  }\n}\n", "export default class EventDispatcher {\n  /**\n   * Create instance.\n   */\n  constructor(\n  ) {\n    let events = {}\n\n    /**\n     * Add callback to event.\n     * @param {String} name Event name.\n     * @param {Function} callback Function to call on dispatch.\n     * @param {Object} options Callback options.\n     */\n    this.addEventListener = (\n      name,\n      callback,\n      options = null,\n    ) => {\n      // Check if event name exits and callback is not already present.\n      if (!(name in events)) {\n        events[name] = []\n      }\n\n      // Add to events.\n      events[name].push({\n        callback,\n        options,\n      })\n    }\n\n    /**\n     * Remove callback from event.\n     * @param {String} name Event name.\n     * @param {Function} callback Function that would be called.\n     */\n    this.removeEventListener = (\n      name,\n      callback,\n    ) => {\n      // Check if event exists.\n      if (!Object.keys(events).includes(name)) {\n        return\n      }\n      const eventData = events[name]\n\n      // Get index of callback in events.\n      let index = -1\n      for (let i = 0; i < eventData.length; i++) {\n        if (eventData[i].callback === callback) {\n          index = i\n          break\n        }\n      }\n      if (index < 0) {\n        return\n      }\n\n      // Remove item from events.\n      eventData.splice(index, 1)\n\n      // Remove event if list is empty.\n      if (Object.keys(eventData).length === 0) {\n        delete events[name]\n      }\n    }\n\n    /**\n     * Remove listeners to an event.\n     * @param {String} name Event name.\n     */\n    this.removeEventListeners = (\n      name,\n    ) => {\n      if (!name) {\n        return\n      }\n\n      // Remove all handlers with the event name.\n      delete events[name]\n    }\n\n    /**\n     * Remove all listeners.\n     * @param {String} name Event name.\n     */\n    this.removeAllEventListeners = (\n    ) => {\n      // Remove all listeners.\n      events = {}\n    }\n\n    /**\n     * Trigger event and dispatch data to listeners.\n     * @param {String} name Event name.\n     * @param {Array<Any>} parameters Event parameters to pass through.\n     * @param {Object} options Dispatch options.\n     */\n    this.dispatchEvent = (\n      name,\n      parameters,\n      options = null,\n    ) => {\n      // Check if event exists.\n      if (!events[name]) {\n        return\n      }\n      // Get events by trigger name.\n      const eventData = events[name]\n\n      // Dispatch a call to each event.\n      for (let i = 0; i < eventData.length; i++) {\n        const event = (options && options.reverse) ? eventData[eventData.length - (i + 1)] : eventData[i]\n\n        // If once is truthy then remove the callback.\n        if (event.options && event.options.once) {\n          eventData.splice(i, 1)\n        }\n\n        // Execute callback.\n        event.callback(...parameters)\n      }\n    }\n  }\n}\n", "// Import polyfill.\nimport RevocableProxy from '../polyfills/RevocableProxy.js'\n\n// Import event dispatcher.\nimport EventDispatcher from './EventDispatcher.js'\n\nexport default class ProxyDispatcher extends EventDispatcher {\n  constructor(\n    options = {},\n  ) {\n    super()\n\n    options = Object.assign({\n      delete: true,\n      get: true,\n      set: true,\n    }, options)\n\n    // Setup WeakMap for keep track of created proxies.\n    const map = new WeakMap()\n\n    /**\n     * Add object to start keeping track of it.\n     * @param {Object} target Object that is being kept track of.\n     * @param {Array<String>} path Path of object on optional parent object, used for recursion.\n     * @returns {Proxy} Object to access and mutate.\n     */\n    this.add = (\n      target,\n      path = [],\n    ) => {\n      // Exit early if proxy already exists.\n      if (map.has(target)) {\n        return map.get(target)\n      }\n\n      // Recursively create proxies for each property.\n      for (const key in target) {\n        if (target[key] && typeof (target[key]) === 'object') {\n          target[key] = this.add(target[key], [...path, key])\n        }\n      }\n\n      // Create handler and add the handler for which a callback exits..\n      const handler = {}\n\n      if (options.delete) {\n        handler.deleteProperty = (\n          target,\n          key,\n        ) => {\n          // Exit early successful if property doesn't exist.\n          if (!Reflect.has(target, key)) {\n            return true\n          }\n\n          // Remove proxy.\n          this.remove(target, key)\n\n          // Delete property.\n          const deleted = Reflect.deleteProperty(target, key)\n\n          // Dispatch delete event.\n          if (deleted) {\n            this.dispatchEvent('delete', [target, Array.isArray(target) ? [...path] : [...path, key]])\n          }\n\n          // Return deleted.\n          return deleted\n        }\n      }\n\n      if (options.get) {\n        handler.get = (\n          target,\n          key,\n          receiver,\n        ) => {\n          // Dispatch get event.\n          if (key !== Symbol.unscopables) {\n            this.dispatchEvent('get', [target, [...path, key], receiver])\n          }\n\n          // Return value from object.\n          return Reflect.get(target, key, receiver)\n        }\n      }\n\n      if (options.set) {\n        handler.set = (\n          target,\n          key,\n          value,\n          receiver,\n        ) => {\n          // Exit early if not changed.\n          if (target[key] === value) {\n            return true\n          }\n\n          // Add proxy if value is an object.\n          if (value && typeof value === 'object') {\n            value = this.add(value, [...path, key])\n          }\n          // Store value.\n          target[key] = value\n\n          // Dispatch set event. If the target is an array and a new item has been pushed then the length has also changed, therefore a more generalizable path will be dispatched.\n          this.dispatchEvent('set', [target, Array.isArray(target) ? [...path] : [...path, key], value, receiver])\n\n          // Return success.\n          return true\n        }\n      }\n\n      // Create proxy.\n      const revocable = RevocableProxy(target, handler)\n\n      // Store target at proxy.\n      map.set(revocable, target)\n\n      // Return proxy.\n      return revocable.proxy\n    }\n\n    /**\n     * Remove object from being kept track of.\n     * @param {Object} target Object that is being kept track of.\n     */\n    this.remove = (\n      target,\n    ) => {\n      // Remove target from the map.\n      if (!map.has(target)) {\n        return\n      }\n\n      const revocable = map.get(target)\n      map.delete(revocable)\n\n      // Recursively remove properties as well.\n      for (const property in revocable.proxy) {\n        if (typeof (revocable.proxy[property]) === 'object') {\n          this.remove(revocable.proxy[property])\n        }\n      }\n\n      // Revoke proxy.\n      revocable.revoke()\n    }\n  }\n}\n", "let _cache = null\n\nexport const getAll = (\n) => {\n  if (_cache === null) {\n    // Get and parse cookies.\n    _cache = Object.fromEntries(\n      document.cookie.split(/; */)\n        .map(cookie => {\n          const [key, ...value] = cookie.split('=')\n          return [key, decodeURIComponent(value.join('='))]\n        }),\n    )\n  }\n  return _cache\n}\n\nexport const set = (\n  name,\n  value = '',\n  days = 60,\n) => {\n  name = name.trim()\n\n  if (!value || value === '') {\n    // Set cookie in document as expired.\n    document.cookie = name + '=; Expires=Thu, 01 Jan 1970 00:00:01 GMT; Path=/; SameSite=Strict;'\n\n    // Delete from cache as well.\n    if (_cache !== null) {\n      // Ensure cache exists.\n      delete _cache[name]\n    }\n  } else {\n    // Set cookie in document.\n    let expires = ''\n    if (days) {\n      const date = new Date()\n      date.setTime(date.getTime() + (days * 24 * 60 * 60 * 1000))\n      expires = '; expires=' + date.toUTCString()\n    }\n    document.cookie = name + '=' + encodeURIComponent(value) + expires + '; Path=/; SameSite=Strict;'\n\n    // Ensure the cache is populated.\n    getAll()\n    // Set in cache as well.\n    _cache[name] = value\n  }\n}\n", "// Import contexts.\nimport createCookieContext from './factories/contexts/cookies.js'\n\n// Import proxy dispatcher.\nimport ProxyDispatcher from '@doars/common/src/events/ProxyDispatcher.js'\n\nimport { getAll, set } from './utilities/cookies.js'\n\nconst id = Symbol('ID_COOKIES')\n\n/**\n * Create plugin instance.\n * @param {Doars} library Doars instance to add onto.\n * @param {Object} options The plugin options.\n */\nexport default function (\n  library,\n  options = null,\n) {\n  // Clone options.\n  options = Object.assign({\n    deconstruct: false,\n  }, options)\n\n  // Set private variables.\n  let isEnabled = false\n  let context, data, proxy, state\n\n  const onMutate = (target, path) => {\n    if (path.length > 1) {\n      console.warn('Nested cookies impossible tried to set \"' + path.join('.') + '\".')\n    }\n    set(path[0], target[path[0]])\n  }\n\n  const onEnable = (\n  ) => {\n    // Create proxy.\n    data = getAll()\n    proxy = new ProxyDispatcher()\n    state = proxy.add(data)\n\n    // Add event listeners.\n    proxy.addEventListener('delete', onMutate)\n    proxy.addEventListener('set', onMutate)\n\n    // Create contexts.\n    context = createCookieContext(id, state, proxy, !!options.deconstruct)\n    // Get index of state and insert the context directly before it.\n    const existingContexts = library.getContexts()\n    let stateIndex = 0\n    for (let i = existingContexts.length - 1; i >= 0; i--) {\n      const context = existingContexts[i]\n      if (context.name === '$state') {\n        stateIndex = i\n        break\n      }\n    }\n    library.addContexts(stateIndex, context)\n  }\n\n  const onDisable = (\n  ) => {\n    // Remove contexts.\n    library.removeContexts(context)\n\n    // Remove event listeners.\n    proxy.removeEventListener('delete', onMutate)\n    proxy.removeEventListener('set', onMutate)\n\n    // Reset references.\n    state = null\n    proxy.remove(data)\n    proxy = null\n    data = null\n    context = null\n  }\n\n  this.disable = (\n  ) => {\n    // Check if library is disabled.\n    if (!library.getEnabled() && isEnabled) {\n      isEnabled = false\n\n      // Stop listening to enable state of the library.\n      library.removeEventListener('enabling', onEnable)\n      library.removeEventListener('disabling', onDisable)\n    }\n  }\n\n  this.enable = (\n  ) => {\n    if (!isEnabled) {\n      isEnabled = true\n\n      // Listen to enable state of the library.\n      library.addEventListener('enabling', onEnable)\n      library.addEventListener('disabling', onDisable)\n    }\n  }\n\n  // Automatically enable plugin.\n  this.enable()\n}\n"],
  "mappings": "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",
  "names": ["id", "id", "target", "context"]
}
