{
  "version": 3,
  "sources": ["../../common/src/polyfills/RevocableProxy.js", "../../common/src/events/EventDispatcher.js", "../../common/src/events/ProxyDispatcher.js", "../src/utilities/cookies.js", "../src/factories/contexts/cookies.js", "../src/DoarsCookies.js", "../src/DoarsCookies.iife.js"],
  "sourcesContent": ["// List of methods to revoke access to.\nconst REFLECTION_METHODS = [\n  'apply',\n  'construct',\n  'defineProperty',\n  'deleteProperty',\n  'get',\n  'getOwnPropertyDescriptor',\n  'getPrototypeOf',\n  'isExtensible',\n  'ownKeys',\n  'preventExtensions',\n  'set',\n  'setPrototypeOf',\n]\n\n/**\n * Revocable proxy made using regular a proxy and a simple boolean.\n */\nexport default (target, handler) => {\n  // Keep track of status.\n  let revoked = false\n\n  // Add revocable handlers for each given handlers.\n  const revocableHandler = {}\n  for (const key of REFLECTION_METHODS) {\n    revocableHandler[key] = (...parameters) => {\n      if (revoked) {\n        console.error('proxy revoked')\n        return\n      }\n\n      if (key in handler) {\n        return handler[key](...parameters)\n      }\n      return Reflect[key](...parameters)\n    }\n  }\n\n  // Return proxy and revoke method.\n  return {\n    proxy: new Proxy(target, revocableHandler),\n    revoke: () => {\n      revoked = true\n    },\n  }\n}\n", "class EventDispatcher {\n  /**\n   * Create instance.\n   */\n  constructor() {\n    let events = {}\n\n    /**\n     * Add callback to event.\n     * @param {String} name Event name.\n     * @param {Function} callback Function to call on dispatch.\n     * @param {Object} options Callback options.\n     */\n    this.addEventListener = (name, callback, options = null) => {\n      // Check if event name exits and callback is not already present.\n      if (!(name in events)) {\n        events[name] = []\n      }\n\n      // Add to events.\n      events[name].push({\n        callback,\n        options,\n      })\n    }\n\n    /**\n     * Remove callback from event.\n     * @param {String} name Event name.\n     * @param {Function} callback Function that would be called.\n     */\n    this.removeEventListener = (name, callback) => {\n      // Check if event exists.\n      if (!Object.keys(events).includes(name)) {\n        return\n      }\n      const eventData = events[name]\n\n      // Get index of callback in events.\n      let index = -1\n      for (let i = 0; i < eventData.length; i++) {\n        if (eventData[i].callback === callback) {\n          index = i\n          break\n        }\n      }\n      if (index < 0) {\n        return\n      }\n\n      // Remove item from events.\n      eventData.splice(index, 1)\n\n      // Remove event if list is empty.\n      if (Object.keys(eventData).length === 0) {\n        delete events[name]\n      }\n    }\n\n    /**\n     * Remove listeners to an event.\n     * @param {String} name Event name.\n     */\n    this.removeEventListeners = (name) => {\n      if (!name) {\n        return\n      }\n\n      // Remove all handlers with the event name.\n      delete events[name]\n    }\n\n    /**\n     * Remove all listeners.\n     * @param {String} name Event name.\n     */\n    this.removeAllEventListeners = () => {\n      // Remove all listeners.\n      events = {}\n    }\n\n    /**\n     * Trigger event and dispatch data to listeners.\n     * @param {String} name Event name.\n     * @param {Array<Any>} parameters Event parameters to pass through.\n     * @param {Object} options Dispatch options.\n     */\n    this.dispatchEvent = (name, parameters, options = null) => {\n      // Check if event exists.\n      if (!events[name]) {\n        return\n      }\n      // Get events by trigger name.\n      const eventData = events[name]\n\n      // Dispatch a call to each event.\n      for (let i = 0; i < eventData.length; i++) {\n        const event = (options && options.reverse) ? eventData[eventData.length - (i + 1)] : eventData[i]\n\n        // If once is truthy then remove the callback.\n        if (event.options && event.options.once) {\n          eventData.splice(i, 1)\n        }\n\n        // Execute callback.\n        event.callback(...parameters)\n      }\n    }\n  }\n}\n\nexport default EventDispatcher\n", "// Import polyfill.\nimport RevocableProxy from '../polyfills/RevocableProxy.js'\n\n// Import event dispatcher.\nimport EventDispatcher from './EventDispatcher.js'\n\nclass ProxyDispatcher extends EventDispatcher {\n  constructor(options = {}) {\n    super()\n\n    options = Object.assign({\n      delete: true,\n      get: true,\n      set: true,\n    }, options)\n\n    // Setup WeakMap for keep track of created proxies.\n    const map = new WeakMap()\n\n    /**\n     * Add object to start keeping track of it.\n     * @param {Object} target Object that is being kept track of.\n     * @param {Array<String>} path Path of object on optional parent object, used for recursion.\n     * @returns {Proxy} Object to access and mutate.\n     */\n    this.add = (target, path = []) => {\n      // Exit early if proxy already exists.\n      if (map.has(target)) {\n        return map.get(target)\n      }\n\n      // Recursively create proxies for each property.\n      for (const key in target) {\n        if (target[key] && typeof (target[key]) === 'object') {\n          target[key] = this.add(target[key], [...path, key])\n        }\n      }\n\n      // Create handler and add the handler for which a callback exits..\n      const handler = {}\n\n      if (options.delete) {\n        handler.deleteProperty = (target, key) => {\n          // Exit early successful if property doesn't exist.\n          if (!Reflect.has(target, key)) {\n            return true\n          }\n\n          // Remove proxy.\n          this.remove(target, key)\n\n          // Delete property.\n          const deleted = Reflect.deleteProperty(target, key)\n\n          // Dispatch delete event.\n          if (deleted) {\n            this.dispatchEvent('delete', [target, Array.isArray(target) ? [...path] : [...path, key]])\n          }\n\n          // Return deleted.\n          return deleted\n        }\n      }\n\n      if (options.get) {\n        handler.get = (target, key, receiver) => {\n          // Dispatch get event.\n          if (key !== Symbol.unscopables) {\n            this.dispatchEvent('get', [target, [...path, key], receiver])\n          }\n\n          // Return value from object.\n          return Reflect.get(target, key, receiver)\n        }\n      }\n\n      if (options.set) {\n        handler.set = (target, key, value, receiver) => {\n          // Exit early if not changed.\n          if (target[key] === value) {\n            return true\n          }\n\n          // Add proxy if value is an object.\n          if (value && typeof value === 'object') {\n            value = this.add(value, [...path, key])\n          }\n          // Store value.\n          target[key] = value\n\n          // Dispatch set event. If the target is an array and a new item has been pushed then the length has also changed, therefore a more generalizable path will be dispatched.\n          this.dispatchEvent('set', [target, Array.isArray(target) ? [...path] : [...path, key], value, receiver])\n\n          // Return success.\n          return true\n        }\n      }\n\n      // Create proxy.\n      const revocable = RevocableProxy(target, handler)\n\n      // Store target at proxy.\n      map.set(revocable, target)\n\n      // Return proxy.\n      return revocable.proxy\n    }\n\n    /**\n     * Remove object from being kept track of.\n     * @param {Object} target Object that is being kept track of.\n     */\n    this.remove = (target) => {\n      // Remove target from the map.\n      if (!map.has(target)) {\n        return\n      }\n\n      const revocable = map.get(target)\n      map.delete(revocable)\n\n      // Recursively remove properties as well.\n      for (const property in revocable.proxy) {\n        if (typeof (revocable.proxy[property]) === 'object') {\n          this.remove(revocable.proxy[property])\n        }\n      }\n\n      // Revoke proxy.\n      revocable.revoke()\n    }\n  }\n}\n\nexport default ProxyDispatcher\n", "// Cookie cache.\nlet _cookies = null\nexport const getAll = (\n) => {\n  if (_cookies === null) {\n    // Get and parse cookies.\n    _cookies = Object.fromEntries(\n      document.cookie.split(/; */)\n        .map(cookie => {\n          const [key, ...value] = cookie.split('=')\n          return [key, decodeURIComponent(value.join('='))]\n        })\n    )\n  }\n  return _cookies\n}\n\nexport const set = (\n  name,\n  value = '',\n  days = 60,\n) => {\n  name = name.trim()\n\n  if (!value || value === '') {\n    // Set cookie in document as expired.\n    document.cookie = name + '=; Expires=Thu, 01 Jan 1970 00:00:01 GMT; Path=/; SameSite=Strict;'\n\n    // Delete from cache as well.\n    if (_cookies !== null) {\n      // Ensure cache exists.\n      delete _cookies[name]\n    }\n  } else {\n    // Set cookie in document.\n    let expires = ''\n    if (days) {\n      const date = new Date();\n      date.setTime(date.getTime() + (days * 24 * 60 * 60 * 1000))\n      expires = '; expires=' + date.toUTCString()\n    }\n    document.cookie = name + '=' + encodeURIComponent(value) + expires + '; Path=/; SameSite=Strict;'\n\n    // Ensure the cache is populated.\n    getAll()\n    // Set in cache as well.\n    _cookies[name] = value\n  }\n}\n", "// Import proxy dispatcher.\nimport ProxyDispatcher from '@doars/common/src/events/ProxyDispatcher.js'\n\n// Import utilities.\nimport { getAll, set } from '../../utilities/cookies'\n\nconst name = '$cookies'\n\nexport default (\n  options,\n  id,\n  state,\n  proxy,\n) => ({\n  deconstruct: !!options.deconstruct,\n\n  name: name,\n\n  create: (\n    component,\n    attribute,\n    update, {\n      RevocableProxy,\n    }\n  ) => {\n    // Create event handlers.\n    const onDelete = (target, path) => update(id, name + '.' + path.join('.'))\n    const onGet = (target, path) => attribute.accessed(id, name + '.' + path.join('.'))\n    const onSet = (target, path) => update(id, name + '.' + path.join('.'))\n\n    // Add event listeners.\n    proxy.addEventListener('delete', onDelete)\n    proxy.addEventListener('get', onGet)\n    proxy.addEventListener('set', onSet)\n\n    // Wrap in a revocable proxy.\n    const revocable = RevocableProxy(state, {})\n\n    return {\n      value: revocable.proxy,\n\n      // Remove event listeners.\n      destroy: () => {\n        proxy.removeEventListener('delete', onDelete)\n        proxy.removeEventListener('get', onGet)\n        proxy.removeEventListener('set', onSet)\n\n        // Revoke access to state.\n        revocable.revoke()\n      },\n    }\n  },\n})\n", "// Import contexts.\nimport createCookieContext from './factories/contexts/cookies.js'\n\n// Import proxy dispatcher.\nimport ProxyDispatcher from '@doars/common/src/events/ProxyDispatcher.js'\n\nimport { getAll, set } from './utilities/cookies.js'\n\nconst id = Symbol('ID_COOKIES')\n\n/**\n * Create plugin instance.\n * @param {Doars} library Doars instance to add onto.\n * @param {Object} options The plugin options.\n */\nexport default function (\n  library,\n  options = null\n) {\n  // Clone options.\n  options = Object.assign({\n    deconstruct: false,\n  }, options)\n\n  // Set private variables.\n  let isEnabled = false\n  let contextCookies, data, proxy, cookies\n\n  const onMutate = (target, path) => {\n    if (path.length > 1) {\n      console.warn('Nested cookies impossible tried to set \"' + path.join('.') + '\".')\n    }\n    set(path[0], target[path[0]])\n  }\n\n  const onEnable = function () {\n    // Create proxy.\n    data = getAll()\n    proxy = new ProxyDispatcher()\n    cookies = proxy.add(data)\n\n    // Add event listeners.\n    proxy.addEventListener('delete', onMutate)\n    proxy.addEventListener('set', onMutate)\n\n    // Create contexts.\n    contextCookies = createCookieContext(options, id, cookies, proxy)\n    // Get index of state and insert the context directly before it.\n    const existingContexts = library.getContexts()\n    let stateIndex = 0\n    for (let i = existingContexts.length - 1; i >= 0; i--) {\n      const context = existingContexts[i]\n      if (context.name === '$state') {\n        stateIndex = i\n        break\n      }\n    }\n    library.addContexts(stateIndex, contextCookies)\n  }\n  const onDisable = function () {\n    // Remove contexts.\n    library.removeContexts(contextCookies)\n\n    // Remove event listeners.\n    proxy.removeEventListener('delete', onMutate)\n    proxy.removeEventListener('set', onMutate)\n\n    // Reset references.\n    cookies = null\n    proxy.remove(data)\n    proxy = null\n    data = null\n    contextCookies = null\n  }\n\n  this.disable = function () {\n    // Check if library is disabled.\n    if (!library.getEnabled() && isEnabled) {\n      isEnabled = false\n\n      // Stop listening to enable state of the library.\n      library.removeEventListener('enabling', onEnable)\n      library.removeEventListener('disabling', onDisable)\n    }\n  }\n\n  this.enable = function () {\n    if (!isEnabled) {\n      isEnabled = true\n\n      // Listen to enable state of the library.\n      library.addEventListener('enabling', onEnable)\n      library.addEventListener('disabling', onDisable)\n    }\n  }\n\n  // Automatically enable plugin.\n  this.enable()\n}\n", "import DoarsCookies from './DoarsCookies.js'\n\nwindow.DoarsCookies = DoarsCookies\n"],
  "mappings": "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",
  "names": ["name", "target", "name", "id"]
}
