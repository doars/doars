{
  "version": 3,
  "sources": ["../../common/src/factories/createStateContext.js", "../src/factories/contexts/store.js", "../../common/src/polyfills/RevocableProxy.js", "../../common/src/events/EventDispatcher.js", "../../common/src/events/ProxyDispatcher.js", "../../common/src/utilities/Object.js", "../src/DoarsStore.js", "../src/DoarsStore.iife.js"],
  "sourcesContent": ["export default (\n  name,\n  id,\n  state,\n  proxy,\n  deconstruct,\n) => ({\n  deconstruct,\n\n  name,\n\n  create: (\n    component,\n    attribute,\n    update, {\n      RevocableProxy,\n    },\n  ) => {\n    // Create event handlers.\n    const onDelete = (\n      target,\n      path,\n    ) => update(id, name + '.' + path.join('.'))\n    const onGet = (\n      target,\n      path,\n    ) => attribute.accessed(id, name + '.' + path.join('.'))\n    const onSet = (\n      target,\n      path,\n    ) => update(id, name + '.' + path.join('.'))\n\n    // Add event listeners.\n    proxy.addEventListener('delete', onDelete)\n    proxy.addEventListener('get', onGet)\n    proxy.addEventListener('set', onSet)\n\n    // Wrap in a revocable proxy.\n    const revocable = RevocableProxy(state, {})\n\n    return {\n      value: revocable.proxy,\n\n      // Remove event listeners.\n      destroy: (\n      ) => {\n        proxy.removeEventListener('delete', onDelete)\n        proxy.removeEventListener('get', onGet)\n        proxy.removeEventListener('set', onSet)\n\n        // Revoke access to state.\n        revocable.revoke()\n      },\n    }\n  },\n})\n", "import createStateContext from '@doars/common/src/factories/createStateContext.js'\n\nexport default (\n  id,\n  state,\n  proxy,\n  deconstruct,\n) => createStateContext(\n  '$store',\n  id,\n  state,\n  proxy,\n  deconstruct,\n)\n", "// List of methods to revoke access to.\nconst REFLECTION_METHODS = [\n  'apply',\n  'construct',\n  'defineProperty',\n  'deleteProperty',\n  'get',\n  'getOwnPropertyDescriptor',\n  'getPrototypeOf',\n  'isExtensible',\n  'ownKeys',\n  'preventExtensions',\n  'set',\n  'setPrototypeOf',\n]\n\n/**\n * Revocable proxy made using regular a proxy and a simple boolean.\n */\nexport default (\n  target,\n  handler,\n) => {\n  // Keep track of status.\n  let revoked = false\n\n  // Add revocable handlers for each given handlers.\n  const revocableHandler = {}\n  for (const key of REFLECTION_METHODS) {\n    revocableHandler[key] = (...parameters) => {\n      if (revoked) {\n        console.error('proxy revoked')\n        return\n      }\n\n      if (key in handler) {\n        return handler[key](...parameters)\n      }\n      return Reflect[key](...parameters)\n    }\n  }\n\n  // Return proxy and revoke method.\n  return {\n    proxy: new Proxy(target, revocableHandler),\n    revoke: () => {\n      revoked = true\n    },\n  }\n}\n", "export default class EventDispatcher {\n  /**\n   * Create instance.\n   */\n  constructor(\n  ) {\n    let events = {}\n\n    /**\n     * Add callback to event.\n     * @param {String} name Event name.\n     * @param {Function} callback Function to call on dispatch.\n     * @param {Object} options Callback options.\n     */\n    this.addEventListener = (\n      name,\n      callback,\n      options = null,\n    ) => {\n      // Check if event name exits and callback is not already present.\n      if (!(name in events)) {\n        events[name] = []\n      }\n\n      // Add to events.\n      events[name].push({\n        callback,\n        options,\n      })\n    }\n\n    /**\n     * Remove callback from event.\n     * @param {String} name Event name.\n     * @param {Function} callback Function that would be called.\n     */\n    this.removeEventListener = (\n      name,\n      callback,\n    ) => {\n      // Check if event exists.\n      if (!Object.keys(events).includes(name)) {\n        return\n      }\n      const eventData = events[name]\n\n      // Get index of callback in events.\n      let index = -1\n      for (let i = 0; i < eventData.length; i++) {\n        if (eventData[i].callback === callback) {\n          index = i\n          break\n        }\n      }\n      if (index < 0) {\n        return\n      }\n\n      // Remove item from events.\n      eventData.splice(index, 1)\n\n      // Remove event if list is empty.\n      if (Object.keys(eventData).length === 0) {\n        delete events[name]\n      }\n    }\n\n    /**\n     * Remove listeners to an event.\n     * @param {String} name Event name.\n     */\n    this.removeEventListeners = (\n      name,\n    ) => {\n      if (!name) {\n        return\n      }\n\n      // Remove all handlers with the event name.\n      delete events[name]\n    }\n\n    /**\n     * Remove all listeners.\n     * @param {String} name Event name.\n     */\n    this.removeAllEventListeners = (\n    ) => {\n      // Remove all listeners.\n      events = {}\n    }\n\n    /**\n     * Trigger event and dispatch data to listeners.\n     * @param {String} name Event name.\n     * @param {Array<Any>} parameters Event parameters to pass through.\n     * @param {Object} options Dispatch options.\n     */\n    this.dispatchEvent = (\n      name,\n      parameters,\n      options = null,\n    ) => {\n      // Check if event exists.\n      if (!events[name]) {\n        return\n      }\n      // Get events by trigger name.\n      const eventData = events[name]\n\n      // Dispatch a call to each event.\n      for (let i = 0; i < eventData.length; i++) {\n        const event = (options && options.reverse) ? eventData[eventData.length - (i + 1)] : eventData[i]\n\n        // If once is truthy then remove the callback.\n        if (event.options && event.options.once) {\n          eventData.splice(i, 1)\n        }\n\n        // Execute callback.\n        event.callback(...parameters)\n      }\n    }\n  }\n}\n", "// Import polyfill.\nimport RevocableProxy from '../polyfills/RevocableProxy.js'\n\n// Import event dispatcher.\nimport EventDispatcher from './EventDispatcher.js'\n\nexport default class ProxyDispatcher extends EventDispatcher {\n  constructor(\n    options = {},\n  ) {\n    super()\n\n    options = Object.assign({\n      delete: true,\n      get: true,\n      set: true,\n    }, options)\n\n    // Setup WeakMap for keep track of created proxies.\n    const map = new WeakMap()\n\n    /**\n     * Add object to start keeping track of it.\n     * @param {Object} target Object that is being kept track of.\n     * @param {Array<String>} path Path of object on optional parent object, used for recursion.\n     * @returns {Proxy} Object to access and mutate.\n     */\n    this.add = (\n      target,\n      path = [],\n    ) => {\n      // Exit early if proxy already exists.\n      if (map.has(target)) {\n        return map.get(target)\n      }\n\n      // Recursively create proxies for each property.\n      for (const key in target) {\n        if (target[key] && typeof (target[key]) === 'object') {\n          target[key] = this.add(target[key], [...path, key])\n        }\n      }\n\n      // Create handler and add the handler for which a callback exits..\n      const handler = {}\n\n      if (options.delete) {\n        handler.deleteProperty = (\n          target,\n          key,\n        ) => {\n          // Exit early successful if property doesn't exist.\n          if (!Reflect.has(target, key)) {\n            return true\n          }\n\n          // Remove proxy.\n          this.remove(target, key)\n\n          // Delete property.\n          const deleted = Reflect.deleteProperty(target, key)\n\n          // Dispatch delete event.\n          if (deleted) {\n            this.dispatchEvent('delete', [target, Array.isArray(target) ? [...path] : [...path, key]])\n          }\n\n          // Return deleted.\n          return deleted\n        }\n      }\n\n      if (options.get) {\n        handler.get = (\n          target,\n          key,\n          receiver,\n        ) => {\n          // Dispatch get event.\n          if (key !== Symbol.unscopables) {\n            this.dispatchEvent('get', [target, [...path, key], receiver])\n          }\n\n          // Return value from object.\n          return Reflect.get(target, key, receiver)\n        }\n      }\n\n      if (options.set) {\n        handler.set = (\n          target,\n          key,\n          value,\n          receiver,\n        ) => {\n          // Exit early if not changed.\n          if (target[key] === value) {\n            return true\n          }\n\n          // Add proxy if value is an object.\n          if (value && typeof value === 'object') {\n            value = this.add(value, [...path, key])\n          }\n          // Store value.\n          target[key] = value\n\n          // Dispatch set event. If the target is an array and a new item has been pushed then the length has also changed, therefore a more generalizable path will be dispatched.\n          this.dispatchEvent('set', [target, Array.isArray(target) ? [...path] : [...path, key], value, receiver])\n\n          // Return success.\n          return true\n        }\n      }\n\n      // Create proxy.\n      const revocable = RevocableProxy(target, handler)\n\n      // Store target at proxy.\n      map.set(revocable, target)\n\n      // Return proxy.\n      return revocable.proxy\n    }\n\n    /**\n     * Remove object from being kept track of.\n     * @param {Object} target Object that is being kept track of.\n     */\n    this.remove = (\n      target,\n    ) => {\n      // Remove target from the map.\n      if (!map.has(target)) {\n        return\n      }\n\n      const revocable = map.get(target)\n      map.delete(revocable)\n\n      // Recursively remove properties as well.\n      for (const property in revocable.proxy) {\n        if (typeof (revocable.proxy[property]) === 'object') {\n          this.remove(revocable.proxy[property])\n        }\n      }\n\n      // Revoke proxy.\n      revocable.revoke()\n    }\n  }\n}\n", "/**\n * Deeply assign a series of objects properties together.\n * @param {Object} target Target object to merge to.\n * @param  {...Object} sources Objects to merge into the target.\n */\nexport const deepAssign = (\n  target,\n  ...sources\n) => {\n  if (!sources.length) {\n    return target\n  }\n  const source = sources.shift()\n\n  if (isObject(target) && isObject(source)) {\n    for (const key in source) {\n      if (isObject(source[key])) {\n        if (!target[key]) {\n          Object.assign(target, {\n            [key]: {},\n          })\n        }\n        deepAssign(target[key], source[key])\n      } else if (Array.isArray(source[key])) {\n        target[key] = source[key].map((value) => {\n          if (isObject(value)) {\n            return deepAssign({}, value)\n          }\n          return value\n        })\n      } else {\n        Object.assign(target, {\n          [key]: source[key],\n        })\n      }\n    }\n  }\n\n  return deepAssign(target, ...sources)\n}\n\n/**\n * Get value at path on object.\n * @param {Object} object Object to get from.\n * @param  {Array<String>} path Path to value.\n * @returns {Any} value at path.\n */\nexport const getDeeply = (\n  object,\n  path,\n) => {\n  let objectTemp = object\n  let i = 0\n  for (; i < path.length - 1; i++) {\n    objectTemp = objectTemp[path[i]]\n  }\n  return objectTemp[path[i]]\n}\n\n/**\n * Check whether the value is an object.\n * @param {Any} value Value of unknown type.\n * @returns Whether the value is an object.\n */\nexport const isObject = (\n  value,\n) => {\n  return (value && typeof value === 'object' && !Array.isArray(value))\n}\n\n/**\n * Set value on path at object.\n * @param {Object} object Object to set on.\n * @param {Array<String>} path Path to value.\n * @param {Any} value Value to set.\n */\nexport const setDeeply = (\n  object,\n  path,\n  value,\n) => {\n  // Exit early if not an object.\n  if (typeof (object) !== 'object') {\n    return\n  }\n\n  let i = 0\n  for (; i < path.length - 1; i++) {\n    object = object[path[i]]\n\n    // Exit early if not an object.\n    if (typeof (object) !== 'object') {\n      return\n    }\n  }\n  object[path[i]] = value\n}\n\nexport default {\n  deepAssign,\n  getDeeply,\n  isObject,\n  setDeeply,\n}\n", "// Import contexts.\nimport createContextStore from './factories/contexts/store.js'\n\n// Import proxy dispatcher.\nimport ProxyDispatcher from '@doars/common/src/events/ProxyDispatcher.js'\n\n// Import utilities.\nimport { deepAssign } from '@doars/common/src/utilities/Object.js'\n\nconst id = Symbol('ID_STORE')\n\n/**\n * Create plugin instance.\n * @param {Doars} library Doars instance to add onto.\n * @param {Object} options The plugin options.\n * @param {Object} dataStore Initial store data.\n */\nexport default function (\n  library,\n  options = null,\n  dataStore = {},\n) {\n  // Clone options.\n  options = Object.assign({\n    deconstruct: false,\n  }, options)\n\n  // Set private variables.\n  let isEnabled = false\n  let contextStore, data, proxy, store\n\n  const onEnable = (\n  ) => {\n    // Create proxy.\n    data = deepAssign({}, dataStore)\n    proxy = new ProxyDispatcher()\n    store = proxy.add(data)\n\n    // Create contexts.\n    contextStore = createContextStore(id, store, proxy, !!options.deconstruct)\n    // Get index of state and insert the context directly before it.\n    const existingContexts = library.getContexts()\n    let stateIndex = 0\n    for (let i = existingContexts.length - 1; i >= 0; i--) {\n      const context = existingContexts[i]\n      if (context.name === '$state') {\n        stateIndex = i\n        break\n      }\n    }\n    library.addContexts(stateIndex, contextStore)\n  }\n\n  const onDisable = (\n  ) => {\n    // Remove contexts.\n    library.removeContexts(contextStore)\n\n    // Reset references.\n    store = null\n    proxy.remove(data)\n    proxy = null\n    data = null\n    contextStore = null\n  }\n\n  this.disable = (\n  ) => {\n    // Check if library is disabled.\n    if (!library.getEnabled() && isEnabled) {\n      isEnabled = false\n\n      // Stop listening to enable state of the library.\n      library.removeEventListener('enabling', onEnable)\n      library.removeEventListener('disabling', onDisable)\n    }\n  }\n\n  this.enable = (\n  ) => {\n    if (!isEnabled) {\n      isEnabled = true\n\n      // Listen to enable state of the library.\n      library.addEventListener('enabling', onEnable)\n      library.addEventListener('disabling', onDisable)\n    }\n  }\n\n  // Automatically enable plugin.\n  this.enable()\n}\n", "import DoarsStore from './DoarsStore.js'\n\nwindow.DoarsStore = DoarsStore\n"],
  "mappings": "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",
  "names": ["id", "id", "target"]
}
