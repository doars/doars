{"version":3,"file":"doars-store.iife.js","sources":["../src/factories/contexts/store.js","../src/symbols.js","../../doars/src/utils/ObjectUtils.js","../../doars/src/factories/directives/sync.js","../src/factories/directives/syncStore.js","../../doars/src/polyfills/RevocableProxy.js","../../doars/src/events/EventDispatcher.js","../../doars/src/events/ProxyDispatcher.js","../src/DoarsStore.js"],"sourcesContent":["export default function (options, id, store, proxy) {\n  return {\n    deconstruct: !!options.deconstruct,\n\n    name: '$store',\n\n    create: (component, attribute, update, { RevocableProxy }) => {\n      // Create event handlers.\n      const onDelete = (target, path) => update(id, path.join('.'))\n      const onGet = (target, path) => attribute.accessed(id, path.join('.'))\n      const onSet = (target, path) => update(id, path.join('.'))\n\n      // Add event listeners.\n      proxy.addEventListener('delete', onDelete)\n      proxy.addEventListener('get', onGet)\n      proxy.addEventListener('set', onSet)\n\n      // Wrap in a revocable proxy.\n      const revocable = RevocableProxy(store, {})\n\n      return {\n        value: revocable.proxy,\n\n        // Remove event listeners.\n        destroy: () => {\n          proxy.removeEventListener('delete', onDelete)\n          proxy.removeEventListener('get', onGet)\n          proxy.removeEventListener('set', onSet)\n\n          // Revoke access to store.\n          revocable.revoke()\n        },\n      }\n    },\n  }\n}\n","export const SYNC_STORE = Symbol('SYNC_STORE')\n","/**\n * Deeply assign a series of objects properties together.\n * @param {Object} target Target object to merge to.\n * @param  {...Object} sources Objects to merge into the target.\n */\nexport const deepAssign = (target, ...sources) => {\n  if (!sources.length) {\n    return target\n  }\n  const source = sources.shift()\n\n  if (isObject(target) && isObject(source)) {\n    for (const key in source) {\n      if (isObject(source[key])) {\n        if (!target[key]) {\n          Object.assign(target, {\n            [key]: {},\n          })\n        }\n        deepAssign(target[key], source[key])\n      } else if (Array.isArray(source[key])) {\n        target[key] = source[key].map((value) => {\n          if (isObject(value)) {\n            return deepAssign({}, value)\n          }\n          return value\n        })\n      } else {\n        Object.assign(target, {\n          [key]: source[key],\n        })\n      }\n    }\n  }\n\n  return deepAssign(target, ...sources)\n}\n\n/**\n * Get value at path on object.\n * @param {Object} object Object to get from.\n * @param  {Array<String>} path Path to value.\n * @returns {Any} value at path.\n */\nexport const get = (object, path) => {\n  let objectTemp = object\n  let i = 0\n  for (; i < path.length - 1; i++) {\n    objectTemp = objectTemp[path[i]]\n  }\n  return objectTemp[path[i]]\n}\n\n/**\n * Check whether the value is an object.\n * @param {Any} value Value of unknown type.\n * @returns Whether the value is an object.\n */\nexport const isObject = (value) => {\n  return (value && typeof value === 'object' && !Array.isArray(value))\n}\n\n/**\n * Set value on path at object.\n * @param {Object} object Object to set on.\n * @param {Array<String>} path Path to value.\n * @param {Any} value Value to set.\n */\nexport const set = (object, path, value) => {\n  // Exit early if not an object.\n  if (typeof (object) !== 'object') {\n    return\n  }\n\n  let i = 0\n  for (; i < path.length - 1; i++) {\n    object = object[path[i]]\n\n    // Exit early if not an object.\n    if (typeof (object) !== 'object') {\n      return\n    }\n  }\n  object[path[i]] = value\n}\n\nexport default {\n  deepAssign: deepAssign,\n  get: get,\n  isObject: isObject,\n  set: set,\n}\n","// Import utils.\nimport { set } from '../../utils/ObjectUtils.js'\n\nexport default function (symbol, getData, contextPrefix) {\n  const destroy = (component, attribute) => {\n    // Exit early if nothing to destroy.\n    if (!attribute[symbol]) {\n      return\n    }\n\n    // Deconstruct attribute.\n    const element = attribute.getElement()\n\n    // Remove existing event listeners.\n    element.removeEventListener('input', attribute[symbol])\n\n    // Remove data from attribute.\n    delete attribute[symbol]\n  }\n\n  return {\n    update: (component, attribute, { executeExpression }) => {\n      // Deconstruct attribute.\n      const element = attribute.getElement()\n\n      // Store whether this call is an update.\n      const isNew = !attribute[symbol]\n\n      if (isNew) {\n        // Check if placed on a correct tag.\n        if (!(element.tagName === 'DIV' && element.hasAttribute('contenteditable')) && element.tagName !== 'INPUT' && element.tagName !== 'SELECT' && element.tagName !== 'TEXTAREA') {\n          console.warn('Doars: `sync` directive must be placed on an `<input>`, `<select>`, `<textarea>` tag, or a content editable `div`.')\n          return\n        }\n      }\n\n      // Deconstruct attribute.\n      const value = attribute.getValue()\n\n      // Check if value is a valid variable name.\n      if (!/^[_$a-z]{1}[._$a-z0-9]{0,}$/i.test(value)) {\n        destroy(component, attribute)\n        console.warn('Doars: `sync` directive\\'s value not a valid variable name: \"' + value + '\".')\n        return\n      }\n\n      // Remove context prefix.\n      let pathSplit = value\n      if (pathSplit.startsWith(contextPrefix)) {\n        pathSplit = pathSplit.substring(contextPrefix.length)\n      }\n      // Split value into path segments.\n      pathSplit = pathSplit.split('.')\n\n      if (isNew) {\n        // Get data for syncing.\n        const { data, id, path } = getData(component, attribute)\n\n        // Set handler that updates data based of node tag.\n        let handler\n        switch (element.tagName) {\n          case 'DIV':\n            handler = () => {\n              set(data, pathSplit, element.innerText)\n              return true\n            }\n            break\n\n          case 'INPUT':\n            handler = () => {\n              if (element.type === 'checkbox') {\n                const dataValue = executeExpression(component, attribute.clone(), value)\n                if (element.checked) {\n                  if (!dataValue) {\n                    set(data, pathSplit, [element.value])\n                    return true\n                  } if (!dataValue.includes(element.value)) {\n                    dataValue.push(element.value)\n                    return true\n                  }\n                } else if (dataValue) {\n                  const index = dataValue.indexOf(element.value)\n                  if (index >= 0) {\n                    dataValue.splice(index, 1)\n                    return true\n                  }\n                }\n              } else if (element.type === 'radio') {\n                const dataValue = executeExpression(component, attribute.clone(), value)\n                if (element.checked) {\n                  if (dataValue !== element.value) {\n                    set(data, pathSplit, element.value)\n                    return true\n                  }\n                } else if (dataValue === element.value) {\n                  set(data, pathSplit, null)\n                  return true\n                }\n              } else {\n                set(data, pathSplit, element.value)\n                return true\n              }\n              return false\n            }\n            break\n\n          case 'TEXTAREA':\n            handler = () => {\n              set(data, pathSplit, element.value)\n              return true\n            }\n            break\n\n          case 'SELECT':\n            handler = () => {\n              if (element.multiple) {\n                const values = []\n                for (const option of element.selectedOptions) {\n                  values.push(option.value)\n                }\n                set(data, pathSplit, values)\n                return true\n              }\n\n              set(data, pathSplit, element.selectedOptions[0].value)\n              return true\n            }\n            break\n        }\n\n        // Wrap handler so an update is triggered.\n        const handlerWrapper = () => {\n          // Call handler.\n          if (handler()) {\n            // Dispatch update trigger.\n            component.getLibrary().update([{\n              id: id,\n              path: path,\n            }])\n          }\n        }\n\n        // Add event listener.\n        element.addEventListener('input', handlerWrapper)\n\n        // Store handler wrapper.\n        attribute[symbol] = handlerWrapper\n      }\n\n      const dataValue = executeExpression(component, attribute, value)\n      switch (element.tagName) {\n        case 'DIV':\n        case 'TEXTAREA':\n          // Check if current value is different than attribute value.\n          if (dataValue !== element.innerText) {\n            // Update current value.\n            element.innerText = dataValue\n          }\n          break\n\n        case 'INPUT':\n          if (element.type === 'checkbox') {\n            // Update option if the checked value has changed.\n            const checked = dataValue.includes(element.value)\n            if (element.checked !== checked) {\n              // Update checked value.\n              element.checked = checked\n\n              // Update checked attribute.\n              if (checked) {\n                element.setAttribute('checked', '')\n              } else {\n                element.removeAttribute('checked')\n              }\n            }\n          } else if (element.type === 'radio') {\n            // Update option if the checked value has changed.\n            const checked = dataValue === element.value\n            if (element.checked !== checked) {\n              // Update checked value.\n              element.checked = checked\n\n              // Update checked attribute.\n              if (checked) {\n                element.setAttribute('checked', '')\n              } else {\n                element.removeAttribute('checked')\n              }\n            }\n          } else if (dataValue !== element.value) { // Check if current value is different than attribute value.\n            // Update current value.\n            element.setAttribute('value', dataValue)\n          }\n          break\n\n        case 'SELECT':\n          // Iterate over the select options.\n          for (const option of Array.from(element.options)) {\n            // Update option if the selected value has changed.\n            const select = Array.isArray(dataValue) ? dataValue.includes(option.value) : dataValue === option.value\n            if (option.selected !== select) {\n              // Update option status.\n              option.selected = select\n\n              // Update option attribute.\n              if (select) {\n                option.setAttribute('selected', '')\n              } else {\n                option.removeAttribute('selected')\n              }\n            }\n          }\n          break\n      }\n    },\n\n    destroy: destroy,\n  }\n}\n","// Import symbols.\nimport { SYNC_STORE } from '../../symbols.js'\n\n// Import generator.\nimport createDirectiveSync from '@doars/doars/src/factories/directives/sync.js'\n\nconst STORE_PREFIX = '$store.'\n\nexport default function (id, store) {\n  const directive = createDirectiveSync(SYNC_STORE, (component, attribute) => {\n    // Remove prefix from value.\n    let value = attribute.getValue()\n    if (value.startsWith(STORE_PREFIX)) {\n      value = value.substring(STORE_PREFIX.length)\n    }\n\n    // Return directive data.\n    return {\n      data: store,\n      id: id,\n      path: value,\n    }\n  }, STORE_PREFIX)\n\n  directive.name = 'sync-store'\n\n  return directive\n}\n","// List of methods to revoke access to.\nconst REFLECTION_METHODS = [\n  'apply',\n  'construct',\n  'defineProperty',\n  'deleteProperty',\n  'get',\n  'getOwnPropertyDescriptor',\n  'getPrototypeOf',\n  'isExtensible',\n  'ownKeys',\n  'preventExtensions',\n  'set',\n  'setPrototypeOf',\n]\n\n/**\n * Revocable proxy made using regular a proxy and a simple boolean.\n */\nexport default function (target, handler) {\n  // Keep track of status.\n  let revoked = false\n\n  // Add revocable handlers for each given handlers.\n  const revocableHandler = {}\n  for (const key of REFLECTION_METHODS) {\n    revocableHandler[key] = (...parameters) => {\n      if (revoked) {\n        console.error('illegal operation attempted on a revoked proxy')\n        return\n      }\n\n      if (key in handler) {\n        return handler[key](...parameters)\n      }\n      return Reflect[key](...parameters)\n    }\n  }\n\n  // Return proxy and revoke method.\n  return {\n    proxy: new Proxy(target, revocableHandler),\n    revoke: () => {\n      revoked = true\n    },\n  }\n}\n","class EventDispatcher {\n  /**\n   * Create instance.\n   */\n  constructor() {\n    let events = {}\n\n    /**\n     * Add callback to event.\n     * @param {String} name Event name.\n     * @param {Function} callback Function to call on dispatch.\n     * @param {Object} options Callback options.\n     */\n    this.addEventListener = (name, callback, options = null) => {\n      // Check if event name exits and callback is not already present.\n      if (!(name in events)) {\n        events[name] = []\n      }\n\n      // Add to events.\n      events[name].push({\n        callback: callback,\n        options: options,\n      })\n    }\n\n    /**\n     * Remove callback from event.\n     * @param {String} name Event name.\n     * @param {Function} callback Function that would be called.\n     */\n    this.removeEventListener = (name, callback) => {\n      // Check if event exists.\n      if (!Object.keys(events).includes(name)) {\n        return\n      }\n      const eventData = events[name]\n\n      // Get index of callback in events.\n      let index = -1\n      for (let i = 0; i < eventData.length; i++) {\n        if (eventData[i].callback === callback) {\n          index = i\n          break\n        }\n      }\n      if (index < 0) {\n        return\n      }\n\n      // Remove item from events.\n      eventData.splice(index, 1)\n\n      // Remove event if list is empty.\n      if (Object.keys(eventData).length === 0) {\n        delete events[name]\n      }\n    }\n\n    /**\n     * Remove listeners to an event.\n     * @param {String} name Event name.\n     */\n    this.removeEventListeners = (name) => {\n      if (!name) {\n        return\n      }\n\n      // Remove all handlers with the event name.\n      delete events[name]\n    }\n\n    /**\n     * Remove all listeners.\n     * @param {String} name Event name.\n     */\n    this.removeAllEventListeners = () => {\n      // Remove all listeners.\n      events = {}\n    }\n\n    /**\n     * Trigger event and dispatch data to listeners.\n     * @param {String} name Event name.\n     * @param {Array<Any>} parameters Event parameters to pass through.\n     * @param {Object} options Dispatch options.\n     */\n    this.dispatchEvent = (name, parameters, options = null) => {\n      // Check if event exists.\n      if (!events[name]) {\n        return\n      }\n      // Get events by trigger name.\n      const eventData = events[name]\n\n      // Dispatch a call to each event.\n      for (let i = 0; i < eventData.length; i++) {\n        const event = (options && options.reverse) ? eventData[eventData.length - (i + 1)] : eventData[i]\n\n        // If once is truthy then remove the callback.\n        if (event.options && event.options.once) {\n          eventData.splice(i, 1)\n        }\n\n        // Execute callback.\n        event.callback(...parameters)\n      }\n    }\n  }\n}\n\nexport default EventDispatcher\n","// Import polyfill.\nimport RevocableProxy from '../polyfills/RevocableProxy.js'\n\n// Import event dispatcher.\nimport EventDispatcher from './EventDispatcher.js'\n\nclass ProxyDispatcher extends EventDispatcher {\n  constructor(options = {}) {\n    super()\n\n    options = Object.assign({\n      delete: true,\n      get: true,\n      set: true,\n    }, options)\n\n    // Setup WeakMap for keep track of created proxies.\n    const map = new WeakMap()\n\n    /**\n     * Add object to start keeping track of it.\n     * @param {Object} target Object that is being kept track of.\n     * @param {Array<String>} path Path of object on optional parent object, used for recursion.\n     * @returns {Proxy} Object to access and mutate.\n     */\n    this.add = (target, path = []) => {\n      // Exit early if proxy already exists.\n      if (map.has(target)) {\n        return map.get(target)\n      }\n\n      // Recursively create proxies for each property.\n      for (const key in target) {\n        if (target[key] && typeof (target[key]) === 'object') {\n          target[key] = this.add(target[key], [...path, key])\n        }\n      }\n\n      // Create handler and add the handler for which a callback exits..\n      const handler = {}\n\n      if (options.delete) {\n        handler.deleteProperty = (target, key) => {\n          // Exit early successful if property doesn't exist.\n          if (!Reflect.has(target, key)) {\n            return true\n          }\n\n          // Remove proxy.\n          this.remove(target, key)\n\n          // Delete property.\n          const deleted = Reflect.deleteProperty(target, key)\n\n          // Dispatch delete event.\n          if (deleted) {\n            this.dispatchEvent('delete', [target, Array.isArray(target) ? [...path] : [...path, key]])\n          }\n\n          // Return deleted.\n          return deleted\n        }\n      }\n\n      if (options.get) {\n        handler.get = (target, key, receiver) => {\n          // Dispatch get event.\n          if (key !== Symbol.unscopables) {\n            this.dispatchEvent('get', [target, [...path, key], receiver])\n          }\n\n          // Return value from object.\n          return Reflect.get(target, key, receiver)\n        }\n      }\n\n      if (options.set) {\n        handler.set = (target, key, value, receiver) => {\n          // Exit early if not changed.\n          if (target[key] === value) {\n            return true\n          }\n\n          // Add proxy if value is an object.\n          if (typeof value === 'object') {\n            value = this.add(value, [...path, key])\n          }\n          // Store value.\n          target[key] = value\n\n          // Dispatch set event. If the target is an array and a new item has been pushed then the length has also changed, therefore a more generalizable path will be dispatched.\n          this.dispatchEvent('set', [target, Array.isArray(target) ? [...path] : [...path, key], value, receiver])\n\n          // Return success.\n          return true\n        }\n      }\n\n      // Create proxy.\n      const revocable = RevocableProxy(target, handler)\n\n      // Store target at proxy.\n      map.set(revocable, target)\n\n      // Return proxy.\n      return revocable.proxy\n    }\n\n    /**\n     * Remove object from being kept track of.\n     * @param {Object} target Object that is being kept track of.\n     */\n    this.remove = (target) => {\n      // Remove target from the map.\n      if (!map.has(target)) {\n        return\n      }\n\n      const revocable = map.get(target)\n      map.delete(revocable)\n\n      // Recursively remove properties as well.\n      for (const property in revocable.proxy) {\n        if (typeof (revocable.proxy[property]) === 'object') {\n          this.remove(revocable.proxy[property])\n        }\n      }\n\n      // Revoke proxy.\n      revocable.revoke()\n    }\n  }\n}\n\nexport default ProxyDispatcher\n","// Import contexts.\nimport createContextStore from './factories/contexts/store.js'\n\n// Import directive.\nimport createDirectiveSyncStore from './factories/directives/syncStore.js'\n\n// Import proxy dispatcher.\nimport ProxyDispatcher from '@doars/doars/src/events/ProxyDispatcher.js'\n\n// Import utils.\nimport { deepAssign } from '@doars/doars/src/utils/ObjectUtils.js'\n\nexport default class DoarsStore {\n  /**\n   * Create plugin instance.\n   * @param {Doars} library Doars instance to add onto.\n   * @param {Object} options The plugin options.\n   * @param {Object} datastore Initial datastore's data.\n   */\n  constructor(library, options = null, datastore = {}) {\n    // Clone options.\n    options = Object.assign({\n      deconstruct: false,\n    }, options)\n\n    // Set private variables.\n    let contextStore, datastoreCopy, directiveSyncStore, proxy, store\n\n    // Enable plugin when library is enabling.\n    library.addEventListener('enabling', () => {\n      // Create proxy.\n      datastoreCopy = deepAssign({}, datastore)\n      proxy = new ProxyDispatcher()\n      store = proxy.add(datastoreCopy)\n\n      // Create store id.\n      const id = Symbol('ID_STORE')\n\n      // Create contexts.\n      contextStore = createContextStore(options, id, store, proxy)\n      // Get index of state and insert the context directly before it.\n      const existingContexts = library.getContexts()\n      let stateIndex = 0\n      for (let i = existingContexts.length - 1; i >= 0; i--) {\n        const context = existingContexts[i]\n        if (context.name === '$state') {\n          stateIndex = i\n          break\n        }\n      }\n      library.addContexts(stateIndex, contextStore)\n\n      // Create and add directive.\n      directiveSyncStore = createDirectiveSyncStore(id, store)\n      library.addDirectives(-1, directiveSyncStore)\n    })\n\n    // Disable plugin when library is disabling.\n    library.addEventListener('disabling', () => {\n      // Remove contexts.\n      library.removeContexts(contextStore)\n\n      // Remove directive.\n      library.removeDirective(directiveSyncStore)\n\n      // Reset references.\n      store = null\n      proxy.remove(datastoreCopy)\n      proxy = null\n      datastoreCopy = null\n      directiveSyncStore = null\n      contextStore = null\n    })\n  }\n}\n"],"names":["options","id","store","proxy","deconstruct","name","create","component","attribute","update","RevocableProxy","onDelete","target","path","join","onGet","accessed","onSet","addEventListener","revocable","value","destroy","removeEventListener","revoke","SYNC_STORE","Symbol","deepAssign","sources","length","source","shift","isObject","key","Object","assign","Array","isArray","map","set","object","i","symbol","getData","contextPrefix","element","getElement","executeExpression","isNew","tagName","hasAttribute","console","warn","getValue","test","pathSplit","startsWith","substring","split","data","handler","innerText","type","dataValue","clone","checked","includes","push","index","indexOf","splice","multiple","values","selectedOptions","option","handlerWrapper","getLibrary","setAttribute","removeAttribute","from","select","selected","STORE_PREFIX","directive","createDirectiveSync","REFLECTION_METHODS","revoked","revocableHandler","error","Reflect","Proxy","EventDispatcher","events","callback","keys","eventData","removeEventListeners","removeAllEventListeners","dispatchEvent","parameters","event","reverse","once","ProxyDispatcher","get","WeakMap","add","has","deleteProperty","remove","deleted","receiver","unscopables","property","DoarsStore","library","datastore","contextStore","datastoreCopy","directiveSyncStore","createContextStore","existingContexts","getContexts","stateIndex","context","addContexts","createDirectiveSyncStore","addDirectives","removeContexts","removeDirective"],"mappings":"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"}