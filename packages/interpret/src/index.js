import _parse from './parse.js'
import _reduce from './reduce.js'
import {
  COMPOUND as _COMPOUND,
  IDENTIFIER as _IDENTIFIER,
  LITERAL as _LITERAL,
  PROPERTY as _PROPERTY,

  ARRAY_EXPRESSION as _ARRAY_EXPRESSION,
  ASSIGN_EXPRESSION as _ASSIGN_EXPRESSION,
  BINARY_EXPRESSION as _BINARY_EXPRESSION,
  CALL_EXPRESSION as _CALL_EXPRESSION,
  CONDITION_EXPRESSION as _CONDITION_EXPRESSION,
  MEMBER_EXPRESSION as _MEMBER_EXPRESSION,
  OBJECT_EXPRESSION as _OBJECT_EXPRESSION,
  SEQUENCE_EXPRESSION as _SEQUENCE_EXPRESSION,
  UNARY_EXPRESSION as _UNARY_EXPRESSION,
  UPDATE_EXPRESSION as _UPDATE_EXPRESSION,
} from './types.js'

export const COMPOUND = _COMPOUND
export const IDENTIFIER = _IDENTIFIER
export const LITERAL = _LITERAL
export const PROPERTY = _PROPERTY

export const ARRAY_EXPRESSION = _ARRAY_EXPRESSION
export const ASSIGN_EXPRESSION = _ASSIGN_EXPRESSION
export const BINARY_EXPRESSION = _BINARY_EXPRESSION
export const CALL_EXPRESSION = _CALL_EXPRESSION
export const CONDITION_EXPRESSION = _CONDITION_EXPRESSION
export const MEMBER_EXPRESSION = _MEMBER_EXPRESSION
export const OBJECT_EXPRESSION = _OBJECT_EXPRESSION
export const SEQUENCE_EXPRESSION = _SEQUENCE_EXPRESSION
export const UNARY_EXPRESSION = _UNARY_EXPRESSION
export const UPDATE_EXPRESSION = _UPDATE_EXPRESSION

export const interpret = (expression, context) => {
  return _reduce(_parse(expression), context)
}
export const parse = _parse
export const reduce = _reduce

export default {
  COMPOUND: _COMPOUND,
  IDENTIFIER: _IDENTIFIER,
  LITERAL: _LITERAL,
  PROPERTY: _PROPERTY,

  ARRAY_EXPRESSION: _ARRAY_EXPRESSION,
  ASSIGN_EXPRESSION: _ASSIGN_EXPRESSION,
  BINARY_EXPRESSION: _BINARY_EXPRESSION,
  CALL_EXPRESSION: _CALL_EXPRESSION,
  CONDITION_EXPRESSION: _CONDITION_EXPRESSION,
  MEMBER_EXPRESSION: _MEMBER_EXPRESSION,
  OBJECT_EXPRESSION: _OBJECT_EXPRESSION,
  SEQUENCE_EXPRESSION: _SEQUENCE_EXPRESSION,
  UNARY_EXPRESSION: _UNARY_EXPRESSION,
  UPDATE_EXPRESSION: _UPDATE_EXPRESSION,

  interpret: interpret,
  parse: _parse,
  reduce: _reduce,
}
