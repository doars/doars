{"version":3,"file":"doars-fetch.esm.js","sources":["../../utils/src/ObjectUtils.js","../src/utils/FetchUtils.js","../src/factories/contexts/fetch.js","../src/DoarsFetch.js"],"sourcesContent":["/**\n * Deeply assign a series of objects properties together.\n * @param {Object} target Target object to merge to.\n * @param  {...Object} sources Objects to merge into the target.\n */\nexport const deepAssign = (target, ...sources) => {\n  if (!sources.length) {\n    return target\n  }\n  const source = sources.shift()\n\n  if (isObject(target) && isObject(source)) {\n    for (const key in source) {\n      if (isObject(source[key])) {\n        if (!target[key]) {\n          Object.assign(target, {\n            [key]: {},\n          })\n        }\n        deepAssign(target[key], source[key])\n      } else if (Array.isArray(source[key])) {\n        target[key] = source[key].map((value) => {\n          if (isObject(value)) {\n            return deepAssign({}, value)\n          }\n          return value\n        })\n      } else {\n        Object.assign(target, {\n          [key]: source[key],\n        })\n      }\n    }\n  }\n\n  return deepAssign(target, ...sources)\n}\n\n/**\n * Get value at path on object.\n * @param {Object} object Object to get from.\n * @param  {Array<String>} path Path to value.\n * @returns {Any} value at path.\n */\nexport const get = (object, path) => {\n  let objectTemp = object\n  let i = 0\n  for (; i < path.length - 1; i++) {\n    objectTemp = objectTemp[path[i]]\n  }\n  return objectTemp[path[i]]\n}\n\n/**\n * Check whether the value is an object.\n * @param {Any} value Value of unknown type.\n * @returns Whether the value is an object.\n */\nexport const isObject = (value) => {\n  return (value && typeof value === 'object' && !Array.isArray(value))\n}\n\n/**\n * Set value on path at object.\n * @param {Object} object Object to set on.\n * @param {Array<String>} path Path to value.\n * @param {Any} value Value to set.\n */\nexport const set = (object, path, value) => {\n  // Exit early if not an object.\n  if (typeof (object) !== 'object') {\n    return\n  }\n\n  let i = 0\n  for (; i < path.length - 1; i++) {\n    object = object[path[i]]\n\n    // Exit early if not an object.\n    if (typeof (object) !== 'object') {\n      return\n    }\n  }\n  object[path[i]] = value\n}\n\nexport default {\n  deepAssign: deepAssign,\n  get: get,\n  isObject: isObject,\n  set: set,\n}\n","export const parseResponse = (response, type) => {\n  let promise\n  switch (String.prototype.toLowerCase.call(type)) {\n    default:\n      console.warn('Unknown response type \"' + type + '\" used when using the $fetch context.')\n      break\n\n    case 'arraybuffer':\n      promise = response.arrayBuffer()\n      break\n\n    case 'blob':\n      promise = response.blob()\n      break\n\n    case 'formdata':\n      promise = response.formData()\n      break\n\n    case 'json':\n      promise = response.json()\n      break\n\n    // HTML and xml need to be converted to text before being able to be parsed.\n    case 'element':\n    case 'html':\n    case 'svg':\n    case 'text':\n    case 'xml':\n      promise = response.text()\n      break\n  }\n\n  if (!promise) {\n    return null\n  }\n\n  return promise\n    .then((response) => {\n      switch (type) {\n        // Convert from html to HTMLElement inside a document fragment.\n        case 'element':\n          const template = document.createElement('template')\n          template.innerHTML = response\n          response = template.content.childNodes[0]\n          break\n\n        // Parse some values via the DOM parser.\n        case 'html':\n          response = (new DOMParser()).parseFromString(response, 'text/html')\n          break\n        case 'svg':\n          response = (new DOMParser()).parseFromString(response, 'image/svg+xml')\n          break\n        case 'xml':\n          response = (new DOMParser()).parseFromString(response, 'application/xml')\n          break\n      }\n\n      return response\n    })\n}\n\nexport const responseType = (response) => {\n  switch (String.prototype.toLowerCase(response.headers.get('content-type'))) {\n    case 'text/html':\n      return 'html'\n\n    case 'application/json':\n    case 'application/ld+json':\n    case 'application/vnd.api+json':\n      return 'json'\n\n    case 'image/svg+xml':\n      return 'svg'\n\n    case 'text/plain':\n      return 'text'\n\n    case 'application/xml':\n    case 'text/xml':\n      return 'xml'\n  }\n\n  return null\n}\n","// Import utils.\nimport { deepAssign } from '@doars/utils/src/ObjectUtils.js'\nimport { parseResponse, responseType } from '../../utils/FetchUtils.js'\n\nexport default ({ defaultInit }) => {\n  return {\n    name: '$fetch',\n\n    create: () => {\n      return {\n        value: (url, init = null) => {\n          // Apply default options to init.\n          if (defaultInit) {\n            init = deepAssign({}, defaultInit, init)\n          }\n\n          // Extract optional return type.\n          let returnType = init.returnType ? init.returnType : null\n          delete init.returnType\n\n          // Perform and process fetch request.\n          return fetch(url, init)\n            .then((response) => {\n              // Automatically base return type on header.\n              if (returnType === 'auto' && response.headers.get('content-type')) {\n                returnType = responseType(response)\n              }\n\n              // Parse response based on return type.\n              if (returnType) {\n                response = parseResponse(response, returnType)\n              }\n\n              return response\n            })\n        },\n      }\n    },\n  }\n}\n","// Import contexts.\nimport createFetchContext from './factories/contexts/fetch.js'\n\nexport default class DoarsFetch {\n  /**\n   * Create plugin instance.\n   * @param {Doars} library Doars instance to add onto.\n   * @param {Object} options The plugin options.\n   */\n  constructor(library, options = null) {\n    // Clone options.\n    options = Object.assign({\n      defaultInit: {},\n    }, options)\n\n    // Create contexts.\n    const fetchContext = createFetchContext(options)\n\n    // Enable plugin when library is enabling.\n    library.addEventListener('enabling', () => {\n      library.addContexts(0, fetchContext)\n    })\n\n    // Disable plugin when library is disabling.\n    library.addEventListener('disabling', () => {\n      library.removeContexts(fetchContext)\n    })\n  }\n}\n"],"names":["deepAssign","target","sources","length","source","shift","isObject","key","Object","assign","Array","isArray","map","value","parseResponse","response","type","promise","String","prototype","toLowerCase","call","console","warn","arrayBuffer","blob","formData","json","text","then","template","document","createElement","innerHTML","content","childNodes","DOMParser","parseFromString","responseType","headers","get","defaultInit","name","create","url","init","returnType","fetch","DoarsFetch","library","options","fetchContext","createFetchContext","addEventListener","addContexts","removeContexts"],"mappings":"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"}