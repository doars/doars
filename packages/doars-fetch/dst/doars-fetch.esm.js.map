{"version":3,"file":"doars-fetch.esm.js","sources":["../../doars/src/utils/ObjectUtils.js","../src/utils/FetchUtils.js","../src/factories/contexts/fetch.js","../src/DoarsFetch.js"],"sourcesContent":["/**\n * Deeply assign a series of objects properties together.\n * @param {Object} target Target object to merge to.\n * @param  {...Object} sources Objects to merge into the target.\n */\nexport const deepAssign = (target, ...sources) => {\n  if (!sources.length) {\n    return target\n  }\n  const source = sources.shift()\n\n  if (isObject(target) && isObject(source)) {\n    for (const key in source) {\n      if (isObject(source[key])) {\n        if (!target[key]) {\n          Object.assign(target, {\n            [key]: {},\n          })\n        }\n        deepAssign(target[key], source[key])\n      } else if (Array.isArray(source[key])) {\n        target[key] = source[key].map((value) => {\n          if (isObject(value)) {\n            return deepAssign({}, value)\n          }\n          return value\n        })\n      } else {\n        Object.assign(target, {\n          [key]: source[key],\n        })\n      }\n    }\n  }\n\n  return deepAssign(target, ...sources)\n}\n\n/**\n * Get value at path on object.\n * @param {Object} object Object to get from.\n * @param  {Array<String>} path Path to value.\n * @returns {Any} value at path.\n */\nexport const get = (object, path) => {\n  let objectTemp = object\n  let i = 0\n  for (; i < path.length - 1; i++) {\n    objectTemp = objectTemp[path[i]]\n  }\n  return objectTemp[path[i]]\n}\n\n/**\n * Check whether the value is an object.\n * @param {Any} value Value of unknown type.\n * @returns Whether the value is an object.\n */\nexport const isObject = (value) => {\n  return (value && typeof value === 'object' && !Array.isArray(value))\n}\n\n/**\n * Set value on path at object.\n * @param {Object} object Object to set on.\n * @param {Array<String>} path Path to value.\n * @param {Any} value Value to set.\n */\nexport const set = (object, path, value) => {\n  // Exit early if not an object.\n  if (typeof (object) !== 'object') {\n    return\n  }\n\n  let i = 0\n  for (; i < path.length - 1; i++) {\n    object = object[path[i]]\n\n    // Exit early if not an object.\n    if (typeof (object) !== 'object') {\n      return\n    }\n  }\n  object[path[i]] = value\n}\n\nexport default {\n  deepAssign: deepAssign,\n  get: get,\n  isObject: isObject,\n  set: set,\n}\n","export const parseResponse = (response, type) => {\n  let promise\n  switch (String.prototype.toLowerCase.call(type)) {\n    default:\n      console.warn('Unknown response type \"' + type + '\" used when using the $fetch context.')\n      break\n\n    case 'arraybuffer':\n      promise = response.arrayBuffer()\n      break\n\n    case 'blob':\n      promise = response.blob()\n      break\n\n    case 'formdata':\n      promise = response.formData()\n      break\n\n    case 'json':\n      promise = response.json()\n      break\n\n    // HTML and xml need to be converted to text before being able to be parsed.\n    case 'element':\n    case 'html':\n    case 'svg':\n    case 'text':\n    case 'xml':\n      promise = response.text()\n      break\n  }\n\n  if (!promise) {\n    return null\n  }\n\n  return promise\n    .then((response) => {\n      switch (type) {\n        // Convert from html to HTMLElement inside a document fragment.\n        case 'element':\n          const template = document.createElement('template')\n          template.innerHTML = response\n          response = template.content.childNodes[0]\n          break\n\n        // Parse some values via the DOM parser.\n        case 'html':\n          response = (new DOMParser()).parseFromString(response, 'text/html')\n          break\n        case 'svg':\n          response = (new DOMParser()).parseFromString(response, 'image/svg+xml')\n          break\n        case 'xml':\n          response = (new DOMParser()).parseFromString(response, 'application/xml')\n          break\n      }\n\n      return response\n    })\n}\n\nexport const responseType = (response) => {\n  switch (String.prototype.toLowerCase(response.headers.get('content-type'))) {\n    case 'text/html':\n      return 'html'\n\n    case 'application/json':\n    case 'application/ld+json':\n    case 'application/vnd.api+json':\n      return 'json'\n\n    case 'image/svg+xml':\n      return 'svg'\n\n    case 'text/plain':\n      return 'text'\n\n    case 'application/xml':\n    case 'text/xml':\n      return 'xml'\n  }\n\n  return null\n}\n","// Import utils.\nimport { deepAssign } from '@doars/doars/src/utils/ObjectUtils.js'\nimport { parseResponse, responseType } from '../../utils/FetchUtils.js'\n\nexport default (options) => {\n  return {\n    name: '$fetch',\n\n    create: () => {\n      return {\n        value: (url, init = null) => {\n          // Apply default options to init.\n          if (options.defaultInit) {\n            init = deepAssign(options.defaultInit, init)\n          }\n\n          // Extract optional return type.\n          let returnType = init.returnType ?? null\n          delete init.returnType\n\n          // Perform and process fetch request.\n          return fetch(url, init)\n            .then((response) => {\n              // Automatically base return type on header.\n              if (returnType === 'auto' && response.headers.get('content-type')) {\n                returnType = responseType(response)\n              }\n\n              // Parse response based on return type.\n              if (returnType) {\n                response = parseResponse(response, returnType)\n              }\n\n              return response\n            })\n        },\n      }\n    },\n  }\n}\n","// Import contexts.\nimport createFetchContext from './factories/contexts/fetch.js'\n\nexport default class DoarsFetch {\n  /**\n   * Create plugin instance.\n   * @param {Doars} library Doars instance to add onto.\n   * @param {Object} options The plugin options.\n   */\n  constructor(library, options = null) {\n    // Clone options.\n    options = Object.assign({\n      defaultInit: {},\n    }, options)\n\n    // Create contexts.\n    const fetchContext = createFetchContext(options)\n\n    // Enable plugin when library is enabling.\n    library.addEventListener('enabling', () => {\n      library.addContexts(0, fetchContext)\n    })\n\n    // Disable plugin when library is disabling.\n    library.addEventListener('disabling', () => {\n      library.removeContexts(fetchContext)\n    })\n  }\n}\n"],"names":["deepAssign","target","sources","length","source","shift","isObject","key","Object","assign","Array","isArray","map","value","parseResponse","response","type","promise","String","prototype","toLowerCase","call","console","warn","arrayBuffer","blob","formData","json","text","then","template","document","createElement","innerHTML","content","childNodes","DOMParser","parseFromString","responseType","headers","get","options","name","create","url","init","defaultInit","returnType","fetch","DoarsFetch","library","fetchContext","createFetchContext","addEventListener","addContexts","removeContexts"],"mappings":"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"}