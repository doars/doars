{
  "version": 3,
  "sources": ["../../common/src/utilities/Object.js", "../src/utilities/Fetch.js", "../src/factories/contexts/fetch.js", "../src/DoarsFetch.js", "../src/DoarsFetch.iife.js"],
  "sourcesContent": ["/**\n * Deeply assign a series of objects properties together.\n * @param {Object} target Target object to merge to.\n * @param  {...Object} sources Objects to merge into the target.\n */\nexport const deepAssign = (target, ...sources) => {\n  if (!sources.length) {\n    return target\n  }\n  const source = sources.shift()\n\n  if (isObject(target) && isObject(source)) {\n    for (const key in source) {\n      if (isObject(source[key])) {\n        if (!target[key]) {\n          Object.assign(target, {\n            [key]: {},\n          })\n        }\n        deepAssign(target[key], source[key])\n      } else if (Array.isArray(source[key])) {\n        target[key] = source[key].map((value) => {\n          if (isObject(value)) {\n            return deepAssign({}, value)\n          }\n          return value\n        })\n      } else {\n        Object.assign(target, {\n          [key]: source[key],\n        })\n      }\n    }\n  }\n\n  return deepAssign(target, ...sources)\n}\n\n/**\n * Get value at path on object.\n * @param {Object} object Object to get from.\n * @param  {Array<String>} path Path to value.\n * @returns {Any} value at path.\n */\nexport const getDeeply = (object, path) => {\n  let objectTemp = object\n  let i = 0\n  for (; i < path.length - 1; i++) {\n    objectTemp = objectTemp[path[i]]\n  }\n  return objectTemp[path[i]]\n}\n\n/**\n * Check whether the value is an object.\n * @param {Any} value Value of unknown type.\n * @returns Whether the value is an object.\n */\nexport const isObject = (value) => {\n  return (value && typeof value === 'object' && !Array.isArray(value))\n}\n\n/**\n * Set value on path at object.\n * @param {Object} object Object to set on.\n * @param {Array<String>} path Path to value.\n * @param {Any} value Value to set.\n */\nexport const setDeeply = (object, path, value) => {\n  // Exit early if not an object.\n  if (typeof (object) !== 'object') {\n    return\n  }\n\n  let i = 0\n  for (; i < path.length - 1; i++) {\n    object = object[path[i]]\n\n    // Exit early if not an object.\n    if (typeof (object) !== 'object') {\n      return\n    }\n  }\n  object[path[i]] = value\n}\n\nexport default {\n  deepAssign,\n  getDeeply,\n  isObject,\n  setDeeply,\n}\n", "export const parseResponse = (response, type) => {\n  let promise\n  switch (String.prototype.toLowerCase.call(type)) {\n    default:\n      console.warn('Unknown response type \"' + type + '\" used when using the $fetch context.')\n      break\n\n    case 'arraybuffer':\n      promise = response.arrayBuffer()\n      break\n\n    case 'blob':\n      promise = response.blob()\n      break\n\n    case 'formdata':\n      promise = response.formData()\n      break\n\n    case 'json':\n      promise = response.json()\n      break\n\n    // HTML and xml need to be converted to text before being able to be parsed.\n    case 'element':\n    case 'html':\n    case 'svg':\n    case 'text':\n    case 'xml':\n      promise = response.text()\n      break\n  }\n\n  if (!promise) {\n    return null\n  }\n\n  return promise\n    .then((response) => {\n      switch (type) {\n        // Convert from html to HTMLElement inside a document fragment.\n        case 'element':\n          const template = document.createElement('template')\n          template.innerHTML = response\n          response = template.content.childNodes[0]\n          break\n\n        // Parse some values via the DOM parser.\n        case 'html':\n          response = (new DOMParser()).parseFromString(response, 'text/html')\n          break\n        case 'svg':\n          response = (new DOMParser()).parseFromString(response, 'image/svg+xml')\n          break\n        case 'xml':\n          response = (new DOMParser()).parseFromString(response, 'application/xml')\n          break\n      }\n\n      return response\n    })\n}\n\nexport const responseType = (response) => {\n  switch (String.prototype.toLowerCase(response.headers.get('content-type'))) {\n    case 'text/html':\n      return 'html'\n\n    case 'application/json':\n    case 'application/ld+json':\n    case 'application/vnd.api+json':\n      return 'json'\n\n    case 'image/svg+xml':\n      return 'svg'\n\n    case 'text/plain':\n      return 'text'\n\n    case 'application/xml':\n    case 'text/xml':\n      return 'xml'\n  }\n\n  return null\n}\n", "// Import utilities.\nimport { deepAssign } from '@doars/common/src/utilities/Object.js'\nimport { parseResponse, responseType } from '../../utilities/Fetch.js'\n\nexport default ({ defaultInit }) => {\n  return {\n    name: '$fetch',\n\n    create: () => {\n      return {\n        value: (url, init = null) => {\n          // Apply default options to init.\n          if (defaultInit) {\n            init = deepAssign({}, defaultInit, init)\n          }\n\n          // Extract optional return type.\n          let returnType = init.returnType ? init.returnType : null\n          delete init.returnType\n\n          // Perform and process fetch request.\n          return fetch(url, init)\n            .then((response) => {\n              // Automatically base return type on header.\n              if (returnType === 'auto' && response.headers.get('content-type')) {\n                returnType = responseType(response)\n              }\n\n              // Parse response based on return type.\n              if (returnType) {\n                response = parseResponse(response, returnType)\n              }\n\n              return response\n            })\n        },\n      }\n    },\n  }\n}\n", "// Import contexts.\nimport createFetchContext from './factories/contexts/fetch.js'\n\n/**\n * Create plugin instance.\n * @param {Doars} library Doars instance to add onto.\n * @param {Object} options The plugin options.\n */\nexport default function (\n  library,\n  options = null\n) {\n  // Clone options.\n  options = Object.assign({\n    defaultInit: {},\n\n    encodingConverters: {\n      'application/json': () => { },\n      'application/x-www-form-urlencoded': () => { },\n      'multipart/formdata': () => { },\n    },\n  }, options)\n\n  // Set private variables.\n  let isEnabled = false\n  // Store contexts and directives.\n  let fetchContext\n\n  const onEnable = function () {\n    // Create and add contexts and directives.\n    fetchContext = createFetchContext(options)\n    library.addContexts(0, fetchContext)\n  }\n  const onDisable = function () {\n    // Remove contexts and directives.\n    library.removeContexts(fetchContext)\n    fetchContext = null\n  }\n\n  this.disable = function () {\n    // Check if library is disabled.\n    if (!library.getEnabled() && isEnabled) {\n      isEnabled = false\n\n      // Stop listening to enable state of the library.\n      library.removeEventListener('enabling', onEnable)\n      library.removeEventListener('disabling', onDisable)\n    }\n  }\n\n  this.enable = function () {\n    if (!isEnabled) {\n      isEnabled = true\n\n      // Listen to enable state of the library.\n      library.addEventListener('enabling', onEnable)\n      library.addEventListener('disabling', onDisable)\n    }\n  }\n\n  // Automatically enable plugin.\n  this.enable()\n}\n", "import DoarsFetch from './DoarsFetch.js'\n\nwindow.DoarsFetch = DoarsFetch\n"],
  "mappings": "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",
  "names": ["response"]
}
