var n=Symbol("INTERSECT"),d={NONE:0,BUFFER:1,DEBOUNCE:2,THROTTLE:5,DELAY:6},a=({intersectDirectiveName:l},t)=>({name:l,update:(i,e,f)=>{let s=e.getElement(),c=e.getKey(),r=e.getValue();if(e[n]){if(e[n].value===r)return;t.remove(s,e[n].handler),e[n].timeout&&clearTimeout(e[n].timeout),delete e[n]}let o=e.getModifiers(),m=d.NONE;o.buffer?(m=d.BUFFER,o.buffer===!0&&(o.buffer=5)):o.debounce?(m=d.DEBOUNCE,o.debounce===!0&&(o.debounce=500)):o.throttle?(m=d.THROTTLE,o.throttle===!0&&(o.throttle=500)):o.delay&&(m=d.DELAY,o.delay===!0&&(o.delay=500));let h=E=>{if(!(e[n].isIntersecting!==E.isIntersecting))return;if(e[n].isIntersecting=E.isIntersecting,c==="enter"&&!E.isIntersecting||c==="leave"&&E.isIntersecting){e[n].timeout&&(clearTimeout(e[n].timeout),e[n].timeout=null);return}let u=()=>{f(i,e.clone(),r,{$event:E},{return:!1}),e[n].buffer=[]};if(e[n].buffer.push(E),m===d.BUFFER){if(e[n].buffer.length<o.buffer)return;u()}else if(m===d.BUFFER)e[n].timeout&&(clearTimeout(e[n].timeout),e[n].timeout=null),e[n].timeout=setTimeout(u,o.debounce);else if(m===d.THROTTLE){let T=window.performance.now();if(e[n].lastExecution&&T-e[n].lastExecution<o.throttle)return;u(),e[n].lastExecution=T}else d.DELAY?e[n].timeout=setTimeout(u,o.delay):u()};t.add(s,h),e[n]={buffer:[],handler:h,isIntersecting:!1,timeout:e[n]?e[n].timeout:null,value:r}},destroy:(i,e)=>{if(!e[n])return;let f=e.getElement();t.remove(f,e[n].handler),e[n].timeout&&clearTimeout(e[n].timeout),delete e[n]}});var g=class{constructor(t=null){let i=new WeakMap,e=s=>{for(let c of s)for(let r of i.get(c.target))r(c)},f=new window.IntersectionObserver(e,t);this.add=(s,c)=>{i.has(s)||i.set(s,[]),i.get(s).push(c),f.observe(s)},this.remove=(s,c)=>{if(!i.has(s))return;let r=i.get(s),o=r.indexOf(c);o>=0&&r.splice(o,1),r.length===0&&(i.delete(s),f.unobserve(s))}}};function D(l,t=null){t=Object.assign({intersectDirectiveName:"intersect",intersectionRoot:null,intersectionMargin:"0px",intersectionThreshold:0},t);let i=!1,e=new g({root:t.intersectionRoot?t.intersectionRoot:l.getOptions().root,rootMargin:t.intersectionMargin,threshold:t.intersectionThreshold}),f=a(t,e),s=()=>{l.addDirectives(-1,f)},c=()=>{l.removeDirectives(f)};this.disable=()=>{!l.getEnabled()&&i&&(i=!1,l.removeEventListener("enabling",s),l.removeEventListener("disabling",c))},this.enable=()=>{i||(i=!0,l.addEventListener("enabling",s),l.addEventListener("disabling",c))},this.enable()}export{D as default};
//# sourceMappingURL=doars-intersect.esm.min.js.map
