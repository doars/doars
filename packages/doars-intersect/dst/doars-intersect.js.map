{
  "version": 3,
  "sources": ["../src/symbols.js", "../src/factories/directives/intersect.js", "../src/IntersectionObserver.js", "../src/DoarsIntersect.js"],
  "sourcesContent": ["export const INTERSECT = Symbol('VIEW')\n", "// Import symbols.\nimport { INTERSECT } from '../../symbols.js'\n\n// Declare constants.\nconst EXECUTION_MODIFIERS = {\n  NONE: 0,\n  BUFFER: 1,\n  DEBOUNCE: 2,\n  THROTTLE: 3,\n}\n\nexport default (observer) => ({\n  name: 'intersect',\n\n  update: (component, attribute, { processExpression }) => {\n    // Deconstruct attribute.\n    const element = attribute.getElement()\n    const key = attribute.getKey()\n    const value = attribute.getValue()\n\n    // Check if existing handler exists.\n    if (attribute[INTERSECT]) {\n      // Exit early if value has not changed.\n      if (attribute[INTERSECT].value === value) {\n        return\n      }\n\n      // Stop observing the element.\n      observer.remove(element, attribute[INTERSECT].handler)\n      // Clear any ongoing timeouts.\n      if (attribute[INTERSECT].timeout) {\n        clearTimeout(attribute[INTERSECT].timeout)\n      }\n      // Delete directive data.\n      delete attribute[INTERSECT]\n    }\n\n    // Deconstruct attribute.\n    const modifiers = attribute.getModifiers()\n\n    // Process execution modifiers.\n    let executionModifier = EXECUTION_MODIFIERS.NONE\n    if (modifiers.buffer) {\n      executionModifier = EXECUTION_MODIFIERS.BUFFER\n      if (modifiers.buffer === true) {\n        modifiers.buffer = 5\n      }\n    } else if (modifiers.debounce) {\n      executionModifier = EXECUTION_MODIFIERS.DEBOUNCE\n      if (modifiers.debounce === true) {\n        modifiers.debounce = 500\n      }\n    } else if (modifiers.throttle) {\n      executionModifier = EXECUTION_MODIFIERS.THROTTLE\n      if (modifiers.throttle === true) {\n        modifiers.throttle = 500\n      }\n    }\n\n    // Create intersection handler.\n    const handler = (event) => {\n      // Check if intersection has changed.\n      const isChanged = attribute[INTERSECT].isIntersecting !== event.isIntersecting\n      if (!isChanged) {\n        return\n      }\n\n      // Update state in attribute data.\n      attribute[INTERSECT].isIntersecting = event.isIntersecting\n\n      // Exit early if expression should not be executed.\n      if ((key === 'enter' && !event.isIntersecting) || (key === 'leave' && event.isIntersecting)) {\n        // Clear existing timeout.\n        if (attribute[INTERSECT].timeout) {\n          clearTimeout(attribute[INTERSECT].timeout)\n          attribute[INTERSECT].timeout = null\n        }\n        return\n      }\n\n      const execute = () => {\n        // Execute value using a copy of the attribute since this attribute should not update based on what contexts will be accessed.\n        processExpression(component, attribute.clone(), value, {\n          $event: event,\n        }, { return: false })\n\n        // Reset the buffer.\n        attribute[INTERSECT].buffer = []\n      }\n\n      // Store event in buffer.\n      attribute[INTERSECT].buffer.push(event)\n\n      // Check if we need to apply an execution modifier.\n      if (executionModifier === EXECUTION_MODIFIERS.BUFFER) {\n        // Exit early if buffer is not full.\n        if (attribute[INTERSECT].buffer.length < modifiers.buffer) {\n          return\n        }\n\n        execute()\n      } else if (executionModifier === EXECUTION_MODIFIERS.BUFFER) {\n        // Clear existing timeout.\n        if (attribute[INTERSECT].timeout) {\n          clearTimeout(attribute[INTERSECT].timeout)\n          attribute[INTERSECT].timeout = null\n        }\n\n        // Setup timeout and execute expression when it finishes.\n        attribute[INTERSECT].timeout = setTimeout(execute, modifiers.debounce)\n      } else if (executionModifier === EXECUTION_MODIFIERS.THROTTLE) {\n        // Get current time in milliseconds.\n        const now = window.performance.now()\n\n        // Exit early if throttle time has not passed.\n        if (attribute[INTERSECT].lastExecution && now - attribute[INTERSECT].lastExecution < modifiers.throttle) {\n          return\n        }\n\n        execute()\n\n        // Store new latest execution time.\n        attribute[INTERSECT].lastExecution = now\n      } else {\n        // Execute expression.\n        execute()\n      }\n    }\n\n    // Start observing the element.\n    observer.add(element, handler)\n\n    // Store handler.\n    attribute[INTERSECT] = {\n      buffer: [],\n      handler,\n      isIntersecting: false,\n      timeout: attribute[INTERSECT] ? attribute[INTERSECT].timeout : null,\n      value,\n    }\n  },\n\n  destroy: (component, attribute) => {\n    // Check if a handler exists.\n    if (!attribute[INTERSECT]) {\n      return\n    }\n\n    // Deconstruct attribute.\n    const element = attribute.getElement()\n\n    // Stop observing the element.\n    observer.remove(element, attribute[INTERSECT].handler)\n    // Clear any ongoing timeouts.\n    if (attribute[INTERSECT].timeout) {\n      clearTimeout(attribute[INTERSECT].timeout)\n    }\n    // Delete directive data.\n    delete attribute[INTERSECT]\n  },\n})\n", "export default class IntersectionObserver {\n  /**\n   * Create observer instance.\n   * @param {Object} options Intersection observer options.\n   */\n  constructor(options = null) {\n    // Overwrite default options.\n    options = Object.assign({\n      root: null,\n      rootMargin: '0px',\n      threshold: 0,\n    }, options)\n\n    // Store data per element.\n    const items = new WeakMap()\n\n    /**\n     * Intersection observer handler.\n     * @param {Array<IntersectionObserverEntry>} entries Intersection observer entries.\n     */\n    const intersect = (entries) => {\n      // Invoke callbacks of each entry.\n      for (const entry of entries) {\n        for (const callback of items.get(entry.target)) {\n          callback(entry)\n        }\n      }\n    }\n\n    // Create intersection observer.\n    const intersectionObserver = new IntersectionObserver(intersect, options)\n\n    /**\n     * Add element to observe.\n     * @param {HTMLElement} element Element to observer.\n     * @param {Function} callback Callback to call on intersection change.\n     */\n    this.add = (element, callback) => {\n      // Add callback to list.\n      if (!items.has(element)) {\n        items.set(element, [])\n      }\n      items.get(element).push(callback)\n\n      // Start observing element.\n      intersectionObserver.observe(element)\n    }\n\n    /**\n     * Remove element from observing.\n     * @param {HTMLElement} element Element that is observed.\n     * @param {Function} callback Callback that is called on intersection change.\n     */\n    this.remove = (element, callback) => {\n      // Remove callback from list.\n      if (!items.has(element)) {\n        return\n      }\n      const list = items.get(element)\n      const index = list.indexOf(callback)\n      if (index >= 0) {\n        list.splice(index, 1)\n      }\n\n      // Check if there are no more callbacks.\n      if (list.length === 0) {\n        // Remove element from callbacks list.\n        items.delete(element)\n\n        // Stop observing element.\n        intersectionObserver.unobserve(element)\n      }\n    }\n  }\n}\n", "// Import directives.\nimport createDirectiveIntersect from './factories/directives/intersect.js'\n\n// Import observer.\nimport IntersectionObserver from './IntersectionObserver.js'\n\n/**\n * Create plugin instance.\n * @param {Doars} library Doars instance to add onto.\n * @param {Object} options The plugin options.\n */\nexport default function (\n  library,\n  options = null\n) {\n  // Clone options.\n  options = Object.assign({}, options)\n\n  // Set private variables.\n  let isEnabled = false\n  let directiveView, intersectionObserver\n\n  const onEnable = function () {\n    // Overwrite default options.\n    const _options = Object.assign({}, options)\n    if (!_options.root) {\n      _options.root = library.getOptions().root\n    }\n\n    // Setup observer.\n    intersectionObserver = new IntersectionObserver(options)\n\n    // Create and add directive.\n    directiveView = createDirectiveIntersect(intersectionObserver)\n    library.addDirectives(-1, directiveView)\n  }\n  const onDisable = function () {\n    // Remove directive.\n    library.removeDirectives(directiveView)\n    directiveView = null\n\n    // Remove observer.\n    intersectionObserver = null\n  }\n\n  this.disable = function () {\n    // Check if library is disabled.\n    if (!library.getEnabled() && isEnabled) {\n      isEnabled = false\n\n      // Stop listening to enable state of the library.\n      library.removeEventListener('enabling', onEnable)\n      library.removeEventListener('disabling', onDisable)\n    }\n  }\n\n  this.enable = function () {\n    if (!isEnabled) {\n      isEnabled = true\n\n      // Listen to enable state of the library.\n      library.addEventListener('enabling', onEnable)\n      library.addEventListener('disabling', onDisable)\n    }\n  }\n\n  // Automatically enable plugin.\n  this.enable()\n}\n"],
  "mappings": "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",
  "names": []
}
